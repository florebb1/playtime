<?xml version='1.0' encoding='utf-8'?>
<SQLResource version='1'>
 
<!-- 입장옵션 마스터  조회 -->
<query name='CS_OPTION_Q'><![CDATA[
    SELECT  O.COMP_CD
         ,  O.OPTION_CD
         ,  O.OPTION_NM
         ,  L.LANG_NM
         ,  O.OPT_ITEM_CD
         ,  OI.ITEM_NM      AS OPT_ITEM_NM
         ,  OI.SALE_PRC     AS OPT_ITEM_PRC
         ,  O.USE_YN
      FROM  CS_OPTION       O
         ,  (
                SELECT  COMP_CD
                     ,  PK_COL
                     ,  LANG_NM
                  FROM  LANG_TABLE
                 WHERE  COMP_CD     = ${SCH_COMP_CD}
                   AND  TABLE_NM    = 'CS_OPTION'
                   AND  COL_NM      = 'OPTION_NM'
                   AND  LANGUAGE_TP = ${SCH_LAN_TP}
                   AND  USE_YN      = 'Y'
            )   L
         ,  (
                SELECT  I.COMP_CD
                     ,  I.BRAND_CD
                     ,  I.ITEM_CD
                     ,  NVL(L.ITEM_NM, I.ITEM_NM)   AS ITEM_NM
                     ,  I.SALE_PRC
                  FROM  ITEM        I
                     ,  LANG_ITEM   L
                 WHERE  I.COMP_CD           = L.COMP_CD(+)
                   AND  I.ITEM_CD           = L.ITEM_CD(+)
                   AND  I.COMP_CD           = ${SCH_COMP_CD}
                   AND  I.USE_YN            = 'Y'
                   AND  L.LANGUAGE_TP(+)    = ${SCH_LANGUAGE_TP}
                   AND  L.USE_YN(+)         = 'Y'
            )   OI
     WHERE  L.COMP_CD(+)    = O.COMP_CD
       AND  L.PK_COL(+)     = LPAD(O.OPTION_CD, 5, ' ')
       AND  O.COMP_CD       = OI.COMP_CD(+)
       AND  O.OPT_ITEM_CD   = OI.ITEM_CD(+)
       AND  O.COMP_CD       = ${SCH_COMP_CD}
       AND  (${SCH_OPTION_TXT}  IS NULL OR (O.OPTION_CD LIKE '%'||${SCH_OPTION_TXT}||'%' OR NVL(L.LANG_NM, O.OPTION_NM) LIKE '%'||${SCH_OPTION_TXT}||'%'))
       AND  (${SCH_USE_YN}      IS NULL OR O.USE_YN = ${SCH_USE_YN})
     ORDER  BY O.OPTION_CD
]]></query>

<!-- 입장옵션 마스터 등록 -->
<query name='CS_OPTION_U'><![CDATA[
    MERGE   INTO CS_OPTION
    USING   DUAL
       ON   (
                    COMP_CD     = ${COMP_CD}
                AND OPTION_CD   = ${OPTION_CD}
            )
    WHEN MATCHED  THEN
        UPDATE      
           SET  OPTION_NM       = ${OPTION_NM}
             ,  OPT_ITEM_CD     = ${OPT_ITEM_CD}
             ,  USE_YN          = ${USE_YN}
             ,  UPD_DT          = SYSDATE
             ,  UPD_USER        = ${UPD_USER}
    WHEN NOT MATCHED THEN
        INSERT 
        (
                COMP_CD
             ,  OPTION_CD
             ,  OPTION_NM
             ,  OPT_ITEM_CD
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER    
        ) VALUES (
                ${COMP_CD}
             ,  ${OPTION_CD}
             ,  ${OPTION_NM}
             ,  ${OPT_ITEM_CD}
             ,  ${USE_YN}
             ,  SYSDATE
             ,  ${UPD_USER}
             ,  SYSDATE
             ,  ${UPD_USER} 
        )
]]></query>

<!-- 입장옵션 마스터  조회 -->
<query name='CS_OPTION_S_Q'><![CDATA[
    SELECT  O.COMP_CD
         ,  O.OPTION_CD
         ,  NVL(L.LANG_NM, O.OPTION_NM)     AS OPTION_NM
      FROM  CS_OPTION   O
         ,  (
                SELECT  COMP_CD
                     ,  PK_COL
                     ,  LANG_NM
                  FROM  LANG_TABLE
                 WHERE  COMP_CD     = ${SCH_COMP_CD}
                   AND  TABLE_NM    = 'CS_OPTION'
                   AND  COL_NM      = 'OPTION_NM'
                   AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                   AND  USE_YN      = 'Y'
            )   L
     WHERE  L.COMP_CD(+)    = O.COMP_CD
       AND  L.PK_COL(+)     = LPAD(O.OPTION_CD, 5, ' ')
       AND  O.COMP_CD       = ${SCH_COMP_CD}
     ORDER  BY O.OPTION_CD
]]></query>

<query name='STORE_Q'><![CDATA[
    SELECT  S.COMP_CD
         ,  S.BRAND_CD
         ,  S.STOR_CD
         ,  NVL(L.STOR_NM, S.STOR_NM)   AS STOR_NM
      FROM  STORE           S
         ,  BRAND           B
         ,  (
                SELECT  COMP_CD
                     ,  BRAND_CD
                     ,  STOR_CD
                     ,  STOR_NM
                  FROM  LANG_STORE
                 WHERE  COMP_CD     = ${SCH_COMP_CD}
                   AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                   AND  USE_YN      = 'Y'
            )   L
     WHERE  S.COMP_CD       = B.COMP_CD
       AND  S.BRAND_CD      = B.BRAND_CD
       AND  S.COMP_CD       = L.COMP_CD(+)
       AND  S.BRAND_CD      = L.BRAND_CD(+)
       AND  S.STOR_CD       = L.STOR_CD(+)
       AND  S.COMP_CD       = ${SCH_COMP_CD}
       AND  S.USE_YN        = 'Y'
       AND  (${SCH_BRAND_CLASS} IS NULL OR B.BRAND_CLASS    = ${SCH_BRAND_CLASS})
       AND  (${SCH_BRAND_CD}    IS NULL OR S.BRAND_CD       = ${SCH_BRAND_CD})
     ORDER  BY S.BRAND_CD, S.STOR_CD
]]></query>

<query name='CS_OPTION_STORE_Q'><![CDATA[
    SELECT  OS.COMP_CD
         ,  OS.OPTION_CD
         ,  OS.OPTION_NM
         ,  OS.BRAND_CD
         ,  OS.STOR_CD
         ,  S.STOR_NM
         ,  NVL(OI.SALE_PRC, OS.SALE_PRC)   AS OPT_ITEM_PRC
         ,  OS.USE_YN
      FROM  (
                SELECT  OS.COMP_CD
                     ,  OS.OPTION_CD
                     ,  O.OPTION_NM
                     ,  OS.BRAND_CD
                     ,  OS.STOR_CD
                     ,  O.OPT_ITEM_CD
                     ,  O.SALE_PRC
                     ,  OS.USE_YN
                  FROM  CS_OPTION_STORE     OS
                     ,  (
                            SELECT  O.COMP_CD
                                 ,  O.OPTION_CD
                                 ,  NVL(L.LANG_NM, O.OPTION_NM)     AS OPTION_NM
                                 ,  O.OPT_ITEM_CD
                                 ,  I.SALE_PRC
                              FROM  CS_OPTION   O
                                 ,  ITEM        I
                                 ,  (
                                        SELECT  COMP_CD
                                             ,  PK_COL
                                             ,  LANG_NM
                                          FROM  LANG_TABLE
                                         WHERE  COMP_CD     = ${SCH_COMP_CD}
                                           AND  TABLE_NM    = 'CS_OPTION'
                                           AND  COL_NM      = 'OPTION_NM'
                                           AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                                           AND  USE_YN      = 'Y'
                                    )   L
                             WHERE  O.COMP_CD       = I.COMP_CD(+)
                               AND  O.OPT_ITEM_CD   = I.ITEM_CD(+)
                               AND  L.COMP_CD(+)    = O.COMP_CD
                               AND  L.PK_COL(+)     = LPAD(O.OPTION_CD, 5, ' ')
                               AND  O.COMP_CD       = ${SCH_COMP_CD}
                               AND  (${SCH_OPTION_TXT} IS NULL OR (O.OPTION_CD LIKE '%'||${SCH_OPTION_TXT}||'%' OR NVL(L.LANG_NM, O.OPTION_NM) LIKE '%'||${SCH_OPTION_TXT}||'%'))
                        )   O
                 WHERE  OS.COMP_CD      = O.COMP_CD
                   AND  OS.OPTION_CD    = O.OPTION_CD
                   AND  OS.COMP_CD      = ${SCH_COMP_CD}
                   AND  (${SCH_BRAND_CD}    IS NULL OR OS.BRAND_CD  = ${SCH_BRAND_CD})
                   AND  (${SCH_USE_YN}      IS NULL OR OS.USE_YN    = ${SCH_USE_YN})
            )   OS
         ,  (
                SELECT  S.COMP_CD
                     ,  S.BRAND_CD
                     ,  S.STOR_CD
                     ,  NVL(L.STOR_NM, S.STOR_NM)   AS STOR_NM
                  FROM  STORE           S
                     ,  BRAND           B
                     ,  (
                            SELECT  COMP_CD
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  STOR_NM
                              FROM  LANG_STORE
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                               AND  USE_YN      = 'Y'
                        )   L
                 WHERE  S.COMP_CD       = B.COMP_CD
                   AND  S.BRAND_CD      = B.BRAND_CD
                   AND  S.COMP_CD       = L.COMP_CD(+)
                   AND  S.BRAND_CD      = L.BRAND_CD(+)
                   AND  S.STOR_CD       = L.STOR_CD(+)
                   AND  S.COMP_CD       = ${SCH_COMP_CD}
                   AND  S.USE_YN        = 'Y'
                   AND  (${SCH_BRAND_CLASS} IS NULL OR B.BRAND_CLASS    = ${SCH_BRAND_CLASS})
                   AND  (${SCH_BRAND_CD}    IS NULL OR S.BRAND_CD       = ${SCH_BRAND_CD})
                   AND  (${SCH_STOR_TXT}    IS NULL OR (S.STOR_CD LIKE '%'||${SCH_STOR_TXT}||'%' OR NVL(L.STOR_NM, S.STOR_NM) LIKE '%'||${SCH_STOR_TXT}||'%'))
            )   S
         ,  (
                SELECT  COMP_CD
                     ,  BRAND_CD
                     ,  STOR_CD
                     ,  ITEM_CD
                     ,  PRICE       AS SALE_PRC
                  FROM  ITEM_STORE
                 WHERE  COMP_CD     = ${SCH_COMP_CD}
                   AND  (${SCH_BRAND_CD} IS NULL OR BRAND_CD = ${SCH_BRAND_CD})
                   AND  PRC_DIV     = '02'
                   AND  TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN START_DT AND NVL(CLOSE_DT, '99991231')
                   AND  USE_YN      = 'Y'
            )   OI
     WHERE  OS.COMP_CD      = S.COMP_CD
       AND  OS.BRAND_CD     = S.BRAND_CD
       AND  OS.STOR_CD      = S.STOR_CD
       AND  OS.COMP_CD      = OI.COMP_CD(+)
       AND  OS.BRAND_CD     = OI.BRAND_CD(+)
       AND  OS.STOR_CD      = OI.STOR_CD(+)
       AND  OS.OPT_ITEM_CD  = OI.ITEM_CD(+)
     ORDER  BY OS.BRAND_CD, OS.STOR_CD, OS.OPTION_CD
]]></query>

<!-- 입장옵션 점포할당 등록 -->
<query name='CS_OPTION_STORE_U'><![CDATA[
    MERGE   INTO CS_OPTION_STORE
    USING   DUAL
       ON   (
                    COMP_CD     = ${COMP_CD}
                AND OPTION_CD   = ${OPTION_CD}
                AND BRAND_CD    = ${BRAND_CD}
                AND STOR_CD     = ${STOR_CD}
            )
    WHEN MATCHED  THEN
        UPDATE      
           SET  USE_YN          = ${USE_YN}
             ,  UPD_DT          = SYSDATE
             ,  UPD_USER        = ${UPD_USER}
    WHEN NOT MATCHED THEN
        INSERT 
        (
                COMP_CD
             ,  OPTION_CD
             ,  BRAND_CD
             ,  STOR_CD
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER    
        ) VALUES (
                ${COMP_CD}
             ,  ${OPTION_CD}
             ,  ${BRAND_CD}
             ,  ${STOR_CD}
             ,  ${USE_YN}
             ,  SYSDATE
             ,  ${UPD_USER}
             ,  SYSDATE
             ,  ${UPD_USER} 
        )
]]></query>

<!-- 다국어 등록 -->
<query name='LANG_TABLE_U'><![CDATA[
    MERGE INTO LANG_TABLE
    USING DUAL
    ON (
                COMP_CD     = ${COMP_CD}
           AND  TABLE_NM    = ${TABLE_NM}
           AND  COL_NM      = ${COL_NM}
           AND  LANGUAGE_TP = ${LANGUAGE_TP}
           AND  PK_COL      = ${PK_COL}
       )
    WHEN MATCHED  THEN
        UPDATE      
           SET  LANG_NM     = ${LANG_NM}
             ,  USE_YN      = ${USE_YN}
             ,  UPD_DT      = SYSDATE
             ,  UPD_USER    = ${UPD_USER}
    WHEN NOT MATCHED THEN
        INSERT 
        (
                COMP_CD
             ,  TABLE_NM
             ,  COL_NM
             ,  LANGUAGE_TP
             ,  PK_COL
             ,  LANG_NM
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER    
        ) VALUES (
                ${COMP_CD}
             ,  ${TABLE_NM}
             ,  ${COL_NM}
             ,  ${LANGUAGE_TP}
             ,  ${PK_COL}
             ,  ${LANG_NM}
             ,  ${USE_YN}
             ,  SYSDATE
             ,  ${UPD_USER}
             ,  SYSDATE
             ,  ${UPD_USER} 
        )
]]></query>

<query name='ITEM_Q'><![CDATA[
    SELECT  I.COMP_CD
         ,  I.ITEM_CD
         ,  I.ITEM_NM
         ,  L.L_CLASS_NM
         ,  M.M_CLASS_NM
         ,  S.S_CLASS_NM
         ,  I.SALE_PRC
         ,  I.USE_YN
      FROM  (
                SELECT  I.COMP_CD
                     ,  I.ITEM_CD
                     ,  NVL(L.ITEM_NM,     I.ITEM_NM)       AS ITEM_NM
                     ,  NVL(IC.L_CLASS_CD, I.L_CLASS_CD)    AS L_CLASS_CD
                     ,  NVL(IC.M_CLASS_CD, I.M_CLASS_CD)    AS M_CLASS_CD
                     ,  NVL(IC.S_CLASS_CD, I.S_CLASS_CD)    AS S_CLASS_CD
                     ,  I.SALE_PRC
                     ,  I.USE_YN
                  FROM  ITEM    I
                     ,  (
                            SELECT  COMP_CD
                                 ,  ITEM_CD
                                 ,  ITEM_NM
                              FROM  LANG_ITEM
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                               AND  USE_YN      = 'Y'
                        )       L
                     ,  (
                            SELECT  COMP_CD
                                 ,  ITEM_CD
                                 ,  L_CLASS_CD
                                 ,  M_CLASS_CD
                                 ,  S_CLASS_CD
                              FROM  ITEM_CLASS
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  ORG_CLASS_CD= '00'
                               AND  USE_YN      = 'Y'
                        )       IC
                 WHERE  I.COMP_CD           = L.COMP_CD(+)
                   AND  I.ITEM_CD           = L.ITEM_CD(+)
                   AND  I.COMP_CD           = IC.COMP_CD(+)
                   AND  I.ITEM_CD           = IC.ITEM_CD(+)
                   AND  I.COMP_CD           = ${SCH_COMP_CD}
                   AND  I.USE_YN            = 'Y'
            )   I
         ,  (
                SELECT  L.COMP_CD
                     ,  L.L_CLASS_CD
                     ,  NVL(LL.LANG_NM, L.L_CLASS_NM)   AS L_CLASS_NM
                     ,  L.SORT_ORDER
                  FROM  ITEM_L_CLASS    L
                     ,  (
                            SELECT  COMP_CD
                                 ,  PK_COL
                                 ,  LANG_NM
                              FROM  LANG_TABLE
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  TABLE_NM    = 'ITEM_L_CLASS'
                               AND  COL_NM      = 'L_CLASS_NM'
                               AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                               AND  USE_YN      = 'Y'
                        )               LL
                 WHERE  L.COMP_CD       = LL.COMP_CD(+)
                   AND  L.COMP_CD||L.ORG_CLASS_CD||L.L_CLASS_CD = LL.PK_COL(+)
                   AND  L.COMP_CD       = ${SCH_COMP_CD}
                   AND  L.ORG_CLASS_CD  = '00'
                   AND  L.USE_YN        = 'Y'
            )   L
         ,  (
                SELECT  M.COMP_CD
                     ,  M.L_CLASS_CD
                     ,  M.M_CLASS_CD
                     ,  NVL(ML.LANG_NM, M.M_CLASS_NM)   AS M_CLASS_NM
                     ,  M.SORT_ORDER
                  FROM  ITEM_M_CLASS    M
                     ,  (
                            SELECT  COMP_CD
                                 ,  PK_COL
                                 ,  LANG_NM
                              FROM  LANG_TABLE
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  TABLE_NM    = 'ITEM_M_CLASS'
                               AND  COL_NM      = 'M_CLASS_NM'
                               AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                               AND  USE_YN      = 'Y'
                        )               ML
                 WHERE  M.COMP_CD       = ML.COMP_CD(+)
                   AND  M.COMP_CD||M.ORG_CLASS_CD||M.L_CLASS_CD||M.M_CLASS_CD = ML.PK_COL(+)
                   AND  M.COMP_CD       = ${SCH_COMP_CD}
                   AND  M.ORG_CLASS_CD  = '00'
                   AND  M.USE_YN        = 'Y'
            )   M
         ,  (
                SELECT  S.COMP_CD
                     ,  S.L_CLASS_CD
                     ,  S.M_CLASS_CD
                     ,  S.S_CLASS_CD
                     ,  NVL(SL.LANG_NM, S.S_CLASS_NM)   AS S_CLASS_NM
                     ,  S.SORT_ORDER
                  FROM  ITEM_S_CLASS    S
                     ,  (
                            SELECT  COMP_CD
                                 ,  PK_COL
                                 ,  LANG_NM
                              FROM  LANG_TABLE
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  TABLE_NM    = 'ITEM_S_CLASS'
                               AND  COL_NM      = 'S_CLASS_NM'
                               AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                               AND  USE_YN      = 'Y'
                        )               SL
                 WHERE  S.COMP_CD       = SL.COMP_CD(+)
                   AND  S.COMP_CD||S.ORG_CLASS_CD||S.L_CLASS_CD||S.M_CLASS_CD||S.S_CLASS_CD = SL.PK_COL(+)
                   AND  S.COMP_CD       = ${SCH_COMP_CD}
                   AND  S.ORG_CLASS_CD  = '00'
                   AND  S.USE_YN        = 'Y'
            )   S
     WHERE  I.COMP_CD   = L.COMP_CD(+)
       AND  I.L_CLASS_CD= L.L_CLASS_CD(+)
       AND  I.COMP_CD   = M.COMP_CD(+)
       AND  I.L_CLASS_CD= M.L_CLASS_CD(+)
       AND  I.M_CLASS_CD= M.M_CLASS_CD(+)
       AND  I.COMP_CD   = S.COMP_CD(+)
       AND  I.L_CLASS_CD= S.L_CLASS_CD(+)
       AND  I.M_CLASS_CD= S.M_CLASS_CD(+)
       AND  I.S_CLASS_CD= S.S_CLASS_CD(+)
       AND  (${SCH_L_CLASS_CD} IS NULL OR I.L_CLASS_CD = ${SCH_L_CLASS_CD})
       AND  (${SCH_M_CLASS_CD} IS NULL OR I.M_CLASS_CD = ${SCH_M_CLASS_CD})
       AND  (${SCH_S_CLASS_CD} IS NULL OR I.S_CLASS_CD = ${SCH_S_CLASS_CD})
       AND  (${SCH_ITEM_TXT} IS NULL OR (I.ITEM_CD LIKE '%'||${SCH_ITEM_TXT}||'%' OR I.ITEM_NM LIKE '%'||${SCH_ITEM_TXT}||'%'))
     ORDER  BY L.SORT_ORDER, M.SORT_ORDER, S.SORT_ORDER, I.ITEM_CD
]]></query>

</SQLResource>

