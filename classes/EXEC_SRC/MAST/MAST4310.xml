<?xml version='1.0' encoding='utf-8'?>
<SQLResource version='1'>
 
<query name='SET_GRP_Q'><![CDATA[
    SELECT  S.COMP_CD
         ,  S.BRAND_CD
         ,  S.SET_GRP
         ,  S.SET_GRP_NM
         ,  L.LANG_NM
         ,  S.SORT_SEQ
         ,  S.USE_YN
      FROM  SET_GRP     S
         ,  (
                SELECT  COMP_CD
                     ,  PK_COL
                     ,  LANG_NM
                  FROM  LANG_TABLE
                 WHERE  COMP_CD     = ${SCH_COMP_CD}
                   AND  TABLE_NM    = 'SET_GRP'
                   AND  COL_NM      = 'SET_GRP_NM'
                   AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                   AND  USE_YN      = 'Y'
            )           L
     WHERE  L.COMP_CD(+)    = S.COMP_CD
       AND  L.PK_COL(+)     = LPAD(S.BRAND_CD, 4, ' ')||LPAD(S.SET_GRP, 4, ' ')
       AND  S.COMP_CD       = ${SCH_COMP_CD}
       AND  S.BRAND_CD      = ${SCH_BRAND_CD}
       AND  (${SCH_USE_YN}  IS NULL OR S.USE_YN = ${SCH_USE_YN})
     ORDER  BY S.SORT_SEQ, S.SET_GRP
]]></query>

<query name='SET_GRP_U'><![CDATA[
    MERGE INTO SET_GRP
    USING DUAL
       ON (
                COMP_CD     = ${COMP_CD}
            AND BRAND_CD    = ${BRAND_CD}
            AND SET_GRP     = ${SET_GRP}
          )
    WHEN MATCHED THEN
        UPDATE 
           SET  SET_GRP_NM  = ${SET_GRP_NM}
             ,  SORT_SEQ    = ${SORT_SEQ}
             ,  USE_YN      = ${USE_YN}
             ,  UPD_DT      = SYSDATE
             ,  UPD_USER    = ${USER_ID}
    WHEN NOT MATCHED THEN
        INSERT
        (
                COMP_CD
             ,  BRAND_CD
             ,  SET_GRP
             ,  SET_GRP_NM
             ,  SORT_SEQ
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER
        ) VALUES (
                ${COMP_CD}
             ,  ${BRAND_CD}
             ,  ${SET_GRP}
             ,  ${SET_GRP_NM}
             ,  ${SORT_SEQ}
             ,  ${USE_YN}
             ,  SYSDATE
             ,  ${USER_ID}
             ,  SYSDATE
             ,  ${USER_ID}
        )
]]></query>

<query name='LANG_TABLE_U'><![CDATA[
    MERGE INTO LANG_TABLE
    USING DUAL
       ON (
                COMP_CD     = ${COMP_CD}
            AND TABLE_NM    = ${TABLE_NM}
            AND COL_NM      = ${COL_NM}
            AND LANGUAGE_TP = ${LANGUAGE_TP}
            AND PK_COL      = ${PK_COL}
          )
    WHEN MATCHED THEN
        UPDATE 
           SET  LANG_NM     = ${LANG_NM}
             ,  USE_YN      = ${USE_YN}
             ,  UPD_DT      = SYSDATE
             ,  UPD_USER    = ${USER_ID}
    WHEN NOT MATCHED THEN
        INSERT
        (
                COMP_CD
             ,  TABLE_NM
             ,  COL_NM
             ,  LANGUAGE_TP
             ,  PK_COL
             ,  LANG_NM
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER
        ) VALUES (
                ${COMP_CD}
             ,  ${TABLE_NM}
             ,  ${COL_NM}
             ,  ${LANGUAGE_TP}
             ,  ${PK_COL}
             ,  ${LANG_NM}
             ,  ${USE_YN}
             ,  SYSDATE
             ,  ${USER_ID}
             ,  SYSDATE
             ,  ${USER_ID}
        )
]]></query>

<query name='ITEM_SET_GRP_Q'><![CDATA[
    SELECT  ISG.COMP_CD
         ,  ISG.BRAND_CD
         ,  ISG.SET_GRP
         ,  ISG.ITEM_CD
         ,  I.ITEM_NM
         ,  ISG.USE_YN
      FROM  ITEM_SET_GRP    ISG
         ,  (
                SELECT  I.COMP_CD
                     ,  I.ITEM_CD
                     ,  NVL(L.ITEM_NM, I.ITEM_NM)  AS ITEM_NM
                  FROM  ITEM  I
                     ,  (
                            SELECT  COMP_CD
                                 ,  ITEM_CD
                                 ,  ITEM_NM
                              FROM  LANG_ITEM
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                               AND  USE_YN      = 'Y'
                        ) L
                 WHERE  I.COMP_CD = L.COMP_CD(+)
                   AND  I.ITEM_CD = L.ITEM_CD(+)
                   AND  I.USE_YN  = 'Y'
                   AND  I.ORD_SALE_DIV IN ('2', '3')
            ) I
     WHERE  ISG.COMP_CD     = I.COMP_CD
       AND  ISG.ITEM_CD     = I.ITEM_CD
       AND  ISG.COMP_CD     = ${SCH_COMP_CD}
       AND  ISG.BRAND_CD    = ${SCH_BRAND_CD}
       AND  ISG.SET_GRP     = ${SCH_SET_GRP}
       AND  (${SCH_USE_YN} IS NULL OR ISG.USE_YN = ${SCH_USE_YN})
     ORDER  BY ISG.ITEM_CD
]]></query>

<query name='ITEM_SET_GRP_U'><![CDATA[
    MERGE INTO ITEM_SET_GRP
    USING DUAL
       ON (
                COMP_CD     = ${COMP_CD}
            AND BRAND_CD    = ${BRAND_CD}
            AND SET_GRP     = ${SET_GRP}
            AND ITEM_CD     = ${ITEM_CD}
          )
    WHEN MATCHED THEN
        UPDATE 
           SET  USE_YN      = ${USE_YN}
             ,  UPD_DT      = SYSDATE
             ,  UPD_USER    = ${USER_ID}
    WHEN NOT MATCHED THEN
        INSERT
        (
                COMP_CD
             ,  BRAND_CD
             ,  SET_GRP
             ,  ITEM_CD
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER
        ) VALUES (
                ${COMP_CD}
             ,  ${BRAND_CD}
             ,  ${SET_GRP}
             ,  ${ITEM_CD}
             ,  ${USE_YN}
             ,  SYSDATE
             ,  ${USER_ID}
             ,  SYSDATE
             ,  ${USER_ID}
        )
]]></query>

<query name='ITEM_Q'><![CDATA[
    SELECT  /*+ USE_NL(I L M S) */
            I.COMP_CD
         ,  I.ITEM_CD
         ,  I.ITEM_NM
         ,  L.L_CLASS_NM
         ,  M.M_CLASS_NM
         ,  S.S_CLASS_NM
         ,  I.USE_YN
      FROM  (
                SELECT  /*+ LEADING(I2) USE_HASH(I) */
                        I.COMP_CD
                     ,  I.ITEM_CD
                     ,  NVL(L.ITEM_NM,     I.ITEM_NM)       AS ITEM_NM
                     ,  NVL(IC.L_CLASS_CD, I.L_CLASS_CD)    AS L_CLASS_CD
                     ,  NVL(IC.M_CLASS_CD, I.M_CLASS_CD)    AS M_CLASS_CD
                     ,  NVL(IC.S_CLASS_CD, I.S_CLASS_CD)    AS S_CLASS_CD
                     ,  I.USE_YN
                  FROM  ITEM    I
                     ,  (
                            SELECT  COMP_CD
                                 ,  ITEM_CD
                              FROM  ITEM_CHAIN
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  (${SCH_BRAND_CD} IS NULL OR BRAND_CD = ${SCH_BRAND_CD})
                               AND  ORD_SALE_DIV IN ('2', '3')
                               AND  USE_YN      = 'Y'
                             GROUP  BY COMP_CD, ITEM_CD
                        )       I2
                    ,   (
                            SELECT  COMP_CD
                                 ,  ITEM_CD
                                 ,  ITEM_NM
                              FROM  LANG_ITEM
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                               AND  USE_YN      = 'Y'
                        )       L
                     ,  (
                            SELECT  COMP_CD
                                 ,  ITEM_CD
                                 ,  L_CLASS_CD
                                 ,  M_CLASS_CD
                                 ,  S_CLASS_CD
                              FROM  ITEM_CLASS
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  ORG_CLASS_CD= ${SCH_ORG_CLASS_CD}
                               AND  USE_YN      = 'Y'
                        )       IC
                 WHERE  I.COMP_CD   = I2.COMP_CD
                   AND  I.ITEM_CD   = I2.ITEM_CD
                   AND  I.COMP_CD   = L.COMP_CD(+)
                   AND  I.ITEM_CD   = L.ITEM_CD(+)
                   AND  I.COMP_CD   = IC.COMP_CD(+)
                   AND  I.ITEM_CD   = IC.ITEM_CD(+)
                   AND  I.COMP_CD   = ${SCH_COMP_CD}
                   AND  I.ORD_SALE_DIV IN ('2', '3')
                   AND  I.USE_YN    = 'Y'
            )   I
         ,  (
                SELECT  L.COMP_CD
                     ,  L.L_CLASS_CD
                     ,  NVL(LL.LANG_NM, L.L_CLASS_NM)   AS L_CLASS_NM
                     ,  L.SORT_ORDER
                  FROM  ITEM_L_CLASS    L
                     ,  (
                            SELECT  COMP_CD
                                 ,  PK_COL
                                 ,  LANG_NM
                              FROM  LANG_TABLE
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  TABLE_NM    = 'ITEM_L_CLASS'
                               AND  COL_NM      = 'L_CLASS_NM'
                               AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                               AND  USE_YN      = 'Y'
                        )               LL
                 WHERE  L.COMP_CD       = LL.COMP_CD(+)
                   AND  L.COMP_CD||L.ORG_CLASS_CD||L.L_CLASS_CD = LL.PK_COL(+)
                   AND  L.COMP_CD       = ${SCH_COMP_CD}
                   AND  L.ORG_CLASS_CD  = ${SCH_ORG_CLASS_CD}
                   AND  L.USE_YN        = 'Y'
            )   L
         ,  (
                SELECT  M.COMP_CD
                     ,  M.L_CLASS_CD
                     ,  M.M_CLASS_CD
                     ,  NVL(ML.LANG_NM, M.M_CLASS_NM)   AS M_CLASS_NM
                     ,  M.SORT_ORDER
                  FROM  ITEM_M_CLASS    M
                     ,  (
                            SELECT  COMP_CD
                                 ,  PK_COL
                                 ,  LANG_NM
                              FROM  LANG_TABLE
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  TABLE_NM    = 'ITEM_M_CLASS'
                               AND  COL_NM      = 'M_CLASS_NM'
                               AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                               AND  USE_YN      = 'Y'
                        )               ML
                 WHERE  M.COMP_CD       = ML.COMP_CD(+)
                   AND  M.COMP_CD||M.ORG_CLASS_CD||M.L_CLASS_CD||M.M_CLASS_CD = ML.PK_COL(+)
                   AND  M.COMP_CD       = ${SCH_COMP_CD}
                   AND  M.ORG_CLASS_CD  = ${SCH_ORG_CLASS_CD}
                   AND  M.USE_YN        = 'Y'
            )   M
         ,  (
                SELECT  S.COMP_CD
                     ,  S.L_CLASS_CD
                     ,  S.M_CLASS_CD
                     ,  S.S_CLASS_CD
                     ,  NVL(SL.LANG_NM, S.S_CLASS_NM)   AS S_CLASS_NM
                     ,  S.SORT_ORDER
                  FROM  ITEM_S_CLASS    S
                     ,  (
                            SELECT  COMP_CD
                                 ,  PK_COL
                                 ,  LANG_NM
                              FROM  LANG_TABLE
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  TABLE_NM    = 'ITEM_S_CLASS'
                               AND  COL_NM      = 'S_CLASS_NM'
                               AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                               AND  USE_YN      = 'Y'
                        )               SL
                 WHERE  S.COMP_CD       = SL.COMP_CD(+)
                   AND  S.COMP_CD||S.ORG_CLASS_CD||S.L_CLASS_CD||S.M_CLASS_CD||S.S_CLASS_CD = SL.PK_COL(+)
                   AND  S.COMP_CD       = ${SCH_COMP_CD}
                   AND  S.ORG_CLASS_CD  = ${SCH_ORG_CLASS_CD}
                   AND  S.USE_YN        = 'Y'
            )   S
     WHERE  I.COMP_CD   = L.COMP_CD(+)
       AND  I.L_CLASS_CD= L.L_CLASS_CD(+)
       AND  I.COMP_CD   = M.COMP_CD(+)
       AND  I.L_CLASS_CD= M.L_CLASS_CD(+)
       AND  I.M_CLASS_CD= M.M_CLASS_CD(+)
       AND  I.COMP_CD   = S.COMP_CD(+)
       AND  I.L_CLASS_CD= S.L_CLASS_CD(+)
       AND  I.M_CLASS_CD= S.M_CLASS_CD(+)
       AND  I.S_CLASS_CD= S.S_CLASS_CD(+)
       AND  (${SCH_L_CLASS_CD} IS NULL OR I.L_CLASS_CD = ${SCH_L_CLASS_CD})
       AND  (${SCH_M_CLASS_CD} IS NULL OR I.M_CLASS_CD = ${SCH_M_CLASS_CD})
       AND  (${SCH_S_CLASS_CD} IS NULL OR I.S_CLASS_CD = ${SCH_S_CLASS_CD})
       AND  (${SCH_ITEM_TXT} IS NULL OR (I.ITEM_CD LIKE '%'||${SCH_ITEM_TXT}||'%' OR I.ITEM_NM LIKE '%'||${SCH_ITEM_TXT}||'%'))
     ORDER  BY L.SORT_ORDER, I.L_CLASS_CD, M.SORT_ORDER, I.M_CLASS_CD, S.SORT_ORDER, I.S_CLASS_CD, I.ITEM_CD
]]></query>

</SQLResource>

