<?xml version='1.0' encoding='utf-8'?>
<SQLResource version='1'>
 
<!-- 공통코드 => 관리조직  조회 -->
<query name='COMMON_Q'><![CDATA[
    SELECT  C.COMP_CD
         ,  C.CODE_TP
         ,  C.CODE_CD       AS MST_ORG_CD
         ,  C.CODE_NM       AS MST_ORG_NM
         ,  L.CODE_NM       AS LANG_NM 
         ,  C.USE_YN
      FROM  COMMON      C
         ,  (
                SELECT  COMP_CD, CODE_TP, CODE_CD, CODE_NM
                  FROM  LANG_COMMON
                 WHERE  COMP_CD     = ${SCH_COMP_CD}
                   AND  CODE_TP     = ${SCH_CODE_TP}
                   AND  LANGUAGE_TP = ${SCH_LANG_TP}
                   AND  USE_YN      = 'Y'
            )   L
     WHERE  C.COMP_CD   = L.COMP_CD(+)
       AND  C.CODE_TP   = L.CODE_TP(+)
       AND  C.CODE_CD   = L.CODE_CD(+)
       AND  C.COMP_CD   = ${SCH_COMP_CD}
       AND  C.CODE_TP   = ${SCH_CODE_TP} 
       AND  (${SCH_USE_YN} IS NULL OR C.USE_YN = ${SCH_USE_YN})
     ORDER  BY C.CODE_CD
]]></query>

<!-- 공통코드 => 관리조직  등록 -->
<query name='COMMON_U'><![CDATA[
    MERGE INTO COMMON
    USING DUAL
    ON (
                COMP_CD     = ${COMP_CD}
           AND  CODE_TP     = ${CODE_TP}
           AND  CODE_CD     = ${CODE_CD}
       )
    WHEN MATCHED THEN
        UPDATE
           SET  CODE_NM     = ${CODE_NM}
             ,  USE_YN      = ${USE_YN}
             ,  UPD_DT      = SYSDATE
             ,  UPD_USER    = ${UPD_USER}
    WHEN NOT MATCHED THEN
        INSERT
        ( 
                COMP_CD
             ,  CODE_TP
             ,  CODE_CD
             ,  CODE_NM
             ,  BRAND_CD
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER
        ) VALUES (   
                ${COMP_CD}
             ,  ${CODE_TP}
             ,  ${CODE_CD}
             ,  ${CODE_NM}
             ,  '0000'
             ,  ${USE_YN}
             ,  SYSDATE
             ,  ${UPD_USER}
             ,  SYSDATE
             ,  ${UPD_USER}
        ) 
]]></query>

<!-- 신규마스터 항목 체크 Detail 조회 -->
<query name='MASTER_ORG_Q'><![CDATA[   
    SELECT  MO.COMP_CD
         ,  MO.MST_ORG_CD
         ,  MO.MST_MNG_DIV
         ,  MO.TABLE_ID
         ,  T.TABLE_NM
         ,  MO.COLUMN_ID
         ,  MM.COLUMN_NM
         ,  MO.USE_YN
      FROM  MASTER_ORG      MO
         ,  MASTER_MNG      MM
         ,  (
                SELECT  C.COMP_CD
                     ,  C.VAL_C1                    AS TABLE_ID
                     ,  NVL(L.CODE_NM, C.CODE_NM)   AS TABLE_NM
                  FROM  COMMON      C
                     ,  (
                            SELECT  COMP_CD, CODE_TP, CODE_CD, CODE_NM
                              FROM  LANG_COMMON
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  CODE_TP     = '01050'
                               AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                               AND  USE_YN      = 'Y'
                        )   L
                 WHERE  C.COMP_CD   = L.COMP_CD(+)
                   AND  C.CODE_TP   = L.CODE_TP(+)
                   AND  C.CODE_CD   = L.CODE_CD(+)
                   AND  C.COMP_CD   = ${SCH_COMP_CD}
                   AND  C.CODE_TP   = '01050'
                   AND  USE_YN      = 'Y'
            )   T
     WHERE  MO.COMP_CD      = MM.COMP_CD
       AND  MO.TABLE_ID     = MM.TABLE_ID
       AND  MO.COLUMN_ID    = MM.COLUMN_ID
       AND  MO.COMP_CD      = T.COMP_CD
       AND  MO.TABLE_ID     = T.TABLE_ID
       AND  MO.COMP_CD      = ${SCH_COMP_CD}
       AND  MO.MST_ORG_CD   = ${SCH_MST_ORG_CD}  
       AND  (${SCH_USE_YN} IS NULL OR MO.USE_YN = ${SCH_USE_YN})
     ORDER  BY MO.TABLE_ID, MO.COLUMN_ID
]]></query>

<!-- 신규마스터 항목 체크 Detail 등록 -->
<query name='MASTER_ORG_U'><![CDATA[
    MERGE INTO MASTER_ORG
    USING DUAL
    ON (
                COMP_CD     = ${COMP_CD}
           AND  MST_ORG_CD  = ${MST_ORG_CD}
           AND  MST_MNG_DIV = ${MST_MNG_DIV}
           AND  TABLE_ID    = ${TABLE_ID}
           AND  COLUMN_ID   = ${COLUMN_ID}
       )
    WHEN MATCHED THEN
        UPDATE
           SET  USE_YN      = ${USE_YN}
             ,  UPD_DT      = SYSDATE
             ,  UPD_USER    = ${UPD_USER}
    WHEN NOT MATCHED THEN
        INSERT
        ( 
                COMP_CD
             ,  MST_ORG_CD
             ,  MST_MNG_DIV
             ,  TABLE_ID
             ,  COLUMN_ID 
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER
        ) VALUES (   
                ${COMP_CD}
             ,  ${MST_ORG_CD}
             ,  ${MST_MNG_DIV}
             ,  ${TABLE_ID}
             ,  ${COLUMN_ID} 
             ,  ${USE_YN}
             ,  SYSDATE
             ,  ${UPD_USER}
             ,  SYSDATE
             ,  ${UPD_USER}
        ) 
]]></query>

<!-- 언업타입별 공통코드 타입 등록 -->
<query name='LANG_COMMON_U'><![CDATA[
    MERGE INTO LANG_COMMON
    USING DUAL
    ON (
                COMP_CD     = ${COMP_CD}
           AND  CODE_TP     = ${CODE_TP}
           AND  CODE_CD     = ${CODE_CD}
           AND  LANGUAGE_TP = ${LANG_TP}
       )
    WHEN MATCHED THEN
        UPDATE 
           SET  CODE_NM     = ${CODE_NM}
             ,  USE_YN      = ${USE_YN}
             ,  UPD_DT      = SYSDATE
             ,  UPD_USER    = ${UPD_USER}
    WHEN NOT MATCHED THEN
        INSERT
        (       COMP_CD
             ,  CODE_TP
             ,  CODE_CD
             ,  LANGUAGE_TP
             ,  CODE_NM
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER
        ) VALUES (   
                ${COMP_CD}
             ,  ${CODE_TP}
             ,  ${CODE_CD}
             ,  ${LANG_TP}
             ,  ${CODE_NM}
             ,  ${USE_YN}
             ,  SYSDATE
             ,  ${UPD_USER}
             ,  SYSDATE
             ,  ${UPD_USER}
        )
]]></query>
 
 <!-- 관리테이블 팝업 조회 -->
<query name='MASTER_MNG_Q'><![CDATA[   
    SELECT  M.COMP_CD
         ,  M.MST_MNG_DIV
         ,  M.TABLE_ID
         ,  T.TABLE_NM
         ,  M.COLUMN_ID
         ,  M.COLUMN_NM
      FROM  MASTER_MNG      M
         ,  (
                SELECT  C.COMP_CD
                     ,  C.VAL_C1                        AS TABLE_ID
                     ,  NVL(L.CODE_NM, C.CODE_NM)       AS TABLE_NM
                  FROM  COMMON      C
                     ,  (
                            SELECT  COMP_CD, CODE_TP, CODE_CD, CODE_NM
                              FROM  LANG_COMMON
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  CODE_TP     = '01050'
                               AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                               AND  USE_YN      = 'Y'   
                        )   L
                 WHERE  C.COMP_CD   = L.COMP_CD(+)
                   AND  C.CODE_TP   = L.CODE_TP(+)
                   AND  C.CODE_CD   = L.CODE_CD(+)
                   AND  C.COMP_CD   = ${SCH_COMP_CD}
                   AND  C.CODE_TP   = '01050'
                   AND  C.USE_YN    = 'Y'
            )   T
     WHERE  M.COMP_CD  = T.COMP_CD
       AND  M.TABLE_ID = T.TABLE_ID
       AND  M.COMP_CD  = ${SCH_COMP_CD}
       AND  M.TABLE_ID IN   (
                                SELECT  VAL_C1
                                  FROM  COMMON 
                                 WHERE  COMP_CD = ${SCH_COMP_CD}
                                   AND  CODE_TP = '01050'
                                   AND  CODE_CD LIKE NVL(${SCH_TABLE_ID}, '%')
                                   AND  USE_YN  = 'Y'
                            )
       AND  M.USE_YN    = 'Y'
       AND  (M.COMP_CD, M.TABLE_ID, M.COLUMN_ID) NOT IN ( 
                                                            SELECT  COMP_CD, TABLE_ID, COLUMN_ID
                                                              FROM  MASTER_ORG
                                                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                                                               AND  MST_ORG_CD  = ${SCH_MST_ORG_CD}
                                                        ) 
     ORDER  BY M.TABLE_ID, M.COLUMN_ID
]]></query>

</SQLResource>

