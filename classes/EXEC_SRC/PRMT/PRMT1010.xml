<?xml version='1.0' encoding='utf-8'?>
<SQLResource version='1'>

<query name='TAB01_Q'><![CDATA[
    SELECT  P.COMP_CD
         ,  P.PRMT_ID          --프로모션ID
         ,  P.PRMT_NM          --프로모션명
         ,  P.PRMT_CLASS       --프로모션분류
         ,  P.PRMT_TYPE        --프로모션유형
         ,  P.PRMT_TYPE_DET    --프로모션유형
         ,  P.BRAND_CLASS      --카테고리
         ,  P.BRAND_CD         --브랜드
         ,  P.PRMT_DT_START    --시작일자
         ,  P.PRMT_DT_END      --종료일자
         ,  P.SUB_PRMT_YN      --서브프로모션여부
         ,  P.SUB_PRMT_ID      --서브프로모션
         ,  P.PRMT_COUPON_YN   --쿠폰프로모션여부
         ,  P.COUPON_IMG_TYPE  --쿠폰이미지구분(APP)
         ,  P.AGREE_YN         --승인여부
         ,  P.PAY_DIV          --결제수단
         ,  TO_CHAR(P.UPD_DT, 'YYYY-MM-DD HH24:MI:SS')      AS UPD_DT
         ,  NVL(U.USER_NM, P.UPD_USER)                      AS UPD_USER
         ,  P.USE_YN
         ,  PS.BRAND_CD
         ,  PS.STOR_CD
      FROM  PROMOTION           P
         ,  PROMOTION_STOR      PS
         ,  (
                SELECT  COMP_CD
                     ,  USER_ID
                     ,  MAX(USER_NM)        AS USER_NM
                  FROM  (
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  USER_NM
                              FROM  HQ_USER
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                            UNION
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  USER_NM
                              FROM  STORE_USER
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                        )
                 GROUP  BY COMP_CD, USER_ID
            )       U
     WHERE  P.COMP_CD       = PS.COMP_CD
       AND  P.PRMT_ID       = PS.PRMT_ID
       AND  P.COMP_CD       = U.COMP_CD(+)
       AND  P.UPD_USER      = U.USER_ID(+) 
       AND  P.COMP_CD       = ${SCH_COMP_CD}
       AND  (${SCH_PRMT_CLASS}      IS NULL OR P.PRMT_CLASS     = ${SCH_PRMT_CLASS})
       AND  (${SCH_PRMT_TYPE}       IS NULL OR P.PRMT_TYPE      = ${SCH_PRMT_TYPE})
       AND  (${SCH_PRMT_TYPE_DET}   IS NULL OR P.PRMT_TYPE_DET  = ${SCH_PRMT_TYPE_DET})
       AND  (
                P.PRMT_DT_START     BETWEEN ${SCH_GFR_DATE} AND ${SCH_GTO_DATE}
                OR
                P.PRMT_DT_END       BETWEEN ${SCH_GFR_DATE} AND ${SCH_GTO_DATE}
            )
       AND  (${SCH_USE_YN}          IS NULL OR P.USE_YN      = ${SCH_USE_YN})
       AND  PS.BRAND_CD     = ${SCH_BRAND_CD}
       AND  PS.STOR_CD      = ${SCH_STOR_CD}
     ORDER  BY P.PRMT_ID DESC
]]></query>

<query name='TAB02_Q'><![CDATA[
    SELECT  P.COMP_CD
         ,  P.PRMT_ID
         ,  P.SUB_PRMT_YN
         ,  P.SUB_PRMT_ID
         ,  P.BRAND_CLASS
         ,  P.BRAND_CD
         ,  P.PRMT_CLASS
         ,  P.PRMT_TYPE
         ,  P.PRMT_TYPE_DET
         ,  P.PRMT_NM
         ,  P.PRMT_DT_START
         ,  P.PRMT_DT_END
         ,  P.PRMT_TIME_HH_START
         ,  P.PRMT_TIME_MM_START
         ,  P.PRMT_TIME_HH_END
         ,  P.PRMT_TIME_MM_END
         ,  P.PRMT_WEEK_1
         ,  P.PRMT_WEEK_2
         ,  P.PRMT_WEEK_3
         ,  P.PRMT_WEEK_4
         ,  P.PRMT_WEEK_5
         ,  P.PRMT_WEEK_6
         ,  P.PRMT_WEEK_7
         ,  CASE WHEN P.PRMT_WEEK_1 = 'Y' AND P.PRMT_WEEK_2 = 'Y' AND P.PRMT_WEEK_3 = 'Y' AND P.PRMT_WEEK_4 = 'Y' AND P.PRMT_WEEK_5 = 'Y' AND P.PRMT_WEEK_6 = 'Y' AND P.PRMT_WEEK_7 = 'Y' THEN 'Y'
                 ELSE 'N'
            END                 AS PRMT_WEEK_ALL
         ,  P.CUST_DIV
         ,  CASE WHEN P.CUST_DIV = 'C6101' OR P.CUST_DIV = 'C6102' THEN 'Y'
                 ELSE 'N'
            END                 AS LVL_CD_0
         ,  P.LVL_CD_1
         ,  P.LVL_CD_2
         ,  P.LVL_CD_3
         ,  P.LVL_CD_4
         ,  P.PRMT_COUPON_YN
         ,  P.COUPON_DT_TYPE
         ,  P.COUPON_START_DT
         ,  P.COUPON_CLOSE_DT
         ,  P.COUPON_EXPIRE
         ,  P.COUPON_IMG_TYPE
         ,  P.PAY_DIV
         ,  P.COUPON_NOTICE
         ,  P.COUPON_NOTICE_PRINT
         ,  P.REMARKS
         ,  P.AGREE_YN
         ,  P.AGREE_DT
         ,  P.AGREE_ID
         ,  NVL(U.USER_NM, P.AGREE_ID)      AS AGREE_NM
         ,  P.USE_YN
         ,  ${SCH_BRAND_CD}                 AS BRAND_CD
         ,  ${SCH_STOR_CD}                  AS STOR_CD
      FROM  PROMOTION   P
         ,  (
                SELECT  COMP_CD
                     ,  USER_ID
                     ,  USER_NM
                  FROM  HQ_USER
                 WHERE  COMP_CD     = ${SCH_COMP_CD}
            )       U
     WHERE  P.COMP_CD   = U.COMP_CD(+)
       AND  P.AGREE_ID  = U.USER_ID(+)
       AND  P.COMP_CD   = ${SCH_COMP_CD} 
       AND  P.PRMT_ID   = ${SCH_PRMT_ID}
]]></query>

<query name='PRMT_ID_Q'><![CDATA[
    SELECT  TO_CHAR(SYSDATE, 'YY')  ||
            TO_CHAR(SYSDATE, 'MM')  ||
            LPAD(NVL(MAX(TO_NUMBER(SUBSTR(PRMT_ID, 5, LENGTH(PRMT_ID)))) ,0) + 1, 4, '0')  AS PRMT_ID 
      FROM  PROMOTION   P
     WHERE  COMP_CD                 = ${SCH_COMP_CD}
       AND  SUBSTR(PRMT_ID, 1, 4)   = TO_CHAR(SYSDATE, 'YYMM')
       AND  USE_YN      = 'Y'
]]></query>

<query name='PROMOTION_U'><![CDATA[
    MERGE   INTO PROMOTION
    USING   DUAL
    ON (    
                COMP_CD  = ${COMP_CD}
           AND  PRMT_ID   = ${PRMT_ID}
       )
    WHEN MATCHED THEN
        UPDATE 
           SET  SUB_PRMT_YN         = ${SUB_PRMT_YN}
             ,  SUB_PRMT_ID         = ${SUB_PRMT_ID}
             ,  BRAND_CLASS         = ${BRAND_CLASS}
             ,  BRAND_CD            = ${BRAND_CD}
             ,  PRMT_CLASS          = ${PRMT_CLASS}
             ,  PRMT_TYPE           = ${PRMT_TYPE}
             ,  PRMT_TYPE_DET       = ${PRMT_TYPE_DET}
             ,  PRMT_NM             = ${PRMT_NM}
             ,  PRMT_DT_START       = ${PRMT_DT_START}
             ,  PRMT_DT_END         = ${PRMT_DT_END}
             ,  PRMT_TIME_HH_START  = ${PRMT_TIME_HH_START}
             ,  PRMT_TIME_MM_START  = ${PRMT_TIME_MM_START}
             ,  PRMT_TIME_HH_END    = ${PRMT_TIME_HH_END}
             ,  PRMT_TIME_MM_END    = ${PRMT_TIME_MM_END}
             ,  PRMT_WEEK_1         = ${PRMT_WEEK_1}
             ,  PRMT_WEEK_2         = ${PRMT_WEEK_2}
             ,  PRMT_WEEK_3         = ${PRMT_WEEK_3}
             ,  PRMT_WEEK_4         = ${PRMT_WEEK_4}
             ,  PRMT_WEEK_5         = ${PRMT_WEEK_5}
             ,  PRMT_WEEK_6         = ${PRMT_WEEK_6}
             ,  PRMT_WEEK_7         = ${PRMT_WEEK_7}
             ,  CUST_DIV            = ${CUST_DIV}
             ,  LVL_CD_1            = ${LVL_CD_1}
             ,  LVL_CD_2            = ${LVL_CD_2}
             ,  LVL_CD_3            = ${LVL_CD_3}
             ,  LVL_CD_4            = ${LVL_CD_4}
             ,  PRMT_COUPON_YN      = ${PRMT_COUPON_YN}
             ,  COUPON_DT_TYPE      = ${COUPON_DT_TYPE}
             ,  COUPON_START_DT     = ${COUPON_START_DT}
             ,  COUPON_CLOSE_DT     = ${COUPON_CLOSE_DT}
             ,  COUPON_EXPIRE       = ${COUPON_EXPIRE}
             ,  COUPON_IMG_TYPE     = ${COUPON_IMG_TYPE}
             ,  PAY_DIV             = NVL(${PAY_DIV}, 'C6201')
             ,  COUPON_NOTICE       = ${COUPON_NOTICE}
             ,  COUPON_NOTICE_PRINT = ${COUPON_NOTICE_PRINT}
             ,  REMARKS             = ${REMARKS}
             ,  AGREE_YN            = ${AGREE_YN}
             ,  AGREE_ID            = CASE WHEN ${AGREE_YN} = 'Y' THEN ${UPD_USER} ELSE NULL END
             ,  AGREE_DT            = CASE WHEN ${AGREE_YN} = 'Y' THEN TO_CHAR(SYSDATE, 'YYYYMMDD') ELSE NULL END
             ,  USE_YN              = ${USE_YN}
             ,  UPD_DT              = SYSDATE
             ,  UPD_USER            = ${UPD_USER}
    WHEN NOT MATCHED THEN
        INSERT
        (
                COMP_CD
             ,  PRMT_ID
             ,  SUB_PRMT_YN
             ,  SUB_PRMT_ID
             ,  BRAND_CLASS
             ,  BRAND_CD
             ,  PRMT_CLASS
             ,  PRMT_TYPE
             ,  PRMT_TYPE_DET
             ,  PRMT_NM
             ,  PRMT_DT_START
             ,  PRMT_DT_END
             ,  PRMT_USE_DIV
             ,  PRMT_TIME_HH_START
             ,  PRMT_TIME_MM_START
             ,  PRMT_TIME_HH_END
             ,  PRMT_TIME_MM_END
             ,  PRMT_WEEK_1
             ,  PRMT_WEEK_2
             ,  PRMT_WEEK_3
             ,  PRMT_WEEK_4
             ,  PRMT_WEEK_5
             ,  PRMT_WEEK_6
             ,  PRMT_WEEK_7
             ,  CUST_DIV
             ,  LVL_CD_1
             ,  LVL_CD_2
             ,  LVL_CD_3
             ,  LVL_CD_4
             ,  PRMT_COUPON_YN
             ,  COUPON_DT_TYPE
             ,  COUPON_START_DT
             ,  COUPON_CLOSE_DT
             ,  COUPON_EXPIRE
             ,  COUPON_IMG_TYPE
             ,  PAY_DIV
             ,  CONDITION_AMT
             ,  MODIFY_DIV_1
             ,  DC_RATE
             ,  DC_AMT
             ,  CONDITION_QTY_REQ
             ,  CONDITION_QTY_NOR
             ,  GIVE_QTY
             ,  ADD_MLG
             ,  ADD_MLG_DIV
             ,  ADD_MLG_CLOSE_DT
             ,  ADD_MLG_USE_DAY
             ,  ADD_PT
             ,  ADD_PT_DIV
             ,  ADD_PT_CLOSE_DT
             ,  ADD_PT_USE_DAY
             ,  COUPON_NOTICE
             ,  COUPON_NOTICE_PRINT
             ,  REMARKS
             ,  AGREE_YN
             ,  AGREE_ID
             ,  AGREE_DT
             ,  CONTENT_SEQ
             ,  SUBJECT
             ,  CONTENT
             ,  SEND_MOBILE
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER
        ) VALUES (
                ${COMP_CD}
             ,  ${PRMT_ID}
             ,  ${SUB_PRMT_YN}
             ,  ${SUB_PRMT_ID}
             ,  ${BRAND_CLASS}
             ,  ${BRAND_CD}
             ,  ${PRMT_CLASS}
             ,  ${PRMT_TYPE}
             ,  ${PRMT_TYPE_DET}
             ,  ${PRMT_NM}
             ,  ${PRMT_DT_START}
             ,  ${PRMT_DT_END}
             ,  'C6924'
             ,  ${PRMT_TIME_HH_START}
             ,  ${PRMT_TIME_MM_START}
             ,  ${PRMT_TIME_HH_END}
             ,  ${PRMT_TIME_MM_END}
             ,  ${PRMT_WEEK_1}
             ,  ${PRMT_WEEK_2}
             ,  ${PRMT_WEEK_3}
             ,  ${PRMT_WEEK_4}
             ,  ${PRMT_WEEK_5}
             ,  ${PRMT_WEEK_6}
             ,  ${PRMT_WEEK_7}
             ,  ${CUST_DIV}
             ,  ${LVL_CD_1}
             ,  ${LVL_CD_2}
             ,  ${LVL_CD_3}
             ,  ${LVL_CD_4}
             ,  ${PRMT_COUPON_YN}
             ,  ${COUPON_DT_TYPE}
             ,  ${COUPON_START_DT}
             ,  ${COUPON_CLOSE_DT}
             ,  ${COUPON_EXPIRE}
             ,  ${COUPON_IMG_TYPE}
             ,  NVL(${PAY_DIV}, 'C6201')
             ,  0
             ,  NULL
             ,  0
             ,  0
             ,  0
             ,  0
             ,  0
             ,  0
             ,  NULL
             ,  NULL
             ,  0
             ,  0
             ,  NULL
             ,  NULL
             ,  0
             ,  ${COUPON_NOTICE}
             ,  ${COUPON_NOTICE_PRINT}
             ,  ${REMARKS}
             ,  NVL(${AGREE_YN}, 'N')
             ,  NULL
             ,  NULL
             ,  NULL
             ,  NULL
             ,  NULL
             ,  NULL
             ,  ${USE_YN}
             ,  SYSDATE
             ,  ${UPD_USER}
             ,  SYSDATE
             ,  ${UPD_USER}
        )
]]></query>

<query name='PROMOTION_STOR_U'><![CDATA[
    MERGE   INTO PROMOTION_STOR
    USING   DUAL
    ON (    
                COMP_CD     = ${COMP_CD}
           AND  PRMT_ID     = ${PRMT_ID}
           AND  BRAND_CD    = ${BRAND_CD}
           AND  STOR_CD     = ${STOR_CD}
       )
    WHEN MATCHED THEN
        UPDATE 
           SET  USE_YN      = ${USE_YN}
             ,  UPD_DT      = SYSDATE
             ,  UPD_USER    = ${UPD_USER}
    WHEN NOT MATCHED THEN
        INSERT
        (
                COMP_CD
             ,  PRMT_ID
             ,  BRAND_CD
             ,  STOR_CD
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER
        ) VALUES (
                ${COMP_CD}
             ,  ${PRMT_ID}
             ,  ${BRAND_CD}
             ,  ${STOR_CD}
             ,  ${USE_YN}
             ,  SYSDATE
             ,  ${UPD_USER}
             ,  SYSDATE
             ,  ${UPD_USER}
        )
]]></query>

<query name='TAB03_MAIN_Q'><![CDATA[
    SELECT  P.COMP_CD
         ,  P.PRMT_ID
         ,  P.BRAND_CLASS
         ,  P.BRAND_CD
         ,  P.PRMT_CLASS
         ,  P.PRMT_TYPE
         ,  P.PRMT_TYPE_DET
         ,  P.PRMT_NM
         ,  P.CONDITION_AMT
         ,  P.MODIFY_DIV_1
         ,  P.DC_RATE
         ,  P.DC_AMT
         ,  P.CONDITION_QTY_REQ
         ,  P.CONDITION_QTY_NOR
         ,  P.GIVE_QTY
         ,  P.ADD_MLG
         ,  P.ADD_MLG_DIV
         ,  P.ADD_MLG_CLOSE_DT
         ,  P.ADD_MLG_USE_DAY
         ,  P.ADD_PT
         ,  P.ADD_PT_DIV
         ,  P.ADD_PT_CLOSE_DT
         ,  P.ADD_PT_USE_DAY
      FROM  PROMOTION   P
     WHERE  P.COMP_CD   = ${SCH_COMP_CD} 
       AND  P.PRMT_ID   = ${SCH_PRMT_ID}
]]></query>

<query name='PROMOTION_ITEM_U'><![CDATA[
    UPDATE  PROMOTION
       SET  CONDITION_AMT       = ${CONDITION_AMT}
         ,  MODIFY_DIV_1        = ${MODIFY_DIV_1}
         ,  DC_RATE             = ${DC_RATE}
         ,  DC_AMT              = ${DC_AMT}
         ,  CONDITION_QTY_REQ   = ${CONDITION_QTY_REQ}
         ,  CONDITION_QTY_NOR   = ${CONDITION_QTY_NOR}
         ,  GIVE_QTY            = ${GIVE_QTY}
         ,  ADD_MLG             = ${ADD_MLG}
         ,  ADD_MLG_DIV         = ${ADD_MLG_DIV}
         ,  ADD_MLG_CLOSE_DT    = ${ADD_MLG_CLOSE_DT}
         ,  ADD_MLG_USE_DAY     = ${ADD_MLG_USE_DAY}
         ,  ADD_PT              = ${ADD_PT}
         ,  ADD_PT_DIV          = ${ADD_PT_DIV}
         ,  ADD_PT_CLOSE_DT     = ${ADD_PT_CLOSE_DT}
         ,  ADD_PT_USE_DAY      = ${ADD_PT_USE_DAY}
         ,  UPD_DT              = SYSDATE
         ,  UPD_USER            = ${UPD_USER}
     WHERE  COMP_CD             = ${COMP_CD}
       AND  PRMT_ID             = ${PRMT_ID}
]]></query>

<query name='TAB03_T_CLS_Q'><![CDATA[
    SELECT  T.COMP_CD
         ,  T.PRMT_ID
         ,  ${SCH_ORG_CLASS_CD}                             AS ORG_CLASS_CD
         ,  T.L_CLASS_CD
         ,  T.M_CLASS_CD
         ,  T.S_CLASS_CD
         ,  T.ITEM_DIV
         ,  T.QTY
         ,  T.USE_YN
         ,  TO_CHAR(T.UPD_DT, 'YYYY-MM-DD HH24:MI:SS')      AS UPD_DT
         ,  NVL(U.USER_NM, T.UPD_USER)                      AS UPD_USER
      FROM  PROMOTION_TARGET_MN_GP  T
         ,  (
                SELECT  COMP_CD
                     ,  USER_ID
                     ,  MAX(USER_NM)        AS USER_NM
                  FROM  (
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  USER_NM
                              FROM  HQ_USER
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                            UNION
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  USER_NM
                              FROM  STORE_USER
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                        )
                 GROUP  BY COMP_CD, USER_ID
            )       U
     WHERE  T.COMP_CD       = U.COMP_CD(+)
       AND  T.UPD_USER      = U.USER_ID(+) 
       AND  T.COMP_CD       = ${SCH_COMP_CD} 
       AND  T.PRMT_ID       = ${SCH_PRMT_ID}
       AND  (${SCH_USE_YN} IS NULL OR T.USE_YN = ${SCH_USE_YN})
     ORDER  BY T.L_CLASS_CD, T.M_CLASS_CD, T.S_CLASS_CD, T.ITEM_DIV
]]></query>

<query name='TAB03_T_CLS_U'><![CDATA[
    MERGE   INTO PROMOTION_TARGET_MN_GP
    USING   DUAL
    ON (    
                COMP_CD     = ${COMP_CD}
           AND  PRMT_ID     = ${PRMT_ID}
           AND  L_CLASS_CD  = ${L_CLASS_CD}
           AND  M_CLASS_CD  = ${M_CLASS_CD}
           AND  S_CLASS_CD  = ${S_CLASS_CD}
           AND  ITEM_DIV    = ${ITEM_DIV}
       )
    WHEN MATCHED THEN
        UPDATE 
           SET  QTY         = ${QTY}
             ,  USE_YN      = ${USE_YN}
             ,  UPD_DT      = SYSDATE
             ,  UPD_USER    = ${UPD_USER}
    WHEN NOT MATCHED THEN
        INSERT
        (
                COMP_CD
             ,  PRMT_ID
             ,  L_CLASS_CD
             ,  M_CLASS_CD
             ,  S_CLASS_CD
             ,  ITEM_DIV
             ,  QTY
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER
        ) VALUES (
                ${COMP_CD}
             ,  ${PRMT_ID}
             ,  ${L_CLASS_CD}
             ,  ${M_CLASS_CD}
             ,  ${S_CLASS_CD}
             ,  ${ITEM_DIV}
             ,  ${QTY}
             ,  ${USE_YN}
             ,  SYSDATE
             ,  ${UPD_USER}
             ,  SYSDATE
             ,  ${UPD_USER}
        )
]]></query>

<query name='TAB03_T_ITEM_Q'><![CDATA[
    SELECT  T.COMP_CD
         ,  T.PRMT_ID
         ,  T.ITEM_CD
         ,  I.ITEM_NM
         ,  I.SALE_PRC
         ,  T.ITEM_DIV
         ,  T.QTY
         ,  T.USE_YN
         ,  TO_CHAR(T.UPD_DT, 'YYYY-MM-DD HH24:MI:SS')      AS UPD_DT
         ,  NVL(U.USER_NM, T.UPD_USER)                      AS UPD_USER
      FROM  PROMOTION_TARGET_MN     T
         ,  ITEM                    I
         ,  (
                SELECT  COMP_CD
                     ,  USER_ID
                     ,  MAX(USER_NM)        AS USER_NM
                  FROM  (
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  USER_NM
                              FROM  HQ_USER
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                            UNION
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  USER_NM
                              FROM  STORE_USER
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                        )
                 GROUP  BY COMP_CD, USER_ID
            )       U
     WHERE  T.COMP_CD       = I.COMP_CD(+)
       AND  T.ITEM_CD       = I.ITEM_CD(+) 
       AND  T.COMP_CD       = U.COMP_CD(+)
       AND  T.UPD_USER      = U.USER_ID(+) 
       AND  T.COMP_CD       = ${SCH_COMP_CD} 
       AND  T.PRMT_ID       = ${SCH_PRMT_ID}
       AND  (${SCH_USE_YN} IS NULL OR T.USE_YN = ${SCH_USE_YN})
     ORDER  BY T.ITEM_CD, T.ITEM_DIV
]]></query>

<query name='TAB03_T_ITEM_U'><![CDATA[
    MERGE   INTO PROMOTION_TARGET_MN
    USING   DUAL
    ON (    
                COMP_CD     = ${COMP_CD}
           AND  PRMT_ID     = ${PRMT_ID}
           AND  ITEM_CD     = ${ITEM_CD}
           AND  ITEM_DIV    = ${ITEM_DIV}
       )
    WHEN MATCHED THEN
        UPDATE 
           SET  QTY         = ${QTY}
             ,  USE_YN      = ${USE_YN}
             ,  UPD_DT      = SYSDATE
             ,  UPD_USER    = ${UPD_USER}
    WHEN NOT MATCHED THEN
        INSERT
        (
                COMP_CD
             ,  PRMT_ID
             ,  ITEM_CD
             ,  ITEM_DIV
             ,  QTY
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER
        ) VALUES (
                ${COMP_CD}
             ,  ${PRMT_ID}
             ,  ${ITEM_CD}
             ,  ${ITEM_DIV}
             ,  ${QTY}
             ,  ${USE_YN}
             ,  SYSDATE
             ,  ${UPD_USER}
             ,  SYSDATE
             ,  ${UPD_USER}
        )
]]></query>

<query name='TAB03_B_CLS_Q'><![CDATA[
    SELECT  B.COMP_CD
         ,  B.PRMT_ID
         ,  ${SCH_ORG_CLASS_CD}                             AS ORG_CLASS_CD
         ,  B.L_CLASS_CD
         ,  B.M_CLASS_CD
         ,  B.S_CLASS_CD
         ,  B.BNFIT_DIV
         ,  B.QTY
         ,  B.DC_AMT
         ,  B.DC_RATE
         ,  B.OFFER_TM
         ,  B.USE_YN
         ,  TO_CHAR(B.UPD_DT, 'YYYY-MM-DD HH24:MI:SS')      AS UPD_DT
         ,  NVL(U.USER_NM, B.UPD_USER)                      AS UPD_USER
      FROM  PROMOTION_BNFIT_MN_GP   B
         ,  (
                SELECT  COMP_CD
                     ,  USER_ID
                     ,  MAX(USER_NM)        AS USER_NM
                  FROM  (
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  USER_NM
                              FROM  HQ_USER
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                            UNION
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  USER_NM
                              FROM  STORE_USER
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                        )
                 GROUP  BY COMP_CD, USER_ID
            )       U
     WHERE  B.COMP_CD       = U.COMP_CD(+)
       AND  B.UPD_USER      = U.USER_ID(+) 
       AND  B.COMP_CD       = ${SCH_COMP_CD} 
       AND  B.PRMT_ID       = ${SCH_PRMT_ID}
       AND  (${SCH_USE_YN} IS NULL OR B.USE_YN = ${SCH_USE_YN})
     ORDER  BY B.L_CLASS_CD, B.M_CLASS_CD, B.S_CLASS_CD, B.BNFIT_DIV
]]></query>

<query name='TAB03_B_CLS_U'><![CDATA[
    MERGE   INTO PROMOTION_BNFIT_MN_GP
    USING   DUAL
    ON (    
                COMP_CD     = ${COMP_CD}
           AND  PRMT_ID     = ${PRMT_ID}
           AND  L_CLASS_CD  = ${L_CLASS_CD}
           AND  M_CLASS_CD  = ${M_CLASS_CD}
           AND  S_CLASS_CD  = ${S_CLASS_CD}
       )
    WHEN MATCHED THEN
        UPDATE 
           SET  BNFIT_DIV   = ${BNFIT_DIV}
             ,  QTY         = ${QTY}
             ,  DC_AMT      = ${DC_AMT}
             ,  DC_RATE     = ${DC_RATE}
             ,  OFFER_TM    = ${OFFER_TM}
             ,  USE_YN      = ${USE_YN}
             ,  UPD_DT      = SYSDATE
             ,  UPD_USER    = ${UPD_USER}
    WHEN NOT MATCHED THEN
        INSERT
        (
                COMP_CD
             ,  PRMT_ID
             ,  L_CLASS_CD
             ,  M_CLASS_CD
             ,  S_CLASS_CD
             ,  BNFIT_DIV
             ,  QTY
             ,  DC_AMT
             ,  DC_RATE
             ,  OFFER_TM
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER
        ) VALUES (
                ${COMP_CD}
             ,  ${PRMT_ID}
             ,  ${L_CLASS_CD}
             ,  ${M_CLASS_CD}
             ,  ${S_CLASS_CD}
             ,  ${BNFIT_DIV}
             ,  ${QTY}
             ,  ${DC_AMT}
             ,  ${DC_RATE}
             ,  ${OFFER_TM}
             ,  ${USE_YN}
             ,  SYSDATE
             ,  ${UPD_USER}
             ,  SYSDATE
             ,  ${UPD_USER}
        )
]]></query>

<query name='TAB03_B_ITEM_Q'><![CDATA[
    SELECT  B.COMP_CD
         ,  B.PRMT_ID
         ,  B.ITEM_CD
         ,  I.ITEM_NM
         ,  I.SALE_PRC
         ,  B.BNFIT_DIV
         ,  B.QTY
         ,  B.DC_RATE
         ,  B.DC_AMT
         ,  B.OFFER_TM
         ,  B.USE_YN
         ,  TO_CHAR(B.UPD_DT, 'YYYY-MM-DD HH24:MI:SS')      AS UPD_DT
         ,  NVL(U.USER_NM, B.UPD_USER)                      AS UPD_USER
      FROM  PROMOTION_BNFIT_MN      B
         ,  ITEM                    I
         ,  (
                SELECT  COMP_CD
                     ,  USER_ID
                     ,  MAX(USER_NM)        AS USER_NM
                  FROM  (
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  USER_NM
                              FROM  HQ_USER
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                            UNION
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  USER_NM
                              FROM  STORE_USER
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                        )
                 GROUP  BY COMP_CD, USER_ID
            )       U
     WHERE  B.COMP_CD       = I.COMP_CD(+)
       AND  B.ITEM_CD       = I.ITEM_CD(+) 
       AND  B.COMP_CD       = U.COMP_CD(+)
       AND  B.UPD_USER      = U.USER_ID(+) 
       AND  B.COMP_CD       = ${SCH_COMP_CD} 
       AND  B.PRMT_ID       = ${SCH_PRMT_ID}
       AND  (${SCH_USE_YN} IS NULL OR B.USE_YN = ${SCH_USE_YN})
     ORDER  BY B.ITEM_CD, B.BNFIT_DIV
]]></query>

<query name='TAB03_B_ITEM_U'><![CDATA[
    MERGE   INTO PROMOTION_BNFIT_MN
    USING   DUAL
    ON (    
                COMP_CD     = ${COMP_CD}
           AND  PRMT_ID     = ${PRMT_ID}
           AND  ITEM_CD     = ${ITEM_CD}
       )
    WHEN MATCHED THEN
        UPDATE 
           SET  BNFIT_DIV   = ${BNFIT_DIV}
             ,  QTY         = ${QTY}
             ,  DC_AMT      = ${DC_AMT}
             ,  DC_RATE     = ${DC_RATE}
             ,  OFFER_TM    = ${OFFER_TM}
             ,  USE_YN      = ${USE_YN}
             ,  UPD_DT      = SYSDATE
             ,  UPD_USER    = ${UPD_USER}
    WHEN NOT MATCHED THEN
        INSERT
        (
                COMP_CD
             ,  PRMT_ID
             ,  ITEM_CD
             ,  BNFIT_DIV
             ,  QTY
             ,  DC_AMT
             ,  DC_RATE
             ,  OFFER_TM
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER
        ) VALUES (
                ${COMP_CD}
             ,  ${PRMT_ID}
             ,  ${ITEM_CD}
             ,  ${BNFIT_DIV}
             ,  ${QTY}
             ,  ${DC_AMT}
             ,  ${DC_RATE}
             ,  ${OFFER_TM}
             ,  ${USE_YN}
             ,  SYSDATE
             ,  ${UPD_USER}
             ,  SYSDATE
             ,  ${UPD_USER}
        )
]]></query>

</SQLResource>