<?xml version='1.0' encoding='utf-8'?>
<SQLResource version='1'>

<query name='SCHEDULE_MASTER_S'><![CDATA[
    SELECT  *
      FROM  JAVA_SCJ_M
     WHERE  COMP_CD = ${SCH_COMP_CD}
       AND  USE_YN  = 'Y'
       AND  (${SCH_SCHEDULE_ID} IS NULL OR SCHEDULE_ID = ${SCH_SCHEDULE_ID})
]]></query>

<query name='JAVA_SCJ_M_IMSI_U'><![CDATA[
    UPDATE  JAVA_SCJ_M
       SET  INPUT_PARAM1    = CASE WHEN TO_NUMBER(INPUT_PARAM1) > 8 THEN TO_CHAR(TO_NUMBER(INPUT_PARAM1) - 1) ELSE INPUT_PARAM1 END
     WHERE  COMP_CD = ${SCH_COMP_CD}
       AND  USE_YN  = 'Y'
       AND  (${SCH_SCHEDULE_ID} IS NULL OR SCHEDULE_ID = ${SCH_SCHEDULE_ID})
]]></query>

<query name='MA_ITEM_UM_HLY_Q'><![CDATA[
    SELECT  IU.CD_ITEM
         ,  IU.FG_UM
         ,  IU.CD_EXCH
         ,  IU.NO_LINE
         ,  IU.TP_UMMODULE
         ,  IU.CD_COMPANY
         ,  IU.CD_PLANT
         ,  IU.UM_ITEM
         ,  IU.SDT_UM
         ,  IU.EDT_UM
         ,  MAX(IU.DTS_INSERT)      AS DTS_INSERT
         ,  MAX(IU.ID_INSERT)       AS ID_INSERT
         ,  MAX(IU.DTS_UPDATE)      AS DTS_UPDATE
         ,  MAX(IU.ID_UPDATE)       AS ID_UPDATE
         ,  MAX(IU.FG_REASON)       AS FG_REASON
         ,  MAX(IU.DC_RMK)          AS DC_RMK
         ,  MAX(IU.HEADER_ID)       AS HEADER_ID
         ,  MAX(IU.CD_USERDEF1)     AS CD_USERDEF1
         ,  MAX(IU.NUM_USERDEF1)    AS NUM_USERDEF1
         ,  MAX(IU.NUM_USERDEF2)    AS NUM_USERDEF2
         ,  MAX(IU.NUM_USERDEF3)    AS NUM_USERDEF3
         ,  MAX(IU.NUM_USERDEF4)    AS NUM_USERDEF4
         ,  MAX(IU.NUM_USERDEF5)    AS NUM_USERDEF5
         ,  MAX(IU.NUM_USERDEF6)    AS NUM_USERDEF6
         ,  MAX(IU.NUM_USERDEF7)    AS NUM_USERDEF7
      FROM  NEOE.MA_ITEM_UM_HLY                 IU
LEFT OUTER  JOIN NEOE.V_SA_Z_HLY_FRAN_ITEMORDER  IO
        ON  IU.CD_COMPANY   = IO.CD_COMPANY
       AND  IU.CD_PLANT     = IO.CD_PLANT
       AND  IU.CD_ITEM      = IO.CD_ITEM
     WHERE  IU.CD_COMPANY  = '1000'
       AND  IU.FG_UM       = '001'
     GROUP  BY IU.CD_ITEM, IU.FG_UM, IU.CD_EXCH, IU.NO_LINE, IU.TP_UMMODULE, IU.CD_COMPANY, IU.CD_PLANT, IU.UM_ITEM, IU.SDT_UM, IU.EDT_UM
    HAVING  (
                (MAX(IU.DTS_INSERT) >= ${SCH_LAST_DATE} OR MAX(IU.DTS_UPDATE) >= ${SCH_LAST_DATE})
                OR
                (MAX(IO.HLY_FRAN_ITEMORDER_DTS_INSERT) >= ${SCH_LAST_DATE} OR MAX(IO.HLY_FRAN_ITEMORDER_DTS_UPDATE) >= ${SCH_LAST_DATE})
            )
]]></query>

<query name='ERP_MA_ITEM_UM_HLY_I'><![CDATA[
    INSERT  INTO ERP_MA_ITEM_UM_HLY
    (
            CD_ITEM
         ,  FG_UM
         ,  CD_EXCH
         ,  NO_LINE
         ,  TP_UMMODULE
         ,  CD_COMPANY
         ,  CD_PLANT
         ,  UM_ITEM
         ,  SDT_UM
         ,  EDT_UM
         ,  DTS_INSERT
         ,  ID_INSERT
         ,  DTS_UPDATE
         ,  ID_UPDATE
         ,  FG_REASON
         ,  DC_RMK
         ,  HEADER_ID
         ,  CD_USERDEF1
         ,  NUM_USERDEF1
         ,  NUM_USERDEF2
         ,  NUM_USERDEF3
         ,  NUM_USERDEF4
         ,  NUM_USERDEF5
         ,  NUM_USERDEF6
         ,  NUM_USERDEF7
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_ITEM}
         ,  ${FG_UM}
         ,  ${CD_EXCH}
         ,  ${NO_LINE}
         ,  ${TP_UMMODULE}
         ,  ${CD_COMPANY}
         ,  ${CD_PLANT}
         ,  ${UM_ITEM}
         ,  ${SDT_UM}
         ,  ${EDT_UM}
         ,  ${DTS_INSERT}
         ,  ${ID_INSERT}
         ,  ${DTS_UPDATE}
         ,  ${ID_UPDATE}
         ,  ${FG_REASON}
         ,  ${DC_RMK}
         ,  ${HEADER_ID}
         ,  ${CD_USERDEF1}
         ,  ${NUM_USERDEF1}
         ,  ${NUM_USERDEF2}
         ,  ${NUM_USERDEF3}
         ,  ${NUM_USERDEF4}
         ,  ${NUM_USERDEF5}
         ,  ${NUM_USERDEF6}
         ,  ${NUM_USERDEF7}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='MA_ITEM_UMPARTNER_HLY_Q'><![CDATA[
    SELECT  MIUH.*
      FROM  NEOE.MA_PARTNER_HLY     MPH
      JOIN  (
                SELECT  *
                  FROM  NEOE.MA_ITEM_UMPARTNER_HLY
                 WHERE  DTS_INSERT >= ${SCH_LAST_DATE}
                    OR  DTS_UPDATE >= ${SCH_LAST_DATE}
            )   MIUH
        ON  MPH.CD_COMPANY  = MIUH.CD_COMPANY
       AND  MPH.CD_PARTNER  = MIUH.CD_PARTNER
     WHERE  MPH.CD_COMPANY  = '1000'
       AND  MPH.CLS_PARTNER = '006'
]]></query>

<query name='ERP_MA_ITEM_UMPARTNER_HLY_I'><![CDATA[
    INSERT  INTO ERP_MA_ITEM_UMPARTNER_HLY
    (
            CD_ITEM
         ,  CD_PARTNER
         ,  FG_UM
         ,  CD_EXCH
         ,  NO_LINE
         ,  TP_UMMODULE
         ,  CD_COMPANY
         ,  CD_PLANT
         ,  UM_ITEM
         ,  UM_ITEM_LOW
         ,  SDT_UM
         ,  EDT_UM
         ,  DTS_INSERT
         ,  ID_INSERT
         ,  DTS_UPDATE
         ,  ID_UPDATE
         ,  FG_REASON
         ,  DC_RMK
         ,  RT_MARGIN
         ,  UP_PCOST
         ,  UM_MTRL
         ,  DT_APPLY
         ,  AM_PAKING
         ,  CD_USERDEF1
         ,  CD_USERDEF2
         ,  NUM_USERDEF1
         ,  NUM_USERDEF2
         ,  NUM_USERDEF3
         ,  NUM_USERDEF4
         ,  NUM_USERDEF5
         ,  NUM_USERDEF6
         ,  NUM_USERDEF7
         ,  NUM_USERDEF8
         ,  NUM_USERDEF9
         ,  NUM_USERDEF10
         ,  TXT_USERDEF1
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_ITEM}
         ,  ${CD_PARTNER}
         ,  ${FG_UM}
         ,  ${CD_EXCH}
         ,  ${NO_LINE}
         ,  ${TP_UMMODULE}
         ,  ${CD_COMPANY}
         ,  ${CD_PLANT}
         ,  ${UM_ITEM}
         ,  ${UM_ITEM_LOW}
         ,  ${SDT_UM}
         ,  ${EDT_UM}
         ,  ${DTS_INSERT}
         ,  ${ID_INSERT}
         ,  ${DTS_UPDATE}
         ,  ${ID_UPDATE}
         ,  ${FG_REASON}
         ,  ${DC_RMK}
         ,  ${RT_MARGIN}
         ,  ${UP_PCOST}
         ,  ${UM_MTRL}
         ,  ${DT_APPLY}
         ,  ${AM_PAKING}
         ,  ${CD_USERDEF1}
         ,  ${CD_USERDEF2}
         ,  ${NUM_USERDEF1}
         ,  ${NUM_USERDEF2}
         ,  ${NUM_USERDEF3}
         ,  ${NUM_USERDEF4}
         ,  ${NUM_USERDEF5}
         ,  ${NUM_USERDEF6}
         ,  ${NUM_USERDEF7}
         ,  ${NUM_USERDEF8}
         ,  ${NUM_USERDEF9}
         ,  ${NUM_USERDEF10}
         ,  ${TXT_USERDEF1}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='MA_PARTNER_HLY_Q'><![CDATA[
    SELECT  CD_PARTNER
         ,  CD_COMPANY
         ,  LN_PARTNER
         ,  DT_OPEN
         ,  AM_CAP
         ,  MANU_EMP
         ,  MANA_EMP
         ,  SD_PARTNER
         ,  USE_YN
         ,  LT_TRANS
         ,  SN_PARTNER
         ,  EN_PARTNER
         ,  TP_PARTNER
         ,  FG_PARTNER
         ,  NM_CEO
         ,  NO_COMPANY
         ,  NO_RES
         ,  TP_JOB
         ,  CLS_JOB
         ,  URL_PARTNER
         ,  CLS_PARTNER
         ,  NM_PTR
         ,  CD_NATION
         ,  STA_CREDIT
         ,  E_MAIL
         ,  NO_TEL
         ,  NO_FAX
         ,  NO_POST1
         ,  DC_ADS1_H
         ,  DC_ADS1_D
         ,  NO_TEL1
         ,  NO_FAX1
         ,  NO_POST2
         ,  DC_ADS2_H
         ,  DC_ADS2_D
         ,  NO_TEL2
         ,  NO_FAX2
         ,  NO_POST3
         ,  DC_ADS3_H
         ,  DC_ADS3_D
         ,  NO_TEL3
         ,  NO_FAX3
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  ID_UPDATE
         ,  DTS_UPDATE
         ,  FG_CREDIT
         ,  TP_TAX
         ,  NO_MERCHANT
         ,  NO_DEPOSIT
         ,  CD_BANK
         ,  ID_COMPANY
         ,  PW_COMPANY
         ,  CD_PARTNER_GRP
         ,  CD_EMP_SALE
         ,  CD_EMP_PARTNER
         ,  NO_HPEMP_PARTNER
         ,  CD_AREA
         ,  NM_DEPOSIT
         ,  DT_RCP_PREARRANGED
         ,  E_MAIL_PARTNER
         ,  CD_PARTNER_GRP_2
         ,  FG_BILL
         ,  CD_AREA_SD
         ,  DY_CRD
         ,  FG_TRADE
         ,  FG_GRD_M
         ,  FG_GRD_U
         ,  FG_LIMIT
         ,  SETTLE
         ,  CD_WHAN
         ,  AR_GUBUN
         ,  DC_RMK
         ,  AM_CRD_1
         ,  AM_CRD_2
         ,  FG_CUST_SD
         ,  FG_PAYBILL
         ,  DT_PAY_PREARRANGED
         ,  CD_CON
         ,  YN_JEONJATAX
         ,  DT_CLOSE
         ,  TP_BUSINESS
         ,  FG_CON_SELECT
         ,  ID_CON_SELECT
         ,  DTS_CON_SELECT
         ,  CD_PARTDEPT
         ,  DT_TRADEND
         ,  NM_ENDRESON
         ,  NM_NOTE
         ,  YN_MIS
         ,  YN_BIZTAX
         ,  NO_BIZTAX
         ,  YN_JEONJA
         ,  TP_DEFER
         ,  TP_RCP_DD
         ,  DT_RCP_DD
         ,  TP_PAY_DD
         ,  DT_PAY_DD
         ,  NUM_USERDEF1
         ,  CHAN_AMT
         ,  FG_CORP
         ,  NM_CURE_AGENCY
         ,  NO_CUER_AGENCY
         ,  NM_TEXT
         ,  TP_NATION
         ,  NM_DCDEPOSIT
         ,  FG_CORPCODE
         ,  DT_RCP_PRETOLERANCE
         ,  CONTRACT
         ,  NO_COR
         ,  CD_DEPT
         ,  CD_CC
         ,  YN_RMCUSTOMER
         ,  YN_RMSUPPLIER
         ,  TP_DT_RCP_PREARRANGED
         ,  TP_DT_PAY_PREARRANGED
         ,  TP_PALCOHOLIC
         ,  CONVERT(VARCHAR, GW_INSERT_TIME, 112) + REPLACE(CONVERT(VARCHAR, GW_INSERT_TIME, 108), ':', '')     AS GW_INSERT_TIME
         ,  CONVERT(VARCHAR, GW_UPDATE_TIME, 112) + REPLACE(CONVERT(VARCHAR, GW_UPDATE_TIME, 108), ':', '')     AS GW_UPDATE_TIME
         ,  LN_PARTNER_L1
         ,  LN_PARTNER_L2
         ,  LN_PARTNER_L3
         ,  LN_PARTNER_L4
         ,  LN_PARTNER_L5
         ,  SN_PARTNER_L1
         ,  SN_PARTNER_L2
         ,  SN_PARTNER_L3
         ,  SN_PARTNER_L4
         ,  SN_PARTNER_L5
         ,  NM_CEO_L1
         ,  NM_CEO_L2
         ,  NM_CEO_L3
         ,  NM_CEO_L4
         ,  NM_CEO_L5
         ,  DC_ADS1_H_L1
         ,  DC_ADS1_H_L2
         ,  DC_ADS1_H_L3
         ,  DC_ADS1_H_L4
         ,  DC_ADS1_H_L5
         ,  DC_ADS1_D_L1
         ,  DC_ADS1_D_L2
         ,  DC_ADS1_D_L3
         ,  DC_ADS1_D_L4
         ,  DC_ADS1_D_L5
         ,  CD_BKPARTNER
         ,  NO_BKTEL
         ,  TAX_ID
         ,  CD_PARTGRADE
         ,  CD_BONDGRADE
         ,  CD_TMPARTNER_FILE
         ,  CD_TMPARTNER
         ,  TRANS_FLAG
         ,  CD_HIPRO
         ,  DT_CON_UPDATE
         ,  CD_TAXTYPE
      FROM  NEOE.MA_PARTNER_HLY
     WHERE  CD_COMPANY  = '1000'
       AND  CLS_PARTNER = '006'
       AND  (DTS_INSERT >= ${SCH_LAST_DATE} OR DTS_UPDATE >= ${SCH_LAST_DATE})
]]></query>

<query name='ERP_MA_PARTNER_HLY_I'><![CDATA[
    INSERT  INTO ERP_MA_PARTNER_HLY
    (
            CD_PARTNER
         ,  CD_COMPANY
         ,  LN_PARTNER
         ,  DT_OPEN
         ,  AM_CAP
         ,  MANU_EMP
         ,  MANA_EMP
         ,  SD_PARTNER
         ,  USE_YN
         ,  LT_TRANS
         ,  SN_PARTNER
         ,  EN_PARTNER
         ,  TP_PARTNER
         ,  FG_PARTNER
         ,  NM_CEO
         ,  NO_COMPANY
         ,  NO_RES
         ,  TP_JOB
         ,  CLS_JOB
         ,  URL_PARTNER
         ,  CLS_PARTNER
         ,  NM_PTR
         ,  CD_NATION
         ,  STA_CREDIT
         ,  E_MAIL
         ,  NO_TEL
         ,  NO_FAX
         ,  NO_POST1
         ,  DC_ADS1_H
         ,  DC_ADS1_D
         ,  NO_TEL1
         ,  NO_FAX1
         ,  NO_POST2
         ,  DC_ADS2_H
         ,  DC_ADS2_D
         ,  NO_TEL2
         ,  NO_FAX2
         ,  NO_POST3
         ,  DC_ADS3_H
         ,  DC_ADS3_D
         ,  NO_TEL3
         ,  NO_FAX3
         ,  DTS_INSERT
         ,  ID_INSERT
         ,  DTS_UPDATE
         ,  ID_UPDATE
         ,  FG_CREDIT
         ,  TP_TAX
         ,  NO_MERCHANT
         ,  NO_DEPOSIT
         ,  CD_BANK
         ,  ID_COMPANY
         ,  PW_COMPANY
         ,  CD_PARTNER_GRP
         ,  CD_EMP_SALE
         ,  CD_EMP_PARTNER
         ,  NO_HPEMP_PARTNER
         ,  CD_AREA
         ,  NM_DEPOSIT
         ,  DT_RCP_PREARRANGED
         ,  E_MAIL_PARTNER
         ,  CD_PARTNER_GRP_2
         ,  FG_BILL
         ,  CD_AREA_SD
         ,  DY_CRD
         ,  FG_TRADE
         ,  FG_GRD_M
         ,  FG_GRD_U
         ,  FG_LIMIT
         ,  SETTLE
         ,  CD_WHAN
         ,  AR_GUBUN
         ,  DC_RMK
         ,  AM_CRD_1
         ,  AM_CRD_2
         ,  FG_CUST_SD
         ,  FG_PAYBILL
         ,  DT_PAY_PREARRANGED
         ,  CD_CON
         ,  YN_JEONJATAX
         ,  DT_CLOSE
         ,  TP_BUSINESS
         ,  FG_CON_SELECT
         ,  ID_CON_SELECT
         ,  DTS_CON_SELECT
         ,  CD_PARTDEPT
         ,  DT_TRADEND
         ,  NM_ENDRESON
         ,  NM_NOTE
         ,  YN_MIS
         ,  YN_BIZTAX
         ,  NO_BIZTAX
         ,  YN_JEONJA
         ,  TP_DEFER
         ,  TP_RCP_DD
         ,  DT_RCP_DD
         ,  TP_PAY_DD
         ,  DT_PAY_DD
         ,  NUM_USERDEF1
         ,  CHAN_AMT
         ,  FG_CORP
         ,  NM_CURE_AGENCY
         ,  NO_CUER_AGENCY
         ,  NM_TEXT
         ,  TP_NATION
         ,  NM_DCDEPOSIT
         ,  FG_CORPCODE
         ,  DT_RCP_PRETOLERANCE
         ,  CONTRACT
         ,  NO_COR
         ,  CD_DEPT
         ,  CD_CC
         ,  YN_RMCUSTOMER
         ,  YN_RMSUPPLIER
         ,  TP_DT_RCP_PREARRANGED
         ,  TP_DT_PAY_PREARRANGED
         ,  TP_PALCOHOLIC
         ,  GW_INSERT_TIME
         ,  GW_UPDATE_TIME
         ,  LN_PARTNER_L1
         ,  LN_PARTNER_L2
         ,  LN_PARTNER_L3
         ,  LN_PARTNER_L4
         ,  LN_PARTNER_L5
         ,  SN_PARTNER_L1
         ,  SN_PARTNER_L2
         ,  SN_PARTNER_L3
         ,  SN_PARTNER_L4
         ,  SN_PARTNER_L5
         ,  NM_CEO_L1
         ,  NM_CEO_L2
         ,  NM_CEO_L3
         ,  NM_CEO_L4
         ,  NM_CEO_L5
         ,  DC_ADS1_H_L1
         ,  DC_ADS1_H_L2
         ,  DC_ADS1_H_L3
         ,  DC_ADS1_H_L4
         ,  DC_ADS1_H_L5
         ,  DC_ADS1_D_L1
         ,  DC_ADS1_D_L2
         ,  DC_ADS1_D_L3
         ,  DC_ADS1_D_L4
         ,  DC_ADS1_D_L5
         ,  CD_BKPARTNER
         ,  NO_BKTEL
         ,  TAX_ID
         ,  CD_PARTGRADE
         ,  CD_BONDGRADE
         ,  CD_TMPARTNER_FILE
         ,  CD_TMPARTNER
         ,  TRANS_FLAG
         ,  CD_HIPRO
         ,  DT_CON_UPDATE
         ,  CD_TAXTYPE
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_PARTNER}
         ,  ${CD_COMPANY}
         ,  ${LN_PARTNER}
         ,  ${DT_OPEN}
         ,  ${AM_CAP}
         ,  ${MANU_EMP}
         ,  ${MANA_EMP}
         ,  ${SD_PARTNER}
         ,  ${USE_YN}
         ,  ${LT_TRANS}
         ,  ${SN_PARTNER}
         ,  ${EN_PARTNER}
         ,  ${TP_PARTNER}
         ,  ${FG_PARTNER}
         ,  ${NM_CEO}
         ,  ${NO_COMPANY}
         ,  ${NO_RES}
         ,  ${TP_JOB}
         ,  ${CLS_JOB}
         ,  ${URL_PARTNER}
         ,  ${CLS_PARTNER}
         ,  ${NM_PTR}
         ,  ${CD_NATION}
         ,  ${STA_CREDIT}
         ,  ${E_MAIL}
         ,  ${NO_TEL}
         ,  ${NO_FAX}
         ,  ${NO_POST1}
         ,  ${DC_ADS1_H}
         ,  ${DC_ADS1_D}
         ,  ${NO_TEL1}
         ,  ${NO_FAX1}
         ,  ${NO_POST2}
         ,  ${DC_ADS2_H}
         ,  ${DC_ADS2_D}
         ,  ${NO_TEL2}
         ,  ${NO_FAX2}
         ,  ${NO_POST3}
         ,  ${DC_ADS3_H}
         ,  ${DC_ADS3_D}
         ,  ${NO_TEL3}
         ,  ${NO_FAX3}
         ,  ${DTS_INSERT}
         ,  ${ID_INSERT}
         ,  ${DTS_UPDATE}
         ,  ${ID_UPDATE}
         ,  ${FG_CREDIT}
         ,  ${TP_TAX}
         ,  ${NO_MERCHANT}
         ,  ${NO_DEPOSIT}
         ,  ${CD_BANK}
         ,  ${ID_COMPANY}
         ,  ${PW_COMPANY}
         ,  ${CD_PARTNER_GRP}
         ,  ${CD_EMP_SALE}
         ,  ${CD_EMP_PARTNER}
         ,  ${NO_HPEMP_PARTNER}
         ,  ${CD_AREA}
         ,  ${NM_DEPOSIT}
         ,  ${DT_RCP_PREARRANGED}
         ,  ${E_MAIL_PARTNER}
         ,  ${CD_PARTNER_GRP_2}
         ,  ${FG_BILL}
         ,  ${CD_AREA_SD}
         ,  ${DY_CRD}
         ,  ${FG_TRADE}
         ,  ${FG_GRD_M}
         ,  ${FG_GRD_U}
         ,  ${FG_LIMIT}
         ,  ${SETTLE}
         ,  ${CD_WHAN}
         ,  ${AR_GUBUN}
         ,  ${DC_RMK}
         ,  ${AM_CRD_1}
         ,  ${AM_CRD_2}
         ,  ${FG_CUST_SD}
         ,  ${FG_PAYBILL}
         ,  ${DT_PAY_PREARRANGED}
         ,  ${CD_CON}
         ,  ${YN_JEONJATAX}
         ,  ${DT_CLOSE}
         ,  ${TP_BUSINESS}
         ,  ${FG_CON_SELECT}
         ,  ${ID_CON_SELECT}
         ,  ${DTS_CON_SELECT}
         ,  ${CD_PARTDEPT}
         ,  ${DT_TRADEND}
         ,  ${NM_ENDRESON}
         ,  ${NM_NOTE}
         ,  ${YN_MIS}
         ,  ${YN_BIZTAX}
         ,  ${NO_BIZTAX}
         ,  ${YN_JEONJA}
         ,  ${TP_DEFER}
         ,  ${TP_RCP_DD}
         ,  ${DT_RCP_DD}
         ,  ${TP_PAY_DD}
         ,  ${DT_PAY_DD}
         ,  ${NUM_USERDEF1}
         ,  ${CHAN_AMT}
         ,  ${FG_CORP}
         ,  ${NM_CURE_AGENCY}
         ,  ${NO_CUER_AGENCY}
         ,  ${NM_TEXT}
         ,  ${TP_NATION}
         ,  ${NM_DCDEPOSIT}
         ,  ${FG_CORPCODE}
         ,  ${DT_RCP_PRETOLERANCE}
         ,  ${CONTRACT}
         ,  ${NO_COR}
         ,  ${CD_DEPT}
         ,  ${CD_CC}
         ,  ${YN_RMCUSTOMER}
         ,  ${YN_RMSUPPLIER}
         ,  ${TP_DT_RCP_PREARRANGED}
         ,  ${TP_DT_PAY_PREARRANGED}
         ,  ${TP_PALCOHOLIC}
         ,  TO_DATE(${GW_INSERT_TIME}, 'YYYYMMDDHH24MISS')
         ,  TO_DATE(${GW_UPDATE_TIME}, 'YYYYMMDDHH24MISS')
         ,  ${LN_PARTNER_L1}
         ,  ${LN_PARTNER_L2}
         ,  ${LN_PARTNER_L3}
         ,  ${LN_PARTNER_L4}
         ,  ${LN_PARTNER_L5}
         ,  ${SN_PARTNER_L1}
         ,  ${SN_PARTNER_L2}
         ,  ${SN_PARTNER_L3}
         ,  ${SN_PARTNER_L4}
         ,  ${SN_PARTNER_L5}
         ,  ${NM_CEO_L1}
         ,  ${NM_CEO_L2}
         ,  ${NM_CEO_L3}
         ,  ${NM_CEO_L4}
         ,  ${NM_CEO_L5}
         ,  ${DC_ADS1_H_L1}
         ,  ${DC_ADS1_H_L2}
         ,  ${DC_ADS1_H_L3}
         ,  ${DC_ADS1_H_L4}
         ,  ${DC_ADS1_H_L5}
         ,  ${DC_ADS1_D_L1}
         ,  ${DC_ADS1_D_L2}
         ,  ${DC_ADS1_D_L3}
         ,  ${DC_ADS1_D_L4}
         ,  ${DC_ADS1_D_L5}
         ,  ${CD_BKPARTNER}
         ,  ${NO_BKTEL}
         ,  ${TAX_ID}
         ,  ${CD_PARTGRADE}
         ,  ${CD_BONDGRADE}
         ,  ${CD_TMPARTNER_FILE}
         ,  ${CD_TMPARTNER}
         ,  ${TRANS_FLAG}
         ,  ${CD_HIPRO}
         ,  ${DT_CON_UPDATE}
         ,  ${CD_TAXTYPE}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='MA_PARTNER_SUB_HLY_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.MA_PARTNER_SUB_HLY
     WHERE  CD_COMPANY  = '1000'
       AND  (DTS_INSERT >= ${SCH_LAST_DATE} OR DTS_UPDATE >= ${SCH_LAST_DATE})
]]></query>

<query name='ERP_MA_PARTNER_SUB_HLY_I'><![CDATA[
    INSERT  INTO ERP_MA_PARTNER_SUB_HLY
    (
            CD_PARTNER
         ,  CD_COMPANY
         ,  NO_COMPANY
         ,  CD_SALEGRP
         ,  DT_START
         ,  DT_END
         ,  SPACE
         ,  INTERIOR
         ,  NO_CELLPHONE
         ,  SHIP_WEEK
         ,  YN_INSURANCE
         ,  YN_ANTI
         ,  DC_RMK
         ,  CD_CAR
         ,  FG_CR_CONTROL
         ,  AM_PREMINUM
         ,  AM_DEPOSIT
         ,  AM_LEASE
         ,  AM_MONTHLY_RENT
         ,  NO_TABLE
         ,  NO_CHAIR
         ,  SIGN_PARTNER
         ,  KITCHEN_FACILITY
         ,  KITCHEN_UTENSIL
         ,  FURNITURE
         ,  POS
         ,  DC_RMK2
         ,  DC_RMK3
         ,  AM_SALES
         ,  GRADE
         ,  TP_SO
         ,  CD_SL_ISU
         ,  CD_SL_RET
         ,  CD_DEPT
         ,  CONSIGNEE1
         ,  CONSIGNEE2
         ,  CONSIGNEE3
         ,  CONSIGNEE4
         ,  CONSIGNEE5
         ,  NOTIFY1
         ,  NOTIFY2
         ,  NOTIFY3
         ,  NOTIFY4
         ,  NOTIFY5
         ,  CREDIT_HOLD
         ,  FG_TAXP
         ,  CD_COURSE
         ,  FG_TRANSPORT
         ,  NM_USERDEF1
         ,  NM_USERDEF2
         ,  NM_USERDEF3
         ,  NM_USERDEF4
         ,  NM_USERDEF5
         ,  CD_USERDEF1
         ,  CD_USERDEF2
         ,  CD_USERDEF3
         ,  CD_USERDEF4
         ,  CD_USERDEF5
         ,  CD_USERDEF6
         ,  CD_USERDEF7
         ,  CD_USERDEF8
         ,  CD_USERDEF9
         ,  CD_USERDEF10
         ,  NUM_USERDEF1
         ,  NUM_USERDEF2
         ,  NUM_USERDEF3
         ,  NUM_USERDEF4
         ,  NUM_USERDEF5
         ,  FG_UM
         ,  NO_EMP_LOGISTIC
         ,  NO_EMP_PHONE
         ,  NO_POST
         ,  DC_ADSH
         ,  DC_ADSL
         ,  DC_REMARK
         ,  DTS_INSERT
         ,  ID_INSERT
         ,  DTS_UPDATE
         ,  ID_UPDATE
         ,  CD_TPPO
         ,  CD_PURGRP
         ,  NO_EMP
         ,  CD_CHANNEL
         ,  CD_ROUTING
         ,  FG_CREDIT
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_PARTNER}
         ,  ${CD_COMPANY}
         ,  ${NO_COMPANY}
         ,  ${CD_SALEGRP}
         ,  ${DT_START}
         ,  ${DT_END}
         ,  ${SPACE}
         ,  ${INTERIOR}
         ,  ${NO_CELLPHONE}
         ,  ${SHIP_WEEK}
         ,  ${YN_INSURANCE}
         ,  ${YN_ANTI}
         ,  ${DC_RMK}
         ,  ${CD_CAR}
         ,  ${FG_CR_CONTROL}
         ,  ${AM_PREMINUM}
         ,  ${AM_DEPOSIT}
         ,  ${AM_LEASE}
         ,  ${AM_MONTHLY_RENT}
         ,  ${NO_TABLE}
         ,  ${NO_CHAIR}
         ,  ${SIGN_PARTNER}
         ,  ${KITCHEN_FACILITY}
         ,  ${KITCHEN_UTENSIL}
         ,  ${FURNITURE}
         ,  ${POS}
         ,  ${DC_RMK2}
         ,  ${DC_RMK3}
         ,  ${AM_SALES}
         ,  ${GRADE}
         ,  ${TP_SO}
         ,  ${CD_SL_ISU}
         ,  ${CD_SL_RET}
         ,  ${CD_DEPT}
         ,  ${CONSIGNEE1}
         ,  ${CONSIGNEE2}
         ,  ${CONSIGNEE3}
         ,  ${CONSIGNEE4}
         ,  ${CONSIGNEE5}
         ,  ${NOTIFY1}
         ,  ${NOTIFY2}
         ,  ${NOTIFY3}
         ,  ${NOTIFY4}
         ,  ${NOTIFY5}
         ,  ${CREDIT_HOLD}
         ,  ${FG_TAXP}
         ,  ${CD_COURSE}
         ,  ${FG_TRANSPORT}
         ,  ${NM_USERDEF1}
         ,  ${NM_USERDEF2}
         ,  ${NM_USERDEF3}
         ,  ${NM_USERDEF4}
         ,  ${NM_USERDEF5}
         ,  ${CD_USERDEF1}
         ,  ${CD_USERDEF2}
         ,  ${CD_USERDEF3}
         ,  ${CD_USERDEF4}
         ,  ${CD_USERDEF5}
         ,  ${CD_USERDEF6}
         ,  ${CD_USERDEF7}
         ,  ${CD_USERDEF8}
         ,  ${CD_USERDEF9}
         ,  ${CD_USERDEF10}
         ,  ${NUM_USERDEF1}
         ,  ${NUM_USERDEF2}
         ,  ${NUM_USERDEF3}
         ,  ${NUM_USERDEF4}
         ,  ${NUM_USERDEF5}
         ,  ${FG_UM}
         ,  ${NO_EMP_LOGISTIC}
         ,  ${NO_EMP_PHONE}
         ,  ${NO_POST}
         ,  ${DC_ADSH}
         ,  ${DC_ADSL}
         ,  ${DC_REMARK}
         ,  ${DTS_INSERT}
         ,  ${ID_INSERT}
         ,  ${DTS_UPDATE}
         ,  ${ID_UPDATE}
         ,  ${CD_TPPO}
         ,  ${CD_PURGRP}
         ,  ${NO_EMP}
         ,  ${CD_CHANNEL}
         ,  ${CD_ROUTING}
         ,  ${FG_CREDIT}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='MA_SL_HLY_Q'><![CDATA[
    SELECT  MSH.*
         ,  MPH.CLS_JOB
         ,  MPH.TP_JOB
         ,  MPH.NO_TEL2
         ,  MPH.NO_FAX2
         ,  MPH.NO_POST2
         ,  MPH.DC_ADS2_H
         ,  MPH.DC_ADS2_D
      FROM  NEOE.MA_SL_HLY      MSH
LEFT OUTER  JOIN (
                    SELECT  *
                      FROM  NEOE.MA_PARTNER_HLY
                 )    MPH
        ON  MSH.CD_COMPANY = MPH.CD_COMPANY
       AND  MSH.CD_PARTNER = MPH.CD_PARTNER
     WHERE  MSH.CD_COMPANY  = '1000'
       AND  MSH.TP_SL       = '001'
       AND  MSH.MNG_SL      = '002'
       AND  (MSH.DTS_INSERT >= ${SCH_LAST_DATE} OR MSH.DTS_UPDATE >= ${SCH_LAST_DATE})
]]></query>

<query name='ERP_MA_SL_HLY_I'><![CDATA[
    INSERT  INTO ERP_MA_SL_HLY
    (
            CD_SL
         ,  CD_PLANT
         ,  CD_COMPANY
         ,  CD_BIZAREA
         ,  NM_SL
         ,  CD_WH
         ,  TP_SL
         ,  MNG_SL
         ,  MRP_YN
         ,  DC_100
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  ID_UPDATE
         ,  DTS_UPDATE
         ,  YN_SU_PART
         ,  KIND_CON
         ,  CP_CON
         ,  YN_LOCATION
         ,  CD_CC
         ,  CD_PARTNER
         ,  YN_QC
         ,  CD_USERDEF1
         ,  GRP_MFG
         ,  YN_USE
         ,  NM_SL_L1
         ,  NM_SL_L2
         ,  NM_SL_L3
         ,  NM_SL_L4
         ,  NM_SL_L5
         ,  CLS_JOB
         ,  TP_JOB
         ,  NO_TEL2
         ,  NO_FAX2
         ,  NO_POST2
         ,  DC_ADS2_H
         ,  DC_ADS2_D
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_SL}
         ,  ${CD_PLANT}
         ,  ${CD_COMPANY}
         ,  ${CD_BIZAREA}
         ,  ${NM_SL}
         ,  ${CD_WH}
         ,  ${TP_SL}
         ,  ${MNG_SL}
         ,  ${MRP_YN}
         ,  ${DC_100}
         ,  ${ID_INSERT}
         ,  ${DTS_INSERT}
         ,  ${ID_UPDATE}
         ,  ${DTS_UPDATE}
         ,  ${YN_SU_PART}
         ,  ${KIND_CON}
         ,  ${CP_CON}
         ,  ${YN_LOCATION}
         ,  ${CD_CC}
         ,  ${CD_PARTNER}
         ,  ${YN_QC}
         ,  ${CD_USERDEF1}
         ,  ${GRP_MFG}
         ,  ${YN_USE}
         ,  ${NM_SL_L1}
         ,  ${NM_SL_L2}
         ,  ${NM_SL_L3}
         ,  ${NM_SL_L4}
         ,  ${NM_SL_L5}
         ,  ${CLS_JOB}
         ,  ${TP_JOB}
         ,  ${NO_TEL2}
         ,  ${NO_FAX2}
         ,  ${NO_POST2}
         ,  ${DC_ADS2_H}
         ,  ${DC_ADS2_D}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='SA_FRAN_HLY_MMR_CONT_HIS_VIEW_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.SA_FRAN_HLY_MMR_CONT_HIS_VIEW
     WHERE  CD_COMPANY  = '1000'
       AND  (DTS_INSERT >= ${SCH_LAST_DATE} OR DTS_UPDATE >= ${SCH_LAST_DATE})
]]></query>

<query name='ERP_SA_FRAN_HLY_MMR_CONT_HIS_I'><![CDATA[
    INSERT  INTO ERP_SA_FRAN_HLY_MMR_CONT_HIS
    (
            CD_COMPANY
         ,  CD_FRANCHISE
         ,  ORDER_CONTRACT
         ,  FG_BRAND
         ,  CD_FRANCHISE_MASTER
         ,  NM_KR_FRANCHISE
         ,  NM_SHOP_OWNER
         ,  CD_PARTNER
         ,  DT_ST_CONTRACT
         ,  DT_END_CONTRACT
         ,  DT_SGN_CONTRACT
         ,  DT_RE_CONTRACT
         ,  DT_OPEN
         ,  DAY_SUM
         ,  FG_INSURAN_JOIN_YN
         ,  CD_ST_STORE
         ,  REASON
         ,  SPECIAL_CONT
         ,  CD_INFORM_RECP_YN
         ,  CD_SALES_EXPT_YN
         ,  CD_STORE_NEAR_YN
         ,  ORDER_SPECIAL_CONT
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  ID_UPDATE
         ,  DTS_UPDATE
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CD_FRANCHISE}
         ,  ${ORDER_CONTRACT}
         ,  ${FG_BRAND}
         ,  ${CD_FRANCHISE_MASTER}
         ,  ${NM_KR_FRANCHISE}
         ,  ${NM_SHOP_OWNER}
         ,  ${CD_PARTNER}
         ,  ${DT_ST_CONTRACT}
         ,  ${DT_END_CONTRACT}
         ,  ${DT_SGN_CONTRACT}
         ,  ${DT_RE_CONTRACT}
         ,  ${DT_OPEN}
         ,  ${DAY_SUM}
         ,  ${FG_INSURAN_JOIN_YN}
         ,  ${CD_ST_STORE}
         ,  ${REASON}
         ,  ${SPECIAL_CONT}
         ,  ${CD_INFORM_RECP_YN}
         ,  ${CD_SALES_EXPT_YN}
         ,  ${CD_STORE_NEAR_YN}
         ,  ${ORDER_SPECIAL_CONT}
         ,  ${ID_INSERT}
         ,  ${DTS_INSERT}
         ,  ${ID_UPDATE}
         ,  ${DTS_UPDATE}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='SA_FRAN_HLY_MMR_MNG_VIEW_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.SA_FRAN_HLY_MMR_MNG_VIEW
     WHERE  CD_COMPANY  = '1000'
       AND  (
                DTS_INSERT >= ${SCH_LAST_DATE}
                OR
                DTS_UPDATE >= ${SCH_LAST_DATE}
                OR
                PARTNERMASTER_DTS_U >= ${SCH_LAST_DATE}
                OR
                SUBMASTER_DTS_U >= ${SCH_LAST_DATE}
                OR
                CC_MASTER_DTS_U >= ${SCH_LAST_DATE}
                OR
                MA_SALEGRP_DTS_UPDATE >= ${SCH_LAST_DATE}
            )
]]></query>

<query name='ERP_SA_FRAN_HLY_MMR_MNG_I'><![CDATA[
    INSERT  INTO ERP_SA_FRAN_HLY_MMR_MNG
    (
            CD_COMPANY
         ,  CD_FRANCHISE
         ,  CD_FRANCHISE_MASTER
         ,  CD_PARTNER
         ,  NM_KR_FRANCHISE
         ,  FG_BRAND
         ,  FG_FRAN
         ,  CD_EMP_FRAN
         ,  CONTRACTOR
         ,  SELF_POS_YN
         ,  FG_VOLUME2
         ,  CD_AREA1
         ,  CD_AREA2
         ,  CD_TRUST_YN
         ,  DT_OPEN
         ,  DT_CLOSEDOUT
         ,  FG_MANAGEMENT
         ,  CD_IN_SHOP_YN
         ,  TIME_MANAGEMENT
         ,  SHOP_EMAIL
         ,  FACUKUT_PERSON
         ,  NO_POST_MP
         ,  DC_ADR1_MP
         ,  DC_ADR2_MP
         ,  EN_DC_ADR1_MP
         ,  EN_DC_ADR2_MP
         ,  FG_ORDY_BOARD
         ,  FG_POSTER_CASE
         ,  CD_PARKING_YN
         ,  FG_MENUBORD_SIZE
         ,  FG_DREAM_DOFFEE
         ,  FG_MENU_BOARD_CNT
         ,  FG_BANNER_DEFERM
         ,  FG_SHOW_CASE_TP
         ,  CD_24HOUR_YN
         ,  FG_SPECIALTY
         ,  FG_PLATE_SALE_YN
         ,  FG_COLD_MIL_SALE_YN
         ,  FG_CREDIT_GB
         ,  TOT_CREDIT
         ,  FG_DIST_STATUS
         ,  FG_CHARGE_CNT
         ,  FG_PAYMENT_CNT
         ,  FG_PAYMENT_GB
         ,  FST_ORDER_YN
         ,  FG_ITEM_TYPE
         ,  TP_PARTNER
         ,  NM_CEO
         ,  NO_COMPANY
         ,  TP_JOB
         ,  CLS_JOB
         ,  CD_CC
         ,  NM_USERDEF1
         ,  CD_SALEGRP
         ,  CD_SL_ISU
         ,  CD_BIZAREA
         ,  NO_MERCHANT
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  ID_UPDATE
         ,  DTS_UPDATE
         ,  FG_UM
         ,  CD_CC_POSHRUSE
         ,  NM_CC
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CD_FRANCHISE}
         ,  ${CD_FRANCHISE_MASTER}
         ,  ${CD_PARTNER}
         ,  ${NM_KR_FRANCHISE}
         ,  ${FG_BRAND}
         ,  ${FG_FRAN}
         ,  ${CD_EMP_FRAN}
         ,  ${CONTRACTOR}
         ,  ${SELF_POS_YN}
         ,  ${FG_VOLUME2}
         ,  ${CD_AREA1}
         ,  ${CD_AREA2}
         ,  ${CD_TRUST_YN}
         ,  ${DT_OPEN}
         ,  ${DT_CLOSEDOUT}
         ,  ${FG_MANAGEMENT}
         ,  ${CD_IN_SHOP_YN}
         ,  ${TIME_MANAGEMENT}
         ,  ${SHOP_EMAIL}
         ,  ${FACUKUT_PERSON}
         ,  ${NO_POST_MP}
         ,  ${DC_ADR1_MP}
         ,  ${DC_ADR2_MP}
         ,  ${EN_DC_ADR1_MP}
         ,  ${EN_DC_ADR2_MP}
         ,  ${FG_ORDY_BOARD}
         ,  ${FG_POSTER_CASE}
         ,  ${CD_PARKING_YN}
         ,  ${FG_MENUBORD_SIZE}
         ,  ${FG_DREAM_DOFFEE}
         ,  ${FG_MENU_BOARD_CNT}
         ,  ${FG_BANNER_DEFERM}
         ,  ${FG_SHOW_CASE_TP}
         ,  ${CD_24HOUR_YN}
         ,  ${FG_SPECIALTY}
         ,  ${FG_PLATE_SALE_YN}
         ,  ${FG_COLD_MIL_SALE_YN}
         ,  ${FG_CREDIT_GB}
         ,  ${TOT_CREDIT}
         ,  ${FG_DIST_STATUS}
         ,  ${FG_CHARGE_CNT}
         ,  ${FG_PAYMENT_CNT}
         ,  ${FG_PAYMENT_GB}
         ,  ${FST_ORDER_YN}
         ,  ${FG_ITEM_TYPE}
         ,  ${TP_PARTNER}
         ,  ${NM_CEO}
         ,  ${NO_COMPANY}
         ,  ${TP_JOB}
         ,  ${CLS_JOB}
         ,  ${CD_CC}
         ,  ${NM_USERDEF1}
         ,  ${CD_SALEGRP}
         ,  ${CD_SL_ISU}
         ,  ${CD_BIZAREA}
         ,  ${NO_MERCHANT}
         ,  ${ID_INSERT}
         ,  ${DTS_INSERT}
         ,  ${ID_UPDATE}
         ,  ${DTS_UPDATE}
         ,  ${FG_UM}
         ,  ${CD_CC_POSHRUSE}
         ,  ${NM_CC}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='SA_FRAN_HLY_MMR_MNG_HIS_VIEW_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.SA_FRAN_HLY_MMR_MNG_HIS_VIEW
     WHERE  CD_COMPANY  = '1000'
       AND  (DTS_INSERT >= ${SCH_LAST_DATE} OR DTS_UPDATE >= ${SCH_LAST_DATE})
]]></query>

<query name='ERP_SA_FRAN_HLY_MMR_MNG_HIS_I'><![CDATA[
    INSERT  INTO ERP_SA_FRAN_HLY_MMR_MNG_HIS
    (
            CD_COMPANY
         ,  CD_FRANCHISE
         ,  DT_HISTORY
         ,  FG_BRAND
         ,  CD_EMP_SC
         ,  MNG_REAL_MAN
         ,  REAL_AREA
         ,  COMPANY_SIGN
         ,  COMPANY_FACIL
         ,  SEAT_CNT
         ,  FG_SHOP_TP
         ,  FG_BATHROOM
         ,  CD_SMOKING_YN
         ,  CD_TERRACE_YN
         ,  FG_SHOP_CONCEPT
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  ID_UPDATE
         ,  DTS_UPDATE
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CD_FRANCHISE}
         ,  ${DT_HISTORY}
         ,  ${FG_BRAND}
         ,  ${CD_EMP_SC}
         ,  ${MNG_REAL_MAN}
         ,  ${REAL_AREA}
         ,  ${COMPANY_SIGN}
         ,  ${COMPANY_FACIL}
         ,  ${SEAT_CNT}
         ,  ${FG_SHOP_TP}
         ,  ${FG_BATHROOM}
         ,  ${CD_SMOKING_YN}
         ,  ${CD_TERRACE_YN}
         ,  ${FG_SHOP_CONCEPT}
         ,  ${ID_INSERT}
         ,  ${DTS_INSERT}
         ,  ${ID_UPDATE}
         ,  ${DTS_UPDATE}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='SA_Z_FRAN_ORDCON_HLY_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.SA_Z_FRAN_ORDCON_HLY
     WHERE  CD_COMPANY  = '1000'
       AND  (DTS_INSERT >= ${SCH_LAST_DATE} OR DTS_UPDATE >= ${SCH_LAST_DATE})
]]></query>

<query name='ERP_SA_Z_FRAN_ORDCON_HLY_I'><![CDATA[
    INSERT  INTO ERP_SA_Z_FRAN_ORDCON_HLY
    (
            CD_COMPANY
         ,  CON_DATE
         ,  CD_PARTNER
         ,  YN_ORDER
         ,  ALLOW_FROM
         ,  ALLOW_TO
         ,  DTS_INSERT
         ,  ID_INSERT
         ,  DTS_UPDATE
         ,  ID_UPDATE
         ,  FG_DATE_F
         ,  FG_DATE_T
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CON_DATE}
         ,  ${CD_PARTNER}
         ,  ${YN_ORDER}
         ,  ${ALLOW_FROM}
         ,  ${ALLOW_TO}
         ,  ${DTS_INSERT}
         ,  ${ID_INSERT}
         ,  ${DTS_UPDATE}
         ,  ${ID_UPDATE}
         ,  ${FG_DATE_F}
         ,  ${FG_DATE_T}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='V_FI_Z_HLY_ASSET_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.V_FI_Z_HLY_ASSET
     WHERE  CD_COMPANY  = '1000'
       AND  DT_PUR = CONVERT(VARCHAR(8), GETDATE(), 112)
]]></query>

<query name='ERP_FI_Z_HLY_ASSET_I'><![CDATA[
    INSERT  INTO ERP_FI_Z_HLY_ASSET
    (
            CD_COMPANY
         ,  CD_ASSET
         ,  NM_ASSET
         ,  DT_PUR
         ,  QT_PUR
         ,  AM_PUR
         ,  ST_ASSET
         ,  CD_CC
         ,  AM_DMFINBOOK
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CD_ASSET}
         ,  ${NM_ASSET}
         ,  ${DT_PUR}
         ,  ${QT_PUR}
         ,  ${AM_PUR}
         ,  ${ST_ASSET}
         ,  ${CD_CC}
         ,  ${AM_DMFINBOOK}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='V_FI_Z_HLY_MONEY_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.V_FI_Z_HLY_MONEY
     WHERE  CD_COMPANY  = '1000'
       AND  (DTS_INSERT >= ${SCH_LAST_DATE} OR DTS_UPDATE >= ${SCH_LAST_DATE})
]]></query>

<query name='ERP_V_FI_Z_HLY_MONEY_I'><![CDATA[
    INSERT  INTO ERP_V_FI_Z_HLY_MONEY
    (
            CD_COMPANY
         ,  DT_ACCT
         ,  CD_PARTNER
         ,  CD_PJT
         ,  AM_DR
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${DT_ACCT}
         ,  ${CD_PARTNER}
         ,  ${CD_PJT}
         ,  ${AM_DR}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='V_FI_Z_HLY_PL_CODE_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.V_FI_Z_HLY_PL_CODE
     WHERE  CD_COMPANY  = '1000'
       AND  (DTS_INSERT >= ${SCH_LAST_DATE} OR DTS_UPDATE >= ${SCH_LAST_DATE})
]]></query>

<query name='ERP_V_FI_Z_HLY_PL_CODE_I'><![CDATA[
    INSERT  INTO ERP_V_FI_Z_HLY_PL_CODE
    (
            CD_COMPANY
         ,  CD_ACCT
         ,  NM_ACCT
         ,  TP_ACLEVEL
         ,  CD_ACCT_P
         ,  CD_ACCT_SEQ
         ,  YN_BASIC
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  ID_UPDATE
         ,  DTS_UPDATE
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CD_ACCT}
         ,  ${NM_ACCT}
         ,  ${TP_ACLEVEL}
         ,  ${CD_ACCT_P}
         ,  ${CD_ACCT_SEQ}
         ,  ${YN_BASIC}
         ,  ${ID_INSERT}
         ,  ${DTS_INSERT}
         ,  ${ID_UPDATE}
         ,  ${DTS_UPDATE}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='CODE_MAP_Q'><![CDATA[
    SELECT  *
      FROM  CODE_MAP
     WHERE  COMP_CD     = '016'
       AND  MAP_DIV     = '1'
       AND  USE_YN      = 'Y'
     ORDER  BY MAP_CODE
]]></query>

<query name='V_MA_Z_HLY_CODEDTL_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.V_MA_Z_HLY_CODEDTL
     WHERE  CD_COMPANY  = '1000'
       AND  CD_FIELD    = ${SCH_CD_FIELD}
       AND  (DTS_INSERT >= ${SCH_LAST_DATE} OR DTS_UPDATE >= ${SCH_LAST_DATE})
]]></query>

<query name='ERP_V_MA_Z_HLY_CODEDTL_I'><![CDATA[
    INSERT  INTO ERP_V_MA_Z_HLY_CODEDTL
    (
            CD_FIELD
         ,  CD_SYSDEF
         ,  CD_COMPANY
         ,  FG1_SYSCODE
         ,  CD_USRDEF
         ,  NM_USRDEF
         ,  NM_SYSDEF
         ,  USE_YN
         ,  CD_FLAG1
         ,  CD_FLAG2
         ,  CD_FLAG3
         ,  NM_SYSDEF_E
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  ID_UPDATE
         ,  DTS_UPDATE
         ,  NM_SYSDEF_CH
         ,  NM_SYSDEF_JP
         ,  REMARK
         ,  NM_SYSDEF_L4
         ,  NM_SYSDEF_L5
         ,  NO_ORDER
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_FIELD}
         ,  ${CD_SYSDEF}
         ,  ${CD_COMPANY}
         ,  ${FG1_SYSCODE}
         ,  ${CD_USRDEF}
         ,  ${NM_USRDEF}
         ,  ${NM_SYSDEF}
         ,  ${USE_YN}
         ,  ${CD_FLAG1}
         ,  ${CD_FLAG2}
         ,  ${CD_FLAG3}
         ,  ${NM_SYSDEF_E}
         ,  ${ID_INSERT}
         ,  ${DTS_INSERT}
         ,  ${ID_UPDATE}
         ,  ${DTS_UPDATE}
         ,  ${NM_SYSDEF_CH}
         ,  ${NM_SYSDEF_JP}
         ,  ${REMARK}
         ,  ${NM_SYSDEF_L4}
         ,  ${NM_SYSDEF_L5}
         ,  ${NO_ORDER}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='V_MA_Z_HLY_PITEM_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.V_MA_Z_HLY_PITEM
     WHERE  CD_COMPANY  = '1000'
       AND  (DTS_INSERT >= ${SCH_LAST_DATE} OR DTS_UPDATE >= ${SCH_LAST_DATE})
]]></query>

<query name='ERP_V_MA_Z_HLY_PITEM_I'><![CDATA[
    INSERT  INTO ERP_V_MA_Z_HLY_PITEM
    (
            CD_ITEM
         ,  CD_PLANT
         ,  CD_COMPANY
         ,  NM_ITEM
         ,  EN_ITEM
         ,  CLS_ITEM
         ,  TP_PROC
         ,  TP_ITEM
         ,  UNIT_IM
         ,  UNIT_SO
         ,  UNIT_PO
         ,  UNIT_MO
         ,  GRP_ITEM
         ,  MAT_ITEM
         ,  STND_ITEM
         ,  NO_HS
         ,  UNIT_HS
         ,  WEIGHT
         ,  UNIT_WEIGHT
         ,  URL_ITEM
         ,  TP_PART
         ,  BARCODE
         ,  DT_VALID
         ,  NO_DESIGN
         ,  YN_USE
         ,  CD_PURGRP
         ,  CD_SL
         ,  CD_GISL
         ,  LT_GI
         ,  FG_ABC
         ,  QT_SSTOCK
         ,  LT_SAFE
         ,  DY_IMCLY
         ,  DT_IMMNG
         ,  QT_ROP
         ,  FG_BF
         ,  DY_VALID
         ,  NO_MODEL
         ,  FG_GIR
         ,  CLS_L
         ,  CLS_M
         ,  CLS_S
         ,  TP_MANU
         ,  YN_PHANTOM
         ,  TP_BOM
         ,  FG_LONG
         ,  QT_MIN
         ,  QT_MAX
         ,  RT_QM
         ,  PARTNER
         ,  FG_TRACKING
         ,  RT_MINUS
         ,  RT_PLUS
         ,  LT_ITEM
         ,  TP_PO
         ,  CLS_PO
         ,  QT_FOQ
         ,  FG_FOQ
         ,  DY_POQ
         ,  PATN_ROUT
         ,  FG_LOTNO
         ,  LOTSIZE
         ,  FG_SERNO
         ,  STAND_PRC
         ,  UPD
         ,  UPH
         ,  LT_QC
         ,  NO_STND
         ,  FG_PQC
         ,  FG_SQC
         ,  FG_OQC
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  ID_UPDATE
         ,  DTS_UPDATE
         ,  CD_BIZAREA
         ,  UNIT_SO_FACT
         ,  UNIT_PO_FACT
         ,  GRP_MFG
         ,  UNIT_GI
         ,  UNIT_GI_FACT
         ,  CD_ZONE
         ,  FILE_PATH_MNG
         ,  FG_TAX_PU
         ,  NO_MANAGER1
         ,  NO_MANAGER2
         ,  FG_MODEL
         ,  FG_TAX_SA
         ,  FG_IQC
         ,  STND_DETAIL_ITEM
         ,  YN_ATP
         ,  CUR_ATP_DAY
         ,  NM_MAKER
         ,  NM_USERDEF1
         ,  NM_USERDEF2
         ,  NM_USERDEF3
         ,  NM_USERDEF4
         ,  NM_USERDEF5
         ,  CD_USERDEF1
         ,  CD_USERDEF2
         ,  CD_USERDEF3
         ,  CD_USERDEF4
         ,  CD_USERDEF5
         ,  CD_USERDEF6
         ,  CD_USERDEF7
         ,  CD_USERDEF8
         ,  CD_USERDEF9
         ,  CD_USERDEF10
         ,  NUM_USERDEF1
         ,  NUM_USERDEF2
         ,  NUM_USERDEF3
         ,  NUM_USERDEF4
         ,  NUM_USERDEF5
         ,  NUM_USERDEF6
         ,  STND_ST
         ,  DT_STAND_CO
         ,  IMAGE1
         ,  IMAGE2
         ,  IMAGE3
         ,  IMAGE4
         ,  IMAGE5
         ,  IMAGE6
         ,  DC_IMAGE1
         ,  DC_IMAGE2
         ,  DC_IMAGE3
         ,  DC_IMAGE4
         ,  DC_IMAGE5
         ,  DC_IMAGE6
         ,  FG_OPQC
         ,  QT_WIDTH
         ,  QT_LENGTH
         ,  CD_CORE
         ,  CD_TP
         ,  NUM_USERDEF7
         ,  NUM_USERDEF8
         ,  NUM_USERDEF9
         ,  NUM_USERDEF10
         ,  DC_BOM_RMK
         ,  CD_USERDEF11
         ,  CD_USERDEF12
         ,  CD_USERDEF13
         ,  CD_USERDEF14
         ,  CD_USERDEF15
         ,  CD_USERDEF16
         ,  CD_USERDEF17
         ,  FG_SLQC
         ,  DC_RMK
         ,  CD_USERDEF18
         ,  CD_USERDEF19
         ,  CD_USERDEF20
         ,  FG_IQCL
         ,  BOTH_SERLOT
         ,  DT_ST
         ,  CD_CC
         ,  UM_ROYALTY
         ,  CD_ITEM_RELATION
         ,  CD_STND_ITEM_1
         ,  CD_STND_ITEM_2
         ,  CD_STND_ITEM_3
         ,  CD_STND_ITEM_4
         ,  CD_STND_ITEM_5
         ,  NUM_STND_ITEM_1
         ,  NUM_STND_ITEM_2
         ,  NUM_STND_ITEM_3
         ,  NUM_STND_ITEM_4
         ,  NUM_STND_ITEM_5
         ,  CD_USERDEF21
         ,  CD_USERDEF22
         ,  UNIT_SU
         ,  UNIT_SU_FACT
         ,  FG_PQCB
         ,  NM_ITEM_L1
         ,  NM_ITEM_L2
         ,  NM_ITEM_L3
         ,  NM_ITEM_L4
         ,  NM_ITEM_L5
         ,  CD_USERDEF23
         ,  CD_USERDEF24
         ,  UNIT_MO_FACT
         ,  URL1
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_ITEM}
         ,  ${CD_PLANT}
         ,  ${CD_COMPANY}
         ,  ${NM_ITEM}
         ,  ${EN_ITEM}
         ,  ${CLS_ITEM}
         ,  ${TP_PROC}
         ,  ${TP_ITEM}
         ,  ${UNIT_IM}
         ,  ${UNIT_SO}
         ,  ${UNIT_PO}
         ,  ${UNIT_MO}
         ,  ${GRP_ITEM}
         ,  ${MAT_ITEM}
         ,  ${STND_ITEM}
         ,  ${NO_HS}
         ,  ${UNIT_HS}
         ,  ${WEIGHT}
         ,  ${UNIT_WEIGHT}
         ,  ${URL_ITEM}
         ,  ${TP_PART}
         ,  ${BARCODE}
         ,  ${DT_VALID}
         ,  ${NO_DESIGN}
         ,  ${YN_USE}
         ,  ${CD_PURGRP}
         ,  ${CD_SL}
         ,  ${CD_GISL}
         ,  ${LT_GI}
         ,  ${FG_ABC}
         ,  ${QT_SSTOCK}
         ,  ${LT_SAFE}
         ,  ${DY_IMCLY}
         ,  ${DT_IMMNG}
         ,  ${QT_ROP}
         ,  ${FG_BF}
         ,  ${DY_VALID}
         ,  ${NO_MODEL}
         ,  ${FG_GIR}
         ,  ${CLS_L}
         ,  ${CLS_M}
         ,  ${CLS_S}
         ,  ${TP_MANU}
         ,  ${YN_PHANTOM}
         ,  ${TP_BOM}
         ,  ${FG_LONG}
         ,  ${QT_MIN}
         ,  ${QT_MAX}
         ,  ${RT_QM}
         ,  ${PARTNER}
         ,  ${FG_TRACKING}
         ,  ${RT_MINUS}
         ,  ${RT_PLUS}
         ,  ${LT_ITEM}
         ,  ${TP_PO}
         ,  ${CLS_PO}
         ,  ${QT_FOQ}
         ,  ${FG_FOQ}
         ,  ${DY_POQ}
         ,  ${PATN_ROUT}
         ,  ${FG_LOTNO}
         ,  ${LOTSIZE}
         ,  ${FG_SERNO}
         ,  ${STAND_PRC}
         ,  ${UPD}
         ,  ${UPH}
         ,  ${LT_QC}
         ,  ${NO_STND}
         ,  ${FG_PQC}
         ,  ${FG_SQC}
         ,  ${FG_OQC}
         ,  ${ID_INSERT}
         ,  ${DTS_INSERT}
         ,  ${ID_UPDATE}
         ,  ${DTS_UPDATE}
         ,  ${CD_BIZAREA}
         ,  ${UNIT_SO_FACT}
         ,  ${UNIT_PO_FACT}
         ,  ${GRP_MFG}
         ,  ${UNIT_GI}
         ,  ${UNIT_GI_FACT}
         ,  ${CD_ZONE}
         ,  ${FILE_PATH_MNG}
         ,  ${FG_TAX_PU}
         ,  ${NO_MANAGER1}
         ,  ${NO_MANAGER2}
         ,  ${FG_MODEL}
         ,  ${FG_TAX_SA}
         ,  ${FG_IQC}
         ,  ${STND_DETAIL_ITEM}
         ,  ${YN_ATP}
         ,  ${CUR_ATP_DAY}
         ,  ${NM_MAKER}
         ,  ${NM_USERDEF1}
         ,  ${NM_USERDEF2}
         ,  ${NM_USERDEF3}
         ,  ${NM_USERDEF4}
         ,  ${NM_USERDEF5}
         ,  ${CD_USERDEF1}
         ,  ${CD_USERDEF2}
         ,  ${CD_USERDEF3}
         ,  ${CD_USERDEF4}
         ,  ${CD_USERDEF5}
         ,  ${CD_USERDEF6}
         ,  ${CD_USERDEF7}
         ,  ${CD_USERDEF8}
         ,  ${CD_USERDEF9}
         ,  ${CD_USERDEF10}
         ,  ${NUM_USERDEF1}
         ,  ${NUM_USERDEF2}
         ,  ${NUM_USERDEF3}
         ,  ${NUM_USERDEF4}
         ,  ${NUM_USERDEF5}
         ,  ${NUM_USERDEF6}
         ,  ${STND_ST}
         ,  ${DT_STAND_CO}
         ,  ${IMAGE1}
         ,  ${IMAGE2}
         ,  ${IMAGE3}
         ,  ${IMAGE4}
         ,  ${IMAGE5}
         ,  ${IMAGE6}
         ,  ${DC_IMAGE1}
         ,  ${DC_IMAGE2}
         ,  ${DC_IMAGE3}
         ,  ${DC_IMAGE4}
         ,  ${DC_IMAGE5}
         ,  ${DC_IMAGE6}
         ,  ${FG_OPQC}
         ,  ${QT_WIDTH}
         ,  ${QT_LENGTH}
         ,  ${CD_CORE}
         ,  ${CD_TP}
         ,  ${NUM_USERDEF7}
         ,  ${NUM_USERDEF8}
         ,  ${NUM_USERDEF9}
         ,  ${NUM_USERDEF10}
         ,  ${DC_BOM_RMK}
         ,  ${CD_USERDEF11}
         ,  ${CD_USERDEF12}
         ,  ${CD_USERDEF13}
         ,  ${CD_USERDEF14}
         ,  ${CD_USERDEF15}
         ,  ${CD_USERDEF16}
         ,  ${CD_USERDEF17}
         ,  ${FG_SLQC}
         ,  ${DC_RMK}
         ,  ${CD_USERDEF18}
         ,  ${CD_USERDEF19}
         ,  ${CD_USERDEF20}
         ,  ${FG_IQCL}
         ,  ${BOTH_SERLOT}
         ,  ${DT_ST}
         ,  ${CD_CC}
         ,  ${UM_ROYALTY}
         ,  ${CD_ITEM_RELATION}
         ,  ${CD_STND_ITEM_1}
         ,  ${CD_STND_ITEM_2}
         ,  ${CD_STND_ITEM_3}
         ,  ${CD_STND_ITEM_4}
         ,  ${CD_STND_ITEM_5}
         ,  ${NUM_STND_ITEM_1}
         ,  ${NUM_STND_ITEM_2}
         ,  ${NUM_STND_ITEM_3}
         ,  ${NUM_STND_ITEM_4}
         ,  ${NUM_STND_ITEM_5}
         ,  ${CD_USERDEF21}
         ,  ${CD_USERDEF22}
         ,  ${UNIT_SU}
         ,  ${UNIT_SU_FACT}
         ,  ${FG_PQCB}
         ,  ${NM_ITEM_L1}
         ,  ${NM_ITEM_L2}
         ,  ${NM_ITEM_L3}
         ,  ${NM_ITEM_L4}
         ,  ${NM_ITEM_L5}
         ,  ${CD_USERDEF23}
         ,  ${CD_USERDEF24}
         ,  ${UNIT_MO_FACT}
         ,  ${URL1}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='V_SA_Z_HLY_FRAN_ITEMORDER_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.V_SA_Z_HLY_FRAN_ITEMORDER
     WHERE  CD_COMPANY  = '1000'
       AND  (
                (MA_CODEDTL_DTS_INSERT         >= ${SCH_LAST_DATE} OR MA_CODEDTL_DTS_UPDATE         >= ${SCH_LAST_DATE})
                OR
                (HLY_FRAN_ITEMORDER_DTS_INSERT >= ${SCH_LAST_DATE} OR HLY_FRAN_ITEMORDER_DTS_UPDATE >= ${SCH_LAST_DATE})
            )
]]></query>

<query name='ERP_V_SA_Z_HLY_FRAN_ITEMORDER_I'><![CDATA[
    INSERT  INTO ERP_V_SA_Z_HLY_FRAN_ITEMORDER
    (
            CD_COMPANY
         ,  CD_PLANT
         ,  CD_ITEM
         ,  FG_ITEM
         ,  MA_CODEDTL_USE_YN
         ,  MA_CODEDTL_DTS_INSERT
         ,  MA_CODEDTL_DTS_UPDATE
         ,  HLY_FRAN_ITEMORDER_YN_USE
         ,  HLY_FRAN_ITEMORDER_DTS_INSERT
         ,  HLY_FRAN_ITEMORDER_DTS_UPDATE
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CD_PLANT}
         ,  ${CD_ITEM}
         ,  ${FG_ITEM}
         ,  ${MA_CODEDTL_USE_YN}
         ,  ${MA_CODEDTL_DTS_INSERT}
         ,  ${MA_CODEDTL_DTS_UPDATE}
         ,  ${HLY_FRAN_ITEMORDER_YN_USE}
         ,  ${HLY_FRAN_ITEMORDER_DTS_INSERT}
         ,  ${HLY_FRAN_ITEMORDER_DTS_UPDATE}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='V_SA_Z_HLY_FRAN_RCP_Q'><![CDATA[
    SELECT  CD_COMPANY
         ,  CD_PARTNER
         ,  DT_AR
         ,  ARD_AM_RCP
         ,  RCP_AM_RCP
         ,  NO_RCP
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  ID_UPDATE
         ,  DTS_UPDATE
      FROM  NEOE.V_SA_Z_HLY_FRAN_RCP
     WHERE  CD_COMPANY  = '1000'
       AND  (DTS_INSERT >= ${SCH_LAST_DATE} OR DTS_UPDATE >= ${SCH_LAST_DATE})
    UNION ALL
    SELECT  CD_COMPANY
         ,  CD_PARTNER
         ,  DT_ACCT         AS DT_AR
         ,  AM_DR           AS ARD_AM_RCP
         ,  AM_DR           AS RCP_AM_RCP
         ,  CD_PARTNER      AS NO_RCP
         ,  'ERP'           AS ID_INSERT
         ,  DTS_INSERT
         ,  'ERP'           AS ID_UPDATE
         ,  DTS_UPDATE
      FROM  NEOE.V_FI_Z_HLY_CASH
     WHERE  CD_COMPANY  = '1000'
       AND  (DTS_INSERT >= ${SCH_LAST_DATE} OR DTS_UPDATE >= ${SCH_LAST_DATE})
]]></query>

<query name='ERP_V_SA_Z_HLY_FRAN_RCP_I'><![CDATA[
    INSERT  INTO ERP_V_SA_Z_HLY_FRAN_RCP
    (
            CD_COMPANY
         ,  CD_PARTNER
         ,  DT_AR
         ,  ARD_AM_RCP
         ,  RCP_AM_RCP
         ,  NO_RCP
         ,  DTS_INSERT
         ,  ID_INSERT
         ,  DTS_UPDATE
         ,  ID_UPDATE
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CD_PARTNER}
         ,  ${DT_AR}
         ,  ${ARD_AM_RCP}
         ,  ${RCP_AM_RCP}
         ,  ${NO_RCP}
         ,  ${DTS_INSERT}
         ,  ${ID_INSERT}
         ,  ${DTS_UPDATE}
         ,  ${ID_UPDATE}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='V_HR_Z_HLY_MA_DEPT_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.V_HR_Z_HLY_MA_DEPT
     WHERE  CD_COMPANY  = '1000'
       AND  (DTS_INSERT >= ${SCH_LAST_DATE} OR DTS_UPDATE >= ${SCH_LAST_DATE})
]]></query>

<query name='ERP_V_HR_Z_HLY_MA_DEPT_I'><![CDATA[
    INSERT  INTO ERP_V_HR_Z_HLY_MA_DEPT
    (
            CD_COMPANY
         ,  CD_BIZAREA
         ,  CD_DEPT
         ,  NM_DEPT
         ,  CD_CC
         ,  H_DEPT
         ,  DT_START
         ,  DT_END
         ,  TP_DEPT
         ,  LB_DEPT
         ,  DTS_INSERT
         ,  ID_INSERT
         ,  DTS_UPDATE
         ,  ID_UPDATE
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CD_BIZAREA}
         ,  ${CD_DEPT}
         ,  ${NM_DEPT}
         ,  ${CD_CC}
         ,  ${H_DEPT}
         ,  ${DT_START}
         ,  ${DT_END}
         ,  ${TP_DEPT}
         ,  ${LB_DEPT}
         ,  ${DTS_INSERT}
         ,  ${ID_INSERT}
         ,  ${DTS_UPDATE}
         ,  ${ID_UPDATE}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='V_HR_Z_HLY_MA_EMP_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.V_HR_Z_HLY_MA_EMP
     WHERE  CD_COMPANY  = '1000'
       AND  CD_EMP      = '001'
       AND  (DTS_INSERT >= ${SCH_LAST_DATE} OR DTS_UPDATE >= ${SCH_LAST_DATE})
]]></query>

<query name='ERP_V_HR_Z_HLY_MA_EMP_I'><![CDATA[
    INSERT  INTO ERP_V_HR_Z_HLY_MA_EMP
    (
            NO_EMP
         ,  NM_KOR
         ,  CD_COMPANY
         ,  CD_BIZAREA
         ,  BRAND_CD
         ,  CD_CC
         ,  CD_DEPT
         ,  CD_TEAM
         ,  CD_EMP
         ,  DT_ENTER
         ,  DT_RETIRE
         ,  CD_DUTY_RANK
         ,  CD_DUTY_RESP
         ,  NO_TEL
         ,  NO_TEL_EMER
         ,  NO_EMAIL
         ,  NO_POST_RES
         ,  DC_ADDRESS_RES1
         ,  DC_ADDRESS_RES2
         ,  CD_INCOM
         ,  YN_HANDI
         ,  NO_RES
         ,  NO_BANK1
         ,  CD_BANK1
         ,  ID_USER
         ,  DTS_INSERT
         ,  ID_INSERT
         ,  DTS_UPDATE
         ,  ID_UPDATE
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${NO_EMP}
         ,  ${NM_KOR}
         ,  ${CD_COMPANY}
         ,  ${CD_BIZAREA}
         ,  ${BRAND_CD}
         ,  ${CD_CC}
         ,  ${CD_DEPT}
         ,  ${CD_TEAM}
         ,  ${CD_EMP}
         ,  ${DT_ENTER}
         ,  ${DT_RETIRE}
         ,  ${CD_DUTY_RANK}
         ,  ${CD_DUTY_RESP}
         ,  ${NO_TEL}
         ,  ${NO_TEL_EMER}
         ,  ${NO_EMAIL}
         ,  ${NO_POST_RES}
         ,  ${DC_ADDRESS_RES1}
         ,  ${DC_ADDRESS_RES2}
         ,  ${CD_INCOM}
         ,  ${YN_HANDI}
         ,  ${NO_RES}
         ,  ${NO_BANK1}
         ,  ${CD_BANK1}
         ,  ${ID_USER}
         ,  ${DTS_INSERT}
         ,  ${ID_INSERT}
         ,  ${DTS_UPDATE}
         ,  ${ID_UPDATE}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='V_Z_MA_HLY_MA_COMPANY_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.V_Z_MA_HLY_MA_COMPANY
     WHERE  CD_COMPANY  = '1000'
       AND  (DTS_INSERT >= ${SCH_LAST_DATE} OR DTS_UPDATE >= ${SCH_LAST_DATE})
]]></query>

<query name='ERP_V_Z_MA_HLY_MA_COMPANY_I'><![CDATA[
    INSERT  INTO ERP_V_Z_MA_HLY_MA_COMPANY
    (
            CD_COMPANY
         ,  NM_COMPANY
         ,  NO_COMPANY
         ,  EN_COMPANY
         ,  NO_TEL
         ,  NO_FAX
         ,  ADS_H
         ,  ADS_D
         ,  NM_CEO
         ,  DTS_INSERT
         ,  ID_INSERT
         ,  DTS_UPDATE
         ,  ID_UPDATE
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${NM_COMPANY}
         ,  ${NO_COMPANY}
         ,  ${EN_COMPANY}
         ,  ${NO_TEL}
         ,  ${NO_FAX}
         ,  ${ADS_H}
         ,  ${ADS_D}
         ,  ${NM_CEO}
         ,  ${DTS_INSERT}
         ,  ${ID_INSERT}
         ,  ${DTS_UPDATE}
         ,  ${ID_UPDATE}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='V_SA_Z_HLY_FRAN_AFTDEPOSIT_S_Q'><![CDATA[
    SELECT  CONVERT(NVARCHAR(8), GETDATE(), 112) AS NOTICE_DT, '1'  AS NOTICE_TP
         ,  COC.CD_COMPANY
         ,  COC.CD_PLANT
         ,  COC.CD_PARTNER_GRP
         ,  COC.CD_PARTNER
         ,  COC.LN_PARTNER
         ,  COC.YYYYMM
         ,  COC.FG_CHARGE_CNT
         ,  COC.NM_CHARGE_CNT
         ,  COC.FG_ORDER_CHA
         ,  COC.NM_ORDER_CHA
         ,  COC.AM_2MMBEF
         ,  COC.AM_1MMBEF
         ,  COC.AM_BASIC
         ,  COC.AM_ITEM
         ,  COC.AM_EXITEM
         ,  COC.AM_RCP
         ,  (
                SELECT  CONVERT(INT, A.AM_BOND)
                  FROM  NEOE.V_SA_Z_HLY_FRAN_AFTDEPOSIT_S   A
                 WHERE  CD_COMPANY      = COC.CD_COMPANY
                   AND  CD_PLANT        = COC.CD_PLANT
                   AND  CD_PARTNER_GRP  = COC.CD_PARTNER_GRP
                   AND  CD_PARTNER      = COC.CD_PARTNER
                   AND  YYYYMM     = (
                                        SELECT  MAX(YYYYMM)
                                          FROM  NEOE.V_SA_Z_HLY_FRAN_AFTDEPOSIT_S
                                         WHERE  CD_COMPANY      = A.CD_COMPANY
                                           AND  CD_PLANT        = A.CD_PLANT
                                           AND  CD_PARTNER_GRP  = A.CD_PARTNER_GRP
                                           AND  CD_PARTNER      = A.CD_PARTNER
                                           AND  YYYYMM          >= SUBSTRING(CONVERT(VARCHAR, DATEADD(month, -2, GETDATE()), 112), 1, 6)
                                    )
                   AND  FG_ORDER_CHA   = (
                                            SELECT  MAX(FG_ORDER_CHA)
                                              FROM  NEOE.V_SA_Z_HLY_FRAN_AFTDEPOSIT_S
                                             WHERE  CD_COMPANY      = A.CD_COMPANY
                                               AND  CD_PLANT        = A.CD_PLANT
                                               AND  CD_PARTNER_GRP  = A.CD_PARTNER_GRP
                                               AND  CD_PARTNER      = A.CD_PARTNER
                                               AND  YYYYMM          = A.YYYYMM
                                          )
            )           AS AM_BOND
         ,  COC.AM_CLAIM
         ,  COC.DT_CLAIM
         ,  COC.DT_DEPOSIT
         ,  COC.DT_PROOF_C
         ,  COC.AM_PROOF_C
         ,  COC.DT_OT
         ,  COC.AM_OT
         ,  COC.CONTROL_OT
         ,  COC.DTS_INSERT
         ,  COC.ID_INSERT
      FROM  NEOE.V_SA_Z_HLY_FRAN_AFTDEPOSIT_S   COC
     WHERE  CD_COMPANY  = '1000'
       AND  CONVERT(NVARCHAR(8), GETDATE(), 112) >= SUBSTRING(DT_PROOF_C, 1, 8)
       AND  CONVERT(NVARCHAR(8), GETDATE(), 112) < SUBSTRING(DT_OT, 1, 8)
       AND  AM_PROOF_C > 0
    UNION ALL
    SELECT  DT_OT AS NOTICE_DT, '2'  AS NOTICE_TP
         ,  DOS.CD_COMPANY
         ,  DOS.CD_PLANT
         ,  DOS.CD_PARTNER_GRP
         ,  DOS.CD_PARTNER
         ,  DOS.LN_PARTNER
         ,  DOS.YYYYMM
         ,  DOS.FG_CHARGE_CNT
         ,  DOS.NM_CHARGE_CNT
         ,  DOS.FG_ORDER_CHA
         ,  DOS.NM_ORDER_CHA
         ,  DOS.AM_2MMBEF
         ,  DOS.AM_1MMBEF
         ,  DOS.AM_BASIC
         ,  DOS.AM_ITEM
         ,  DOS.AM_EXITEM
         ,  DOS.AM_RCP
         ,  (
                SELECT  CONVERT(INT, A.AM_BOND)
                  FROM  NEOE.V_SA_Z_HLY_FRAN_AFTDEPOSIT_S   A
                 WHERE  CD_COMPANY      = DOS.CD_COMPANY
                   AND  CD_PLANT        = DOS.CD_PLANT
                   AND  CD_PARTNER_GRP  = DOS.CD_PARTNER_GRP
                   AND  CD_PARTNER      = DOS.CD_PARTNER
                   AND  YYYYMM     = (
                                        SELECT  MAX(YYYYMM)
                                          FROM  NEOE.V_SA_Z_HLY_FRAN_AFTDEPOSIT_S
                                         WHERE  CD_COMPANY      = A.CD_COMPANY
                                           AND  CD_PLANT        = A.CD_PLANT
                                           AND  CD_PARTNER_GRP  = A.CD_PARTNER_GRP
                                           AND  CD_PARTNER      = A.CD_PARTNER
                                           AND  YYYYMM          >= SUBSTRING(CONVERT(VARCHAR, DATEADD(month, -2, GETDATE()), 112), 1, 6)
                                    )
                   AND  FG_ORDER_CHA   = (
                                            SELECT  MAX(FG_ORDER_CHA)
                                              FROM  NEOE.V_SA_Z_HLY_FRAN_AFTDEPOSIT_S
                                             WHERE  CD_COMPANY      = A.CD_COMPANY
                                               AND  CD_PLANT        = A.CD_PLANT
                                               AND  CD_PARTNER_GRP  = A.CD_PARTNER_GRP
                                               AND  CD_PARTNER      = A.CD_PARTNER
                                               AND  YYYYMM          = A.YYYYMM
                                          )
            )           AS AM_BOND
         ,  DOS.AM_CLAIM
         ,  DOS.DT_CLAIM
         ,  DOS.DT_DEPOSIT
         ,  DOS.DT_PROOF_C
         ,  DOS.AM_PROOF_C
         ,  DOS.DT_OT
         ,  DOS.AM_OT
         ,  DOS.CONTROL_OT
         ,  DOS.DTS_INSERT
         ,  DOS.ID_INSERT
      FROM  NEOE.V_SA_Z_HLY_FRAN_AFTDEPOSIT_S   DOS
     WHERE  CD_COMPANY  = '1000'
       AND  CONVERT(NVARCHAR(8), GETDATE(), 112) = SUBSTRING(DT_OT, 1, 8)
       AND  CONTROL_OT  = 'Y'
]]></query>

<query name='COC_AGREE_Q'><![CDATA[
    SELECT  AGREE_YN
      FROM  COC_CHECK_LOG   CL
         ,  STORE           S
     WHERE  CL.COMP_CD      = S.COMP_CD
       AND  CL.BRAND_CD     = S.BRAND_CD
       AND  CL.STOR_CD      = S.STOR_CD
       AND  CL.COMP_CD      = ${SCH_COMP_CD}
       AND  CL.NOTICE_TP    = ${SCH_NOTICE_TP}
       AND  CL.CHARGE_YM    = ${SCH_CHARGE_YM}
       AND  CL.CHARGE_SEQ   = ${SCH_CHARGE_SEQ}
       AND  CL.AGREE_YN     = 'Y'
       AND  S.ERP_STOR_CD   = ${SCH_ERP_STOR_CD}
]]></query>

<query name='ERP_V_SA_Z_HLY_FRAN_AFTDEPOSIT_I'><![CDATA[
    INSERT  INTO ERP_V_SA_Z_HLY_FRAN_AFTDEPOSIT
    (
            CD_COMPANY
         ,  CD_PLANT
         ,  CD_PARTNER_GRP
         ,  CD_PARTNER
         ,  LN_PARTNER
         ,  YYYYMM
         ,  FG_CHARGE_CNT
         ,  NM_CHAGE_CNT
         ,  FG_ORDER_CHA
         ,  NM_ORDER_CHA
         ,  AM_2MMBEF
         ,  AM_1MMBEF
         ,  AM_BASIC
         ,  AM_ITEM
         ,  AM_EXITEM
         ,  AM_RCP
         ,  AM_BOND
         ,  AM_CLAIM
         ,  DT_CLAIM
         ,  DT_DEPOSIT
         ,  DT_PROOF_C
         ,  AM_PROOF_C
         ,  DT_OT
         ,  AM_OT
         ,  CONTROL_OT
         ,  NOTICE_DT
         ,  NOTICE_TP
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CD_PLANT}
         ,  ${CD_PARTNER_GRP}
         ,  ${CD_PARTNER}
         ,  ${LN_PARTNER}
         ,  ${YYYYMM}
         ,  ${FG_CHARGE_CNT}
         ,  ${NM_CHAGE_CNT}
         ,  ${FG_ORDER_CHA}
         ,  ${NM_ORDER_CHA}
         ,  ${AM_2MMBEF}
         ,  ${AM_1MMBEF}
         ,  ${AM_BASIC}
         ,  ${AM_ITEM}
         ,  ${AM_EXITEM}
         ,  ${AM_RCP}
         ,  ${AM_BOND}
         ,  ${AM_CLAIM}
         ,  ${DT_CLAIM}
         ,  ${DT_DEPOSIT}
         ,  ${DT_PROOF_C}
         ,  ${AM_PROOF_C}
         ,  ${DT_OT}
         ,  ${AM_OT}
         ,  ${CONTROL_OT}
         ,  ${NOTICE_DT}
         ,  ${NOTICE_TP}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='ORDER_STORE_Q'><![CDATA[
    SELECT  OD.BRAND_CD
         ,  OD.STOR_CD
         ,  OD.DLV_DT
      FROM  ORDER_DTV   OD
         ,  ITEM        I
     WHERE  OD.COMP_CD      = I.COMP_CD
       AND  OD.ITEM_CD      = I.ITEM_CD
       AND  OD.COMP_CD      = ${SCH_COMP_CD}
       AND  ORD_FG          = ${SCH_ORD_FG}
       AND  OD.MSF_IF_YN    = 'N'
       AND  OD.CFM_FG       = '1'
       AND  (
                (
                    I.LEAD_TIME = 1 AND OD.DLV_DT = (
                                                    SELECT  TO_CHAR(SYSDATE + (NVL(A.LEAD_TIME, 1) + DLV_LEAD_TIME), 'YYYYMMDD')
                                                      FROM  ITEM    A
                                                         ,  (
                                                                SELECT  COUNT(1)    AS DLV_LEAD_TIME
                                                                  FROM  (
                                                                            SELECT  *
                                                                              FROM  (
                                                                                        SELECT  TRUNC(SYSDATE)      AS FR_DT
                                                                                             ,  TRUNC(SYSDATE + 2)  AS TO_DT 
                                                                                          FROM  DUAL
                                                                                    )
                                                                             WHERE  TO_CHAR(FR_DT + 1, 'D') = 1
                                                                        )
                                                            )
                                                     WHERE  A.COMP_CD   = I.COMP_CD
                                                       AND  A.ITEM_CD   = I.ITEM_CD
                                                       AND  ROWNUM      = 1
                                                 )
                )
                OR
                (
                    I.LEAD_TIME = 2 AND OD.DLV_DT = (
                                                    SELECT  TO_CHAR(SYSDATE + (NVL(A.LEAD_TIME, 1) + DLV_LEAD_TIME), 'YYYYMMDD')
                                                      FROM  ITEM    A
                                                         ,  (
                                                                SELECT  COUNT(1)    AS DLV_LEAD_TIME
                                                                  FROM  (
                                                                            SELECT  *
                                                                              FROM  (
                                                                                        SELECT  TRUNC(SYSDATE)      AS FR_DT
                                                                                             ,  TRUNC(SYSDATE + 3)  AS TO_DT 
                                                                                          FROM  DUAL
                                                                                    )
                                                                             WHERE  TO_CHAR(FR_DT + 1, 'D') = 1
                                                                        )
                                                            )
                                                     WHERE  A.COMP_CD   = I.COMP_CD
                                                       AND  A.ITEM_CD   = I.ITEM_CD
                                                       AND  ROWNUM      = 1
                                                 )
                )
                OR
                (
                    I.LEAD_TIME = 2 AND OD.DLV_DT = (
                                                    SELECT  TO_CHAR(SYSDATE + (NVL(A.LEAD_TIME, 1) + DLV_LEAD_TIME), 'YYYYMMDD')
                                                      FROM  ITEM    A
                                                         ,  (
                                                                SELECT  COUNT(1)    AS DLV_LEAD_TIME
                                                                  FROM  (
                                                                            SELECT  *
                                                                              FROM  (
                                                                                        SELECT  TRUNC(SYSDATE)      AS FR_DT
                                                                                             ,  TRUNC(SYSDATE + 3)  AS TO_DT 
                                                                                          FROM  DUAL
                                                                                    )
                                                                             WHERE  TO_CHAR(FR_DT + 2, 'D') = 1
                                                                        )
                                                            )
                                                     WHERE  A.COMP_CD   = I.COMP_CD
                                                       AND  A.ITEM_CD   = I.ITEM_CD
                                                       AND  ROWNUM      = 1
                                                 )
                )
                OR
                (
                    I.LEAD_TIME = 3 AND OD.DLV_DT = (
                                                    SELECT  TO_CHAR(SYSDATE + (NVL(A.LEAD_TIME, 1) + DLV_LEAD_TIME), 'YYYYMMDD')
                                                      FROM  ITEM    A
                                                         ,  (
                                                                SELECT  COUNT(1)    AS DLV_LEAD_TIME
                                                                  FROM  (
                                                                            SELECT  *
                                                                              FROM  (
                                                                                        SELECT  TRUNC(SYSDATE)      AS FR_DT
                                                                                             ,  TRUNC(SYSDATE + 4)  AS TO_DT 
                                                                                          FROM  DUAL
                                                                                    )
                                                                             WHERE  TO_CHAR(FR_DT + 1, 'D') = 1
                                                                        )
                                                            )
                                                     WHERE  A.COMP_CD   = I.COMP_CD
                                                       AND  A.ITEM_CD   = I.ITEM_CD
                                                       AND  ROWNUM      = 1
                                                 )
                )
                OR
                (
                    I.LEAD_TIME = 3 AND OD.DLV_DT = (
                                                    SELECT  TO_CHAR(SYSDATE + (NVL(A.LEAD_TIME, 1) + DLV_LEAD_TIME), 'YYYYMMDD')
                                                      FROM  ITEM    A
                                                         ,  (
                                                                SELECT  COUNT(1)    AS DLV_LEAD_TIME
                                                                  FROM  (
                                                                            SELECT  *
                                                                              FROM  (
                                                                                        SELECT  TRUNC(SYSDATE)      AS FR_DT
                                                                                             ,  TRUNC(SYSDATE + 4)  AS TO_DT 
                                                                                          FROM  DUAL
                                                                                    )
                                                                             WHERE  TO_CHAR(FR_DT + 2, 'D') = 1
                                                                        )
                                                            )
                                                     WHERE  A.COMP_CD   = I.COMP_CD
                                                       AND  A.ITEM_CD   = I.ITEM_CD
                                                       AND  ROWNUM      = 1
                                                 )
                )
                OR
                (
                    I.LEAD_TIME = 3 AND OD.DLV_DT = (
                                                    SELECT  TO_CHAR(SYSDATE + (NVL(A.LEAD_TIME, 1) + DLV_LEAD_TIME), 'YYYYMMDD')
                                                      FROM  ITEM    A
                                                         ,  (
                                                                SELECT  COUNT(1)    AS DLV_LEAD_TIME
                                                                  FROM  (
                                                                            SELECT  *
                                                                              FROM  (
                                                                                        SELECT  TRUNC(SYSDATE)      AS FR_DT
                                                                                             ,  TRUNC(SYSDATE + 4)  AS TO_DT 
                                                                                          FROM  DUAL
                                                                                    )
                                                                             WHERE  TO_CHAR(FR_DT + 3, 'D') = 1
                                                                        )
                                                            )
                                                     WHERE  A.COMP_CD   = I.COMP_CD
                                                       AND  A.ITEM_CD   = I.ITEM_CD
                                                       AND  ROWNUM      = 1
                                                 )
                )
            )
     GROUP  BY OD.BRAND_CD
         ,  OD.STOR_CD
         ,  OD.DLV_DT
]]></query>

<query name='POS_NO_Q'><![CDATA[
    SELECT  'POS' + SUBSTRING(CONVERT(VARCHAR(10), GETDATE(), 112), 1, 6) + REPLICATE('0', 7 - LEN(CONVERT(VARCHAR(7), ISNULL(MAX(CONVERT(INT, SUBSTRING(NO_POS, 10, LEN(NO_POS)))), 0) + 1))) + CONVERT(VARCHAR(7), ISNULL(MAX(CONVERT(INT, SUBSTRING(NO_POS, 10, LEN(NO_POS)))), 0) + 1)  AS NO_POS
      FROM  NEOE.SA_FRAN_POS
     WHERE  CD_COMPANY  = '1000'
       AND  CD_PLANT    = '1000'
       AND  NO_POS      LIKE 'POS' + SUBSTRING(CONVERT(VARCHAR(10), GETDATE(), 112), 1, 6) + '%'
]]></query>

<query name='ORDER_DTV_Q'><![CDATA[
    SELECT  OD.COMP_CD
         ,  '1000'          AS CD_COMPANY
         ,  '1000'          AS CD_PLANT
         ,  OD.ERP_ORD_NO   AS NO_POS
         ,  OD.ERP_ORD_SEQ  AS NO_POS_LINE
         ,  OD.ORD_DT       AS DT_SO
         ,  S.ERP_STOR_CD   AS CD_PARTNER
         ,  '000'           AS CD_EXCH
         ,  '1'             AS RT_EXCH
         ,  S.ERP_SALE_GRP  AS CD_SALEGRP
         ,  S.SV_USER_ID    AS NO_EMP
         ,  CASE WHEN OD.ORD_FG = '1' AND OD.ORD_DIV = '0' THEN '1200'
                 WHEN OD.ORD_FG = '1' AND OD.ORD_DIV = '1' THEN '1210'
                 WHEN OD.ORD_FG = '2'                      THEN '2000'
                 ELSE ''
            END             AS TP_SO
         ,  OD.ITEM_CD      AS CD_ITEM
         ,  NVL(OD.VENDOR_CD, S.ERP_SL_CD)  AS CD_SL
         ,  OD.ORD_QTY      AS QT_SO_UNIT
         ,  OD.ORD_QTY * OD.ORD_UNIT_QTY    AS QT_SO
         ,  OD.ORD_COST     AS UM_SO_UNIT
         ,  ROUND(OD.ORD_COST / OD.ORD_UNIT_QTY, 2) AS UM_SO
         ,  OD.ORD_AMT      AS AM_WONAMT
         ,  0               AS AM_DISCOUNT
         ,  OD.ORD_VAT      AS AM_VAT
         ,  OD.ORD_AMT + OD.ORD_VAT AS AM_TOT
         ,  I.ERP_TAX_FG    AS TP_VAT
         ,  '200'           AS FG_DATA
         ,  CASE WHEN V.STOR_TP = '30' THEN V.ERP_STOR_CD
                 ELSE S.ERP_STOR_CD
            END             AS GI_PARTNER
         ,  OD.DLV_DT       AS DT_DUEDATE
         ,  OD.ORD_UNIT     AS UNIT_SO_UNIT
         ,  NVL(OD.STOCK_UNIT, I.STOCK_UNIT)        AS UNIT_SO
         ,  CASE WHEN OD.ORD_FG = '1' THEN OD.REMARKS ELSE SC.CLAIM_NO   END    AS DC_RMK
         ,  CASE WHEN OD.ORD_FG = '1' THEN ''         ELSE SC.M_CLASS_NM END    AS DC_RMK2
         ,  '200'           AS FG_SOSTATS
         ,  TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')    AS DTS_INSERT
         ,  NVL(IU.ERP_USER_ID, 'POS')              AS ID_INSERT
         ,  NULL            AS DTS_UPDATE
         ,  NULL            AS ID_UPDATE
         ,  OD.DLV_DT       AS DT_DUEREQ
         ,  OD.DLV_DT       AS DT_DUE
         ,  'Y'             AS YN_UM
         ,  0               AS UM_IN
         ,  'N'             AS YN_CGI
         ,  'N'             AS YN_DOWNLOAD
         ,  OD.ORD_QTY * OD.ORD_UNIT_QTY                AS QT_IM
         ,  NVL(OD.STOCK_UNIT, I.STOCK_UNIT)            AS UNIT_IM
         ,  OD.ORG_ERP_ORD_NO                           AS NO_ORI_POS
         ,  OD.ORG_ERP_ORD_SEQ                          AS NO_ORI_POS_LINE
         ,  ROUND(OD.ORD_COST / OD.ORD_UNIT_QTY, 2)     AS UM_IM
         ,  TO_CHAR(OD.INST_DT, 'YYYYMMDDHH24MISS')     AS DTS_POSIN 
      FROM  ORDER_DTV   OD
         ,  STORE       S
         ,  STORE       V
         ,  ITEM        I
         ,  (
                SELECT  RD.COMP_CD
                     ,  RD.ORD_NO
                     ,  RD.ORD_SEQ
                     ,  C.CLAIM_NO
                     ,  M.M_CLASS_NM
                  FROM  ORDER_DTV           RD
                     ,  STORE_CLAIM_RTN     CR
                     ,  STORE_CLAIM         C
                     ,  CLAIM_M_CLASS       M
                 WHERE  RD.COMP_CD      = CR.COMP_CD
                   AND  RD.ORD_NO       = CR.ORD_NO
                   AND  RD.ORD_SEQ      = CR.ORD_SEQ
                   AND  CR.COMP_CD      = C.COMP_CD
                   AND  CR.CLAIM_DT     = C.CLAIM_DT
                   AND  CR.BRAND_CD     = C.BRAND_CD
                   AND  CR.STOR_CD      = C.STOR_CD
                   AND  CR.CLAIM_SEQ    = C.CLAIM_SEQ
                   AND  C.COMP_CD       = M.COMP_CD
                   AND  C.L_CLASS_CD    = M.L_CLASS_CD
                   AND  C.M_CLASS_CD    = M.M_CLASS_CD
                   AND  RD.COMP_CD      = ${SCH_COMP_CD}
                   AND  RD.ERP_ORD_NO   = ${SCH_ERP_ORD_NO}
                   AND  RD.MSF_IF_YN    = 'R'
                   AND  RD.CFM_FG       = '1'
            )           SC
         ,  (
                SELECT  COMP_CD
                     ,  USER_ID
                     ,  MAX(ERP_USER_ID)    AS ERP_USER_ID
                  FROM  (  
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  ERP_USER_ID
                              FROM  HQ_USER
                             WHERE  COMP_CD = ${SCH_COMP_CD}
                               AND  USE_YN  = 'Y'
                            UNION ALL
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  ERP_USER_ID
                              FROM  STORE_USER
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  USE_YN      = 'Y'
                        )
                 GROUP  BY COMP_CD, USER_ID
            )   IU
     WHERE  OD.COMP_CD      = S.COMP_CD
       AND  OD.BRAND_CD     = S.BRAND_CD
       AND  OD.STOR_CD      = S.STOR_CD
       AND  OD.COMP_CD      = V.COMP_CD
       AND  OD.VENDOR_CD    = V.STOR_CD
       AND  OD.COMP_CD      = I.COMP_CD
       AND  OD.ITEM_CD      = I.ITEM_CD
       AND  OD.COMP_CD      = SC.COMP_CD(+)
       AND  OD.ORD_NO       = SC.ORD_NO(+)
       AND  OD.ORD_SEQ      = SC.ORD_SEQ(+)
       AND  OD.COMP_CD      = IU.COMP_CD(+)
       AND  OD.INST_USER    = IU.USER_ID(+)
       AND  OD.COMP_CD      = ${SCH_COMP_CD}
       AND  OD.ERP_ORD_NO   = ${SCH_ERP_ORD_NO}
       AND  OD.MSF_IF_YN    = 'R'
       AND  OD.CFM_FG       = '1'
       AND  S.STOR_TP       IN ('10', '20')
       AND  V.BRAND_CD      = '0000'
       AND  V.STOR_TP       IN ('30', '31')
       AND  ROWNUM          <= 1000
]]></query>

<query name='SA_FRAN_POS_I'><![CDATA[
    MERGE   NEOE.SA_FRAN_POS     AS SFP
    USING   (
                SELECT  ${CD_COMPANY}       AS CD_COMPANY
                     ,  ${CD_PLANT}         AS CD_PLANT
                     ,  ${NO_POS}           AS NO_POS
                     ,  CONVERT(NUMERIC(5, 0), CASE WHEN ISNULL(${NO_POS_LINE}, '0') = '' THEN '0' ELSE ISNULL(${NO_POS_LINE}, '0') END)    AS NO_POS_LINE
                     ,  ${DT_SO}            AS DT_SO
                     ,  ${CD_PARTNER}       AS CD_PARTNER
                     ,  ${CD_EXCH}          AS CD_EXCH
                     ,  CONVERT(NUMERIC(5, 0), CASE WHEN ISNULL(${RT_EXCH}, '1') = '' THEN '1' ELSE ISNULL(${RT_EXCH}, '1') END)            AS RT_EXCH
                     ,  ${CD_SALEGRP}       AS CD_SALEGRP
                     ,  ${NO_EMP}           AS NO_EMP
                     ,  ${TP_SO}            AS TP_SO
                     ,  ${CD_ITEM}          AS CD_ITEM
                     ,  ${CD_SL}            AS CD_SL
                     ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${QT_SO_UNIT}, '0') = '' THEN '0' ELSE ISNULL(${QT_SO_UNIT}, '0') END)     AS QT_SO_UNIT
                     ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${QT_SO}, '0') = '' THEN '0' ELSE ISNULL(${QT_SO}, '0') END)               AS QT_SO
                     ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${UM_SO_UNIT}, '0') = '' THEN '0' ELSE ISNULL(${UM_SO_UNIT}, '0') END)     AS UM_SO_UNIT
                     ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${UM_SO}, '0') = '' THEN '0' ELSE ISNULL(${UM_SO}, '0') END)               AS UM_SO
                     ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${AM_WONAMT}, '0') = '' THEN '0' ELSE ISNULL(${AM_WONAMT}, '0') END)       AS AM_WONAMT
                     ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${AM_DISCOUNT}, '0') = '' THEN '0' ELSE ISNULL(${AM_DISCOUNT}, '0') END)   AS AM_DISCOUNT
                     ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${AM_VAT}, '0') = '' THEN '0' ELSE ISNULL(${AM_VAT}, '0') END)             AS AM_VAT
                     ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${AM_TOT}, '0') = '' THEN '0' ELSE ISNULL(${AM_TOT}, '0') END)             AS AM_TOT
                     ,  ${TP_VAT}           AS TP_VAT
                     ,  ${FG_DATA}          AS FG_DATA
                     ,  ${GI_PARTNER}       AS GI_PARTNER
                     ,  ${DT_DUEDATE}       AS DT_DUEDATE
                     ,  ${UNIT_SO_UNIT}     AS UNIT_SO_UNIT
                     ,  ${UNIT_SO}          AS UNIT_SO
                     ,  ${DC_RMK}           AS DC_RMK
                     ,  ${DC_RMK2}          AS DC_RMK2
                     ,  ${FG_SOSTATS}       AS FG_SOSTATS
                     ,  ${DTS_INSERT}       AS DTS_INSERT
                     ,  ${ID_INSERT}        AS ID_INSERT
                     ,  ${DTS_UPDATE}       AS DTS_UPDATE
                     ,  ${ID_UPDATE}        AS ID_UPDATE
                     ,  ${DT_DUEREQ}        AS DT_DUEREQ
                     ,  ${DT_DUE}           AS DT_DUE
                     ,  ${YN_UM}            AS YN_UM
                     ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${UM_IN}, '0') = '' THEN '0' ELSE ISNULL(${UM_IN}, '0') END)               AS UM_IN
                     ,  ${YN_CGI}           AS YN_CGI
                     ,  ${YN_DOWNLOAD}      AS YN_DOWNLOAD
                     ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${QT_IM}, '0') = '' THEN '0' ELSE ISNULL(${QT_IM}, '0') END)               AS QT_IM
                     ,  ${UNIT_IM}          AS UNIT_IM
                     ,  ${NO_ORI_POS}       AS NO_ORI_POS
                     ,  CONVERT(NUMERIC(5, 0), CASE WHEN ISNULL(${NO_ORI_POS_LINE}, '0') = '' THEN '0' ELSE ISNULL(${NO_ORI_POS_LINE}, '0') END)   AS NO_ORI_POS_LINE
                     ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${UM_IM}, '0') = '' THEN '0' ELSE ISNULL(${UM_IM}, '0') END)               AS UM_IM
                     ,  ${DTS_POSIN}        AS DTS_POSIN
            )   OD
        ON  SFP.CD_COMPANY      = OD.CD_COMPANY
       AND  SFP.CD_PLANT        = OD.CD_PLANT
       AND  SFP.NO_POS          = OD.NO_POS
       AND  SFP.NO_POS_LINE     = OD.NO_POS_LINE
    WHEN MATCHED AND SFP.FG_SOSTATS IN ('200', '300') THEN
        UPDATE
           SET  DT_SO           = OD.DT_SO
             ,  CD_PARTNER      = OD.CD_PARTNER
             ,  CD_EXCH         = OD.CD_EXCH
             ,  RT_EXCH         = OD.RT_EXCH
             ,  CD_SALEGRP      = OD.CD_SALEGRP
             ,  NO_EMP          = OD.NO_EMP
             ,  TP_SO           = OD.TP_SO
             ,  CD_ITEM         = OD.CD_ITEM
             ,  CD_SL           = OD.CD_SL
             ,  QT_SO_UNIT      = OD.QT_SO_UNIT
             ,  QT_SO           = OD.QT_SO
             ,  UM_SO_UNIT      = OD.UM_SO_UNIT
             ,  UM_SO           = OD.UM_SO
             ,  AM_WONAMT       = OD.AM_WONAMT
             ,  AM_DISCOUNT     = OD.AM_DISCOUNT
             ,  AM_VAT          = OD.AM_VAT
             ,  AM_TOT          = OD.AM_TOT
             ,  TP_VAT          = OD.TP_VAT
             ,  FG_DATA         = OD.FG_DATA
             ,  GI_PARTNER      = OD.GI_PARTNER
             ,  DT_DUEDATE      = OD.DT_DUEDATE
             ,  UNIT_SO_UNIT    = OD.UNIT_SO_UNIT
             ,  UNIT_SO         = OD.UNIT_SO
             ,  DC_RMK          = OD.DC_RMK
             ,  DC_RMK2         = OD.DC_RMK2
             ,  FG_SOSTATS      = OD.FG_SOSTATS
             ,  DTS_UPDATE      = OD.DTS_UPDATE
             ,  ID_UPDATE       = OD.ID_UPDATE
             ,  DT_DUEREQ       = OD.DT_DUEREQ
             ,  DT_DUE          = OD.DT_DUE
             ,  YN_UM           = OD.YN_UM
             ,  UM_IN           = OD.UM_IN
             ,  YN_CGI          = OD.YN_CGI
             ,  YN_DOWNLOAD     = OD.YN_DOWNLOAD
             ,  QT_IM           = OD.QT_IM
             ,  UNIT_IM         = OD.UNIT_IM
             ,  NO_ORI_POS      = OD.NO_ORI_POS
             ,  NO_ORI_POS_LINE = OD.NO_ORI_POS_LINE
             ,  UM_IM           = OD.UM_IM
    WHEN NOT MATCHED THEN
        INSERT
        (
                CD_COMPANY
             ,  CD_PLANT
             ,  NO_POS
             ,  NO_POS_LINE
             ,  DT_SO
             ,  CD_PARTNER
             ,  CD_EXCH
             ,  RT_EXCH
             ,  CD_SALEGRP
             ,  NO_EMP
             ,  TP_SO
             ,  CD_ITEM
             ,  CD_SL
             ,  QT_SO_UNIT
             ,  QT_SO
             ,  UM_SO_UNIT
             ,  UM_SO
             ,  AM_WONAMT
             ,  AM_DISCOUNT
             ,  AM_VAT
             ,  AM_TOT
             ,  TP_VAT
             ,  FG_DATA
             ,  GI_PARTNER
             ,  DT_DUEDATE
             ,  UNIT_SO_UNIT
             ,  UNIT_SO
             ,  DC_RMK
             ,  DC_RMK2
             ,  FG_SOSTATS
             ,  DTS_INSERT
             ,  ID_INSERT
             ,  DT_DUEREQ
             ,  DT_DUE
             ,  YN_UM
             ,  UM_IN
             ,  YN_CGI
             ,  YN_DOWNLOAD
             ,  QT_IM
             ,  UNIT_IM
             ,  NO_ORI_POS
             ,  NO_ORI_POS_LINE
             ,  UM_IM
             ,  DTS_POSIN
        ) VALUES (
                OD.CD_COMPANY
             ,  OD.CD_PLANT
             ,  OD.NO_POS
             ,  OD.NO_POS_LINE
             ,  OD.DT_SO
             ,  OD.CD_PARTNER
             ,  OD.CD_EXCH
             ,  OD.RT_EXCH
             ,  OD.CD_SALEGRP
             ,  OD.NO_EMP
             ,  OD.TP_SO
             ,  OD.CD_ITEM
             ,  OD.CD_SL
             ,  OD.QT_SO_UNIT
             ,  OD.QT_SO
             ,  OD.UM_SO_UNIT
             ,  OD.UM_SO
             ,  OD.AM_WONAMT
             ,  OD.AM_DISCOUNT
             ,  OD.AM_VAT
             ,  OD.AM_TOT
             ,  OD.TP_VAT
             ,  OD.FG_DATA
             ,  OD.GI_PARTNER
             ,  OD.DT_DUEDATE
             ,  OD.UNIT_SO_UNIT
             ,  OD.UNIT_SO
             ,  OD.DC_RMK
             ,  OD.DC_RMK2
             ,  OD.FG_SOSTATS
             ,  OD.DTS_INSERT
             ,  OD.ID_INSERT
             ,  OD.DT_DUEREQ
             ,  OD.DT_DUE
             ,  OD.YN_UM
             ,  OD.UM_IN
             ,  OD.YN_CGI
             ,  OD.YN_DOWNLOAD
             ,  OD.QT_IM
             ,  OD.UNIT_IM
             ,  OD.NO_ORI_POS
             ,  OD.NO_ORI_POS_LINE
             ,  OD.UM_IM
             ,  OD.DTS_POSIN
        );
]]></query>

<query name='ORDER_DTV_U'><![CDATA[
    UPDATE  ORDER_DTV
       SET  MSF_IF_YN   = ${UPD_MSF_IF_YN}
         ,  MSF_IF_DT   = CASE WHEN ${UPD_MSF_IF_YN} = 'Y' THEN SYSDATE ELSE NULL END
     WHERE  COMP_CD     = ${SCH_COMP_CD}
       AND  ERP_ORD_NO  = ${ERP_ORD_NO}
       AND  CFM_FG      = '1'
       AND  MSF_IF_YN   = ${SCH_MSF_IF_YN}
       AND  (${ERP_ORD_SEQ} IS NULL OR ERP_ORD_SEQ = ${ERP_ORD_SEQ})
]]></query>

<query name='CLAIM_STORE_Q'><![CDATA[
    SELECT  OD.BRAND_CD
         ,  OD.STOR_CD
         ,  OD.DLV_DT
      FROM  STORE_CLAIM         SC
         ,  STORE_CLAIM_RTN     SCR
         ,  ORDER_DTV           OD
     WHERE  SC.COMP_CD      = SCR.COMP_CD
       AND  SC.CLAIM_DT     = SCR.CLAIM_DT
       AND  SC.BRAND_CD     = SCR.BRAND_CD
       AND  SC.STOR_CD      = SCR.STOR_CD
       AND  SC.CLAIM_SEQ    = SCR.CLAIM_SEQ
       AND  SCR.COMP_CD     = OD.COMP_CD
       AND  SCR.ORD_NO      = OD.ORD_NO
       AND  SCR.ORD_SEQ     = OD.ORD_SEQ
       AND  SC.COMP_CD      = ${SCH_COMP_CD}
       AND  SC.PROC_STAT    = '1'
       AND  SC.USE_YN       = 'Y'
       AND  SCR.USE_YN      = 'Y'
       AND  OD.ORD_FG       = ${SCH_ORD_FG}
       AND  OD.CFM_FG       = '1'
       AND  OD.MSF_IF_YN    = 'N'
       AND  TO_CHAR(SYSDATE, 'D') <> '1'
       AND  OD.ORD_DT       < TO_CHAR(SYSDATE, 'YYYYMMDD')
     GROUP  BY OD.BRAND_CD
         ,  OD.STOR_CD
         ,  OD.DLV_DT
]]></query>

<query name='STORE_CLAIM_U'><![CDATA[
    UPDATE  STORE_CLAIM     C
       SET  PROC_STAT       = '2'
         ,  ERP_IF_YN       = 'Y'
         ,  ERP_IF_DT       = TO_CHAR(SYSDATE, 'YYYYMMDD')
     WHERE  COMP_CD         = ${COMP_CD}
       AND  BRAND_CD        = ${BRAND_CD}
       AND  STOR_CD         = ${STOR_CD}
       AND  (CLAIM_DT, CLAIM_SEQ) IN (
                                        SELECT  CLAIM_DT
                                             ,  CLAIM_SEQ
                                          FROM  STORE_CLAIM_RTN     R
                                         WHERE  COMP_CD     = C.COMP_CD
                                           AND  BRAND_CD    = C.BRAND_CD
                                           AND  STOR_CD     = C.STOR_CD
                                           AND  (ORD_NO, ORD_SEQ) IN (
                                                                        SELECT  ORD_NO
                                                                             ,  ORD_SEQ
                                                                          FROM  ORDER_DTV
                                                                         WHERE  COMP_CD     = ${COMP_CD}
                                                                           AND  MSF_IF_YN   = 'Y'
                                                                           AND  TO_CHAR(MSF_IF_DT, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD')
                                                                     )
                                     )
]]></query>

<query name='CONFIRM_STORE_Q'><![CDATA[
    SELECT  CD_PARTNER
      FROM  NEOE.SA_FRAN_POS
     WHERE  CD_COMPANY  = '1000'
       AND  DTS_UPDATE  >= ${SCH_LAST_DATE}
       AND  TP_SO       IN ('1100', '1200', '1201', '1210', '2000', '3000', '3200', '9100', '9200')
       AND  FG_SOSTATS  IN ('500', '600')
     GROUP  BY CD_PARTNER
     ORDER  BY MAX(DTS_UPDATE)
]]></query>

<query name='SA_FRAN_POS_Q'><![CDATA[
    EXEC NEOE.UP_Z_HLY_SA_FRAN_POS_S ${SCH_CD_PARTNER}, ${SCH_LAST_DATE}
]]></query>

<query name='ERP_SA_FRAN_POS_I'><![CDATA[
    INSERT  INTO ERP_SA_FRAN_POS
    (
            CD_COMPANY
         ,  CD_PLANT
         ,  NO_POS
         ,  NO_POS_LINE
         ,  DT_SO
         ,  CD_PARTNER
         ,  CD_EXCH
         ,  RT_EXCH
         ,  CD_SALEGRP
         ,  NO_EMP
         ,  TP_SO
         ,  CD_ITEM
         ,  CD_SL
         ,  QT_SO_UNIT
         ,  QT_SO
         ,  UM_SO_UNIT
         ,  UM_SO
         ,  AM_WONAMT
         ,  AM_DISCOUNT
         ,  AM_VAT
         ,  AM_TOT
         ,  TP_VAT
         ,  FG_DATA
         ,  NO_SO
         ,  SEQ_SO
         ,  GI_PARTNER
         ,  DT_DUEDATE
         ,  UNIT_SO_UNIT
         ,  UNIT_SO
         ,  DC_RMK
         ,  DC_RMK2
         ,  FG_SOSTATS
         ,  DTS_INSERT
         ,  ID_INSERT
         ,  DTS_UPDATE
         ,  ID_UPDATE
         ,  CF_QT
         ,  CF_AM
         ,  CF_VAT
         ,  CF_AM_TOT
         ,  DT_CONFIRM
         ,  ID_CONFIRM
         ,  FG_ERP
         ,  DTS_POSIN
         ,  DT_DUEREQ
         ,  DT_DUE
         ,  YN_PACKING
         ,  PACK_CAR
         ,  QT_IO
         ,  DT_IO
         ,  YN_UM
         ,  CD_ROUTING
         ,  QT_PO
         ,  UM_IN
         ,  YN_CGI
         ,  CD_QTIOTP
         ,  FG_SUBSTITUTE
         ,  NO_EMP_QTIO
         ,  NO_IO
         ,  YN_DOWNLOAD
         ,  QT_IM
         ,  UNIT_IM
         ,  CF_QT_IM
         ,  QT_RE
         ,  QT_RE_IM
         ,  NO_ORI_POS
         ,  NO_ORI_POS_LINE
         ,  NUM_USERDEF1
         ,  CD_USERDEF1
         ,  UM_IM
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CD_PLANT}
         ,  ${NO_POS}
         ,  ${NO_POS_LINE}
         ,  ${DT_SO}
         ,  ${CD_PARTNER}
         ,  ${CD_EXCH}
         ,  ${RT_EXCH}
         ,  ${CD_SALEGRP}
         ,  ${NO_EMP}
         ,  ${TP_SO}
         ,  ${CD_ITEM}
         ,  ${CD_SL}
         ,  ${QT_SO_UNIT}
         ,  ${QT_SO}
         ,  ${UM_SO_UNIT}
         ,  ${UM_SO}
         ,  ${AM_WONAMT}
         ,  ${AM_DISCOUNT}
         ,  ${AM_VAT}
         ,  ${AM_TOT}
         ,  ${TP_VAT}
         ,  ${FG_DATA}
         ,  ${NO_SO}
         ,  ${SEQ_SO}
         ,  ${GI_PARTNER}
         ,  ${DT_DUEDATE}
         ,  ${UNIT_SO_UNIT}
         ,  ${UNIT_SO}
         ,  ${DC_RMK}
         ,  ${DC_RMK2}
         ,  ${FG_SOSTATS}
         ,  ${DTS_INSERT}
         ,  ${ID_INSERT}
         ,  ${DTS_UPDATE}
         ,  ${ID_UPDATE}
         ,  ${CF_QT}
         ,  ${CF_AM}
         ,  ${CF_VAT}
         ,  ${CF_AM_TOT}
         ,  ${DT_CONFIRM}
         ,  ${ID_CONFIRM}
         ,  ${FG_ERP}
         ,  ${DTS_POSIN}
         ,  ${DT_DUEREQ}
         ,  ${DT_DUE}
         ,  ${YN_PACKING}
         ,  ${PACK_CAR}
         ,  ${QT_IO}
         ,  ${DT_IO}
         ,  ${YN_UM}
         ,  ${CD_ROUTING}
         ,  ${QT_PO}
         ,  ${UM_IN}
         ,  ${YN_CGI}
         ,  ${CD_QTIOTP}
         ,  ${FG_SUBSTITUTE}
         ,  ${NO_EMP_QTIO}
         ,  ${NO_IO}
         ,  ${YN_DOWNLOAD}
         ,  ${QT_IM}
         ,  ${UNIT_IM}
         ,  ${CF_QT_IM}
         ,  ${QT_RE}
         ,  ${QT_RE_IM}
         ,  ${NO_ORI_POS}
         ,  ${NO_ORI_POS_LINE}
         ,  ${NUM_USERDEF1}
         ,  ${CD_USERDEF1}
         ,  ${UM_IM}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='V_Z_HLY_BANKACCT_TRADE_TEMP_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.V_Z_HLY_BANKACCT_TRADE_TEMP
     WHERE  C_CODE  = '1000'
]]></query>

<query name='ERP_V_Z_HLY_BANKACCT_TRADE_I'><![CDATA[
    INSERT  INTO ERP_V_Z_HLY_BANKACCT_TRADE
    (
            C_CODE
         ,  VIRTUAL_ACCT
         ,  CUST_CODE
         ,  BANK_CODE
         ,  RECEIPT_WHO
         ,  RECEIPT_ACCT
         ,  DC_RMK
         ,  CD_ACCT
         ,  CD_OACCT
         ,  CD_DEPT
         ,  CD_CC
         ,  ACCT_NO
         ,  YN_BANKCHECK
         ,  RECEIPT_ACCT_NM
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${C_CODE}
         ,  ${VIRTUAL_ACCT}
         ,  ${CUST_CODE}
         ,  ${BANK_CODE}
         ,  ${RECEIPT_WHO}
         ,  ${RECEIPT_ACCT}
         ,  ${DC_RMK}
         ,  ${CD_ACCT}
         ,  ${CD_OACCT}
         ,  ${CD_DEPT}
         ,  ${CD_CC}
         ,  ${ACCT_NO}
         ,  ${YN_BANKCHECK}
         ,  ${RECEIPT_ACCT_NM}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='STORE_USER_Q'><![CDATA[
    SELECT  SU.USER_ID                      AS NO_EMP
         ,  SU.USER_NM                      AS NM_KOR
         ,  '1000'                          AS CD_COMPANY
         ,  NVL(S.ERP_BIZAREA, '1100')      AS CD_BIZAREA
         ,  S.ERP_CC_CD                     AS CD_CC
         ,  SU.STOR_CD                      AS CD_DEPT
         ,  '002'                           AS CD_EMP
         ,  SU.ENTER_DT                     AS DT_ENTER
         ,  SU.RETIRE_DT                    AS DT_RETIRE
         ,  SU.EMP_DIV                      AS CD_DUTY_RANK
         ,  SU.ROLE_DIV                     AS CD_DUTY_RESP
         ,  SU.TEL_NO                       AS NO_TEL
         ,  SU.MOBILE_NO                    AS NO_TEL_EMER
         ,  SU.E_MAIL                       AS NO_EMAIL
         ,  SU.ZIP_CD                       AS NO_POST_RES
         ,  SU.ADDR1                        AS DC_ADDRESS_RES1
         ,  SU.ADDR2                        AS DC_ADDRESS_RES2
         ,  CASE WHEN SU.USE_YN = 'Y' THEN '001' ELSE '099' END AS CD_INCOM
         ,  CASE WHEN SU.DISABLED_YN = 'Y' THEN '001' ELSE '000' END    AS YN_HANDI
         ,  DECRYPT(SU.RESIDENT_NUM)        AS NO_RES
         ,  DECRYPT(SU.ACC_NO)              AS NO_BANK1
         ,  SU.BANK_CD                      AS CD_BANK1
         ,  SU.DISABLED_YN                  AS YN_HANDI
         ,  NULL                            AS ID_USER
         ,  '300'                           AS CD_DUTY_TYPE
         ,  '200'                           AS CD_PART
         ,  '300'                           AS TP_EMP
         ,  TO_CHAR(SU.INST_DT, 'YYYYMMDDHH24MISS')             AS DTS_INSERT
         ,  NVL(IU.ERP_USER_ID, 'POS')                          AS ID_INSERT
         ,  TO_CHAR(SU.UPD_DT, 'YYYYMMDDHH24MISS')              AS DTS_UPDATE
         ,  NVL(UU.ERP_USER_ID, 'POS')                          AS ID_UPDATE
      FROM  STORE_USER  SU
         ,  STORE       S
         ,  (
                SELECT  COMP_CD
                     ,  USER_ID
                     ,  MAX(ERP_USER_ID)    AS ERP_USER_ID
                  FROM  (  
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  ERP_USER_ID
                              FROM  HQ_USER
                             WHERE  COMP_CD = ${SCH_COMP_CD}
                               AND  USE_YN  = 'Y'
                            UNION ALL
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  ERP_USER_ID
                              FROM  STORE_USER
                             WHERE  COMP_CD = ${SCH_COMP_CD}
                               AND  USE_YN  = 'Y'
                        )
                 GROUP  BY COMP_CD, USER_ID
            )   IU
         ,  (
                SELECT  COMP_CD
                     ,  USER_ID
                     ,  MAX(ERP_USER_ID)    AS ERP_USER_ID
                  FROM  (  
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  ERP_USER_ID
                              FROM  HQ_USER
                             WHERE  COMP_CD = ${SCH_COMP_CD}
                               AND  USE_YN  = 'Y'
                            UNION ALL
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  ERP_USER_ID
                              FROM  STORE_USER
                             WHERE  COMP_CD = ${SCH_COMP_CD}
                               AND  USE_YN  = 'Y'
                        )
                 GROUP  BY COMP_CD, USER_ID
            )   UU
     WHERE  SU.COMP_CD      = S.COMP_CD
       AND  SU.BRAND_CD     = S.BRAND_CD
       AND  SU.STOR_CD      = S.STOR_CD
       AND  SU.COMP_CD      = IU.COMP_CD(+)
       AND  SU.INST_USER    = IU.USER_ID(+)
       AND  SU.COMP_CD      = UU.COMP_CD(+)
       AND  SU.UPD_USER     = UU.USER_ID(+)
       AND  SU.COMP_CD      = ${SCH_COMP_CD}
       AND  SU.EMP_DIV      = '340'
       AND  TO_CHAR(SU.UPD_DT, 'YYYYMMDDHH24MISS') >= ${SCH_LAST_DATE}
       AND  S.STOR_TP       = '10'
]]></query>

<query name='HR_Z_HLY_MA_EMP_I'><![CDATA[
    MERGE   NEOE.MA_EMP     AS ME
    USING   (
                SELECT  ${NO_EMP}           AS NO_EMP
                     ,  ${NM_KOR}           AS NM_KOR
                     ,  ${CD_COMPANY}       AS CD_COMPANY
                     ,  ${CD_BIZAREA}       AS CD_BIZAREA
                     ,  ${CD_CC}            AS CD_CC
                     ,  ${CD_DEPT}          AS CD_DEPT
                     ,  ${CD_TEAM}          AS CD_TEAM
                     ,  ${CD_EMP}           AS CD_EMP
                     ,  ${DT_ENTER}         AS DT_ENTER
                     ,  ${DT_RETIRE}        AS DT_RETIRE
                     ,  ${CD_DUTY_RANK}     AS CD_DUTY_RANK
                     ,  ${CD_DUTY_RESP}     AS CD_DUTY_RESP
                     ,  ${NO_TEL}           AS NO_TEL
                     ,  ${NO_TEL_EMER}      AS NO_TEL_EMER
                     ,  ${NO_EMAIL}         AS NO_EMAIL
                     ,  ${NO_POST_RES}      AS NO_POST_RES
                     ,  ${DC_ADDRESS_RES1}  AS DC_ADDRESS_RES1
                     ,  ${DC_ADDRESS_RES2}  AS DC_ADDRESS_RES2
                     ,  ${CD_INCOM}         AS CD_INCOM
                     ,  ${YN_HANDI}         AS YN_HANDI
                     ,  ${NO_RES}           AS NO_RES
                     ,  ${NO_BANK1}         AS NO_BANK1
                     ,  ${CD_BANK1}         AS CD_BANK1
                     ,  ${ID_USER}          AS ID_USER
                     ,  ${CD_DUTY_TYPE}     AS CD_DUTY_TYPE
                     ,  ${CD_PART}          AS CD_PART
                     ,  ${TP_EMP}           AS TP_EMP
                     ,  ${DTS_INSERT}       AS DTS_INSERT
                     ,  ${ID_INSERT}        AS ID_INSERT
                     ,  ${DTS_UPDATE}       AS DTS_UPDATE
                     ,  ${ID_UPDATE}        AS ID_UPDATE
            )   PT
        ON  ME.CD_COMPANY       = PT.CD_COMPANY
       AND  ME.NO_EMP           = PT.NO_EMP
    WHEN MATCHED THEN
        UPDATE
           SET  NM_KOR          = PT.NM_KOR
             ,  CD_BIZAREA      = PT.CD_BIZAREA
             ,  CD_CC           = PT.CD_CC
             ,  CD_DEPT         = PT.CD_DEPT
             ,  CD_EMP          = PT.CD_EMP
             ,  DT_ENTER        = PT.DT_ENTER
             ,  DT_RETIRE       = PT.DT_RETIRE
             ,  CD_DUTY_RANK    = PT.CD_DUTY_RANK
             ,  CD_DUTY_RESP    = PT.CD_DUTY_RESP
             ,  NO_TEL          = PT.NO_TEL
             ,  NO_TEL_EMER     = PT.NO_TEL_EMER
             ,  NO_EMAIL        = PT.NO_EMAIL
             ,  NO_POST_RES     = PT.NO_POST_RES
             ,  DC_ADDRESS_RES1 = PT.DC_ADDRESS_RES1
             ,  DC_ADDRESS_RES2 = PT.DC_ADDRESS_RES2
             ,  CD_INCOM        = PT.CD_INCOM
             ,  YN_HANDI        = PT.YN_HANDI
             ,  NO_RES          = PT.NO_RES
             ,  NO_BANK1        = PT.NO_BANK1
             ,  CD_BANK1        = PT.CD_BANK1
             ,  CD_DUTY_TYPE    = PT.CD_DUTY_TYPE
             ,  CD_PART         = PT.CD_PART
             ,  TP_EMP          = PT.TP_EMP
             ,  DTS_UPDATE      = PT.DTS_UPDATE
             ,  ID_UPDATE       = PT.ID_UPDATE
    WHEN NOT MATCHED THEN
        INSERT
        (
                NO_EMP
             ,  NM_KOR
             ,  CD_COMPANY
             ,  CD_BIZAREA
             ,  CD_CC
             ,  CD_DEPT
             ,  CD_EMP
             ,  DT_ENTER
             ,  DT_RETIRE
             ,  CD_DUTY_RANK
             ,  CD_DUTY_RESP
             ,  NO_TEL
             ,  NO_TEL_EMER
             ,  NO_EMAIL
             ,  NO_POST_RES
             ,  DC_ADDRESS_RES1
             ,  DC_ADDRESS_RES2
             ,  CD_INCOM
             ,  YN_HANDI
             ,  NO_RES
             ,  NO_BANK1
             ,  CD_BANK1
             ,  CD_DUTY_TYPE
             ,  CD_PART
             ,  TP_EMP
             ,  DTS_INSERT
             ,  ID_INSERT
        ) VALUES (
                PT.NO_EMP
             ,  PT.NM_KOR
             ,  PT.CD_COMPANY
             ,  PT.CD_BIZAREA
             ,  PT.CD_CC
             ,  PT.CD_DEPT
             ,  PT.CD_EMP
             ,  PT.DT_ENTER
             ,  PT.DT_RETIRE
             ,  PT.CD_DUTY_RANK
             ,  PT.CD_DUTY_RESP
             ,  PT.NO_TEL
             ,  PT.NO_TEL_EMER
             ,  PT.NO_EMAIL
             ,  PT.NO_POST_RES
             ,  PT.DC_ADDRESS_RES1
             ,  PT.DC_ADDRESS_RES2
             ,  PT.CD_INCOM
             ,  PT.YN_HANDI
             ,  PT.NO_RES
             ,  PT.NO_BANK1
             ,  PT.CD_BANK1
             ,  PT.CD_DUTY_TYPE
             ,  PT.CD_PART
             ,  PT.TP_EMP
             ,  PT.DTS_INSERT
             ,  PT.ID_INSERT
        );
]]></query>

<query name='STORE_CLM_Q'><![CDATA[
    SELECT  SC.COMP_CD
         ,  SC.BRAND_CD
         ,  SC.STOR_CD
         ,  S.ERP_STOR_CD
         ,  SC.CLOSE_YM     AS PROC_YM
      FROM  STORE_CLM   SC
         ,  STORE       S
         ,  (
                SELECT  S.COMP_CD
                     ,  S.BRAND_CD
                     ,  S.STOR_CD
                     ,  COUNT(*)    AS SURV_CNT
                  FROM  ERP_SA_Z_HLY_FRAN_MM_QTIO   Q
                     ,  STORE                       S
                 WHERE  Q.CD_PARTNER    = S.ERP_STOR_CD
                   AND  Q.CD_COMPANY    = '1000'
                   AND  Q.DT_IO         BETWEEN NVL(${SCH_YYYYMM}, TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYYMM'))||'01' AND NVL(${SCH_YYYYMM}, TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYYMM'))||'31'
                   AND  Q.ERP_IF_YN     = 'Y'
                   AND  S.COMP_CD       = ${SCH_COMP_CD}
                   AND  S.STOR_TP       = '10'
                 GROUP  BY S.COMP_CD, S.BRAND_CD, S.STOR_CD
            )   SS
         ,  (
                SELECT  S.COMP_CD
                     ,  S.BRAND_CD
                     ,  S.STOR_CD
                     ,  COUNT(*)    AS SALE_H_CNT
                  FROM  ERP_SA_FRAN_POSLINK_SALEH   H
                     ,  STORE                       S
                 WHERE  H.CD_PARTNER    = S.ERP_STOR_CD
                   AND  H.CD_COMPANY    = '1000'
                   AND  H.DT_SALE       BETWEEN NVL(${SCH_YYYYMM}, TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYYMM'))||'01' AND NVL(${SCH_YYYYMM}, TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYYMM'))||'31'
                   AND  H.ERP_IF_YN     = 'Y'
                   AND  S.COMP_CD       = ${SCH_COMP_CD}
                   AND  S.STOR_TP       IN ('10', '20')
                 GROUP  BY S.COMP_CD, S.BRAND_CD, S.STOR_CD
            )   SH
         ,  (
                SELECT  S.COMP_CD
                     ,  S.BRAND_CD
                     ,  S.STOR_CD
                     ,  COUNT(*)    AS SALE_L_CNT
                  FROM  ERP_SA_FRAN_POSLINK_SALEL   L
                     ,  STORE                       S
                 WHERE  L.CD_PARTNER    = S.ERP_STOR_CD
                   AND  L.CD_COMPANY    = '1000'
                   AND  L.DT_SALE       BETWEEN NVL(${SCH_YYYYMM}, TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYYMM'))||'01' AND NVL(${SCH_YYYYMM}, TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYYMM'))||'31'
                   AND  L.ERP_IF_YN     = 'Y'
                   AND  S.COMP_CD       = ${SCH_COMP_CD}
                   AND  S.STOR_TP       IN ('10', '20')
                 GROUP  BY S.COMP_CD, S.BRAND_CD, S.STOR_CD
            )   SL
     WHERE  SC.COMP_CD  = S.COMP_CD
       AND  SC.BRAND_CD = S.BRAND_CD
       AND  SC.STOR_CD  = S.STOR_CD
       AND  SC.COMP_CD  = SS.COMP_CD(+)
       AND  SC.BRAND_CD = SS.BRAND_CD(+)
       AND  SC.STOR_CD  = SS.STOR_CD(+)
       AND  SC.COMP_CD  = SH.COMP_CD(+)
       AND  SC.BRAND_CD = SH.BRAND_CD(+)
       AND  SC.STOR_CD  = SH.STOR_CD(+)
       AND  SC.COMP_CD  = SL.COMP_CD(+)
       AND  SC.BRAND_CD = SL.BRAND_CD(+)
       AND  SC.STOR_CD  = SL.STOR_CD(+)
       AND  SC.COMP_CD  = ${SCH_COMP_CD}
       AND  SC.CLOSE_YM = NVL(${SCH_YYYYMM}, TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYYMM'))
       AND  SC.CFM_YN   = 'Y'
       AND  (
                (${SCH_PROC_TP} = '1')
                OR
                (${SCH_PROC_TP} = '2' AND NVL(SH.SALE_H_CNT, 0) = 0)
                OR
                (${SCH_PROC_TP} = '3')
            )
       AND  (
                (${SCH_PROC_TP} = '1' AND S.STOR_TP = '10')
                OR
                (${SCH_PROC_TP} = '2' AND S.STOR_TP IN ('10', '20'))
                OR
                (${SCH_PROC_TP} = '3' AND S.STOR_TP IN ('10', '20'))
            )
]]></query>

<query name='SA_Z_HLY_FRAN_MM_QTIO_Q'><![CDATA[
    SELECT  MIN(YN_CONFIRM)     AS YN_CONFIRM
      FROM  NEOE.SA_Z_HLY_FRAN_MM_QTIO
     WHERE  CD_COMPANY      = '1000'
       AND  CD_PARTNER      = ${SCH_CD_PARTNER}
       AND  DT_IO           BETWEEN ${SCH_PROC_YM}+'01' AND ${SCH_PROC_YM}+'31'
     GROUP  BY CD_COMPANY, CD_PARTNER
]]></query>

<query name='ERP_SA_Z_HLY_FRAN_MM_QTIO_D'><![CDATA[
    DELETE  FROM ERP_SA_Z_HLY_FRAN_MM_QTIO
     WHERE  CD_COMPANY      = '1000'
       AND  CD_PARTNER      = ${SCH_CD_PARTNER}
       AND  DT_IO           BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
]]></query>

<query name='SA_Z_HLY_FRAN_MM_QTIO_D'><![CDATA[
     DELETE FROM NEOE.SA_Z_HLY_FRAN_MM_QTIO
     WHERE  CD_COMPANY      = '1000'
       AND  CD_PARTNER      = ${SCH_CD_PARTNER}
       AND  DT_IO           BETWEEN ${SCH_PROC_YM}+'01' AND ${SCH_PROC_YM}+'31'
]]></query>

<query name='ERP_SA_Z_HLY_FRAN_MM_QTIO_I'><![CDATA[
    INSERT  INTO ERP_SA_Z_HLY_FRAN_MM_QTIO
    (
            CD_COMPANY
         ,  CD_PLANT
         ,  CD_BIZAREA
         ,  NO_IO
         ,  NO_IO_LINE
         ,  CD_SL
         ,  FG_PS
         ,  FG_IO
         ,  QT_IO
         ,  QT_GOOD_INV
         ,  CD_QTIOTP
         ,  FG_TRANS
         ,  CD_PARTNER
         ,  CD_ITEM
         ,  CD_EXCH
         ,  RT_EXCH
         ,  YN_AM
         ,  GI_PARTNER
         ,  NO_EMP
         ,  CD_GROUP
         ,  CD_CC
         ,  DC_RMK
         ,  DT_IO
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  FG_TPIO
         ,  ERP_IF_YN
         ,  ERP_IF_DT
    )
    SELECT  '1000'                                              AS CD_COMPANY
         ,  '1000'                                              AS CD_PLANT
         ,  CD_BIZAREA
         ,  NO_IO
         ,  NO_IO_LINE
         ,  CD_SL
         ,  CASE WHEN ROUND(QT_IO) >= 0 THEN '2'   ELSE '1'    END      AS FG_PS
         ,  CASE WHEN ROUND(QT_IO) >= 0 THEN '012' ELSE '007'  END      AS FG_IO
         ,  ABS(ROUND(QT_IO))                                           AS QT_IO
         ,  ABS(ROUND(QT_GOOD_INV))                                     AS QT_GOOD_INV
         ,  CASE WHEN ROUND(QT_IO) >= 0 THEN '400' ELSE '410'  END      AS CD_QTIOTP
         ,  CASE WHEN ROUND(QT_IO) >= 0 THEN '001' ELSE ''     END      AS FG_TRANS
         ,  CD_PARTNER
         ,  CD_ITEM
         ,  '000'                                               AS CD_EXCH
         ,  '1'                                                 AS RT_EXCH
         ,  'Y'                                                 AS YN_AM
         ,  GI_PARTNER
         ,  NO_EMP
         ,  CD_GROUP
         ,  CD_CC
         ,  DC_RMK
         ,  DT_IO
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  'S'                                                 AS FG_TPIO
         ,  'N'                                                 AS ERP_IF_YN
         ,  NULL                                                AS ERP_IF_DT
      FROM  (
                SELECT  S.ERP_BIZAREA                                       AS CD_BIZAREA
                     ,  S.ERP_STOR_CD||M.PRC_YM||LPAD('1', 20 - LENGTH(S.ERP_STOR_CD||M.PRC_YM), '0')           AS NO_IO
                     ,  ROW_NUMBER() OVER (PARTITION BY SD.COMP_CD, SD.SURV_DT, SD.BRAND_CD, SD.STOR_CD ORDER BY SD.COMP_CD, SD.SURV_DT, SD.BRAND_CD, SD.STOR_CD)   AS NO_IO_LINE
                     ,  S.CENTER_CD                                         AS CD_SL
                     ,  M.SURV_QTY                                          AS QT_IO
                     ,  M.SURV_QTY                                          AS QT_GOOD_INV
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER
                     ,  SD.ITEM_CD                                          AS CD_ITEM
                     ,  S.ERP_STOR_CD                                       AS GI_PARTNER
                     ,  S.SV_USER_ID                                        AS NO_EMP
                     ,  S.ERP_SALE_GRP                                      AS CD_GROUP
                     ,  S.ERP_CC_CD                                         AS CD_CC
                     ,  SD.SURV_REASON                                      AS DC_RMK
                     ,  SD.SURV_DT                                          AS DT_IO
                     ,  NVL(IU.ERP_USER_ID, 'POS')                          AS ID_INSERT
                     ,  TO_CHAR(SD.INST_DT, 'YYYYMMDDHH24MISS')             AS DTS_INSERT
                  FROM  SURV_STOCK_DT   SD
                     ,  MSTOCK          M
                     ,  STORE           S
                     ,  ITEM            I
                     ,  (
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  MAX(ERP_USER_ID)    AS ERP_USER_ID
                              FROM  (  
                                        SELECT  COMP_CD
                                             ,  USER_ID
                                             ,  ERP_USER_ID
                                          FROM  HQ_USER
                                         WHERE  COMP_CD = ${SCH_COMP_CD}
                                           AND  USE_YN  = 'Y'
                                        UNION ALL
                                        SELECT  COMP_CD
                                             ,  USER_ID
                                             ,  ERP_USER_ID
                                          FROM  STORE_USER
                                         WHERE  COMP_CD     = ${SCH_COMP_CD}
                                           AND  BRAND_CD    = ${SCH_BRAND_CD}
                                           AND  STOR_CD     = ${SCH_STOR_CD}
                                           AND  USE_YN      = 'Y'
                                    )
                             GROUP  BY COMP_CD, USER_ID
                        )   IU
                 WHERE  SD.COMP_CD      = M.COMP_CD
                   AND  SD.BRAND_CD     = M.BRAND_CD
                   AND  SD.STOR_CD      = M.STOR_CD
                   AND  SD.ITEM_CD      = M.ITEM_CD
                   AND  SD.COMP_CD      = S.COMP_CD
                   AND  SD.BRAND_CD     = S.BRAND_CD
                   AND  SD.STOR_CD      = S.STOR_CD
                   AND  SD.COMP_CD      = I.COMP_CD
                   AND  SD.ITEM_CD      = I.ITEM_CD
                   AND  SD.COMP_CD      = IU.COMP_CD(+)
                   AND  SD.INST_USER    = IU.USER_ID(+)
                   AND  SD.COMP_CD      = ${SCH_COMP_CD}
                   AND  SD.BRAND_CD     = ${SCH_BRAND_CD}
                   AND  SD.STOR_CD      = ${SCH_STOR_CD}
                   AND  SD.SURV_DT      = (
                                                SELECT  MAX(SURV_DT)
                                                  FROM  SURV_STOCK_DT
                                                 WHERE  COMP_CD     = SD.COMP_CD
                                                   AND  BRAND_CD    = SD.BRAND_CD
                                                   AND  STOR_CD     = SD.STOR_CD
                                                   AND  SURV_GRP    = '01'
                                                   AND  SURV_DT     BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                                          )
                   AND  SD.SURV_GRP     = '01'
                   AND  M.PRC_YM        = ${SCH_PROC_YM}
                   AND  S.STOR_TP       = '10'
                   AND  I.ORD_SALE_DIV  IN ('1', '2')
            )
]]></query>

<query name='SA_Z_HLY_FRAN_MM_QTIO_I'><![CDATA[
    INSERT  INTO NEOE.SA_Z_HLY_FRAN_MM_QTIO
    (
            CD_COMPANY
         ,  CD_PLANT
         ,  CD_BIZAREA
         ,  NO_IO
         ,  NO_IO_LINE
         ,  CD_SL
         ,  FG_PS
         ,  FG_IO
         ,  QT_IO
         ,  QT_GOOD_INV
         ,  CD_QTIOTP
         ,  FG_TRANS
         ,  CD_PARTNER
         ,  CD_ITEM
         ,  CD_EXCH
         ,  RT_EXCH
         ,  YN_AM
         ,  GI_PARTNER
         ,  NO_EMP
         ,  CD_GROUP
         ,  CD_CC
         ,  DC_RMK
         ,  DT_IO
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  FG_TPIO
         ,  YN_CONFIRM
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CD_PLANT}
         ,  ${CD_BIZAREA}
         ,  ${NO_IO}
         ,  ${NO_IO_LINE}
         ,  ${CD_SL}
         ,  ${FG_PS}
         ,  ${FG_IO}
         ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${QT_IO}, '0') = '' THEN '0' ELSE ISNULL(${QT_IO}, '0') END)
         ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${QT_GOOD_INV}, '0') = '' THEN '0' ELSE ISNULL(${QT_GOOD_INV}, '0') END)
         ,  ${CD_QTIOTP}
         ,  ISNULL(${FG_TRANS}, '')
         ,  ${CD_PARTNER}
         ,  ${CD_ITEM}
         ,  ${CD_EXCH}
         ,  CONVERT(NUMERIC(11, 4), CASE WHEN ISNULL(${RT_EXCH}, '0') = '' THEN '0' ELSE ISNULL(${RT_EXCH}, '0') END)
         ,  ${YN_AM}
         ,  ${GI_PARTNER}
         ,  ${NO_EMP}
         ,  ${CD_GROUP}
         ,  ${CD_CC}
         ,  ${DC_RMK}
         ,  ${DT_IO}
         ,  ${ID_INSERT}
         ,  ${DTS_INSERT}
         ,  ${FG_TPIO}
         ,  'Y'
    )
]]></query>

<query name='ERP_SA_Z_HLY_FRAN_MM_QTIO_U'><![CDATA[
    UPDATE  ERP_SA_Z_HLY_FRAN_MM_QTIO
       SET  ERP_IF_YN   = ${UPD_ERP_IF_YN}
         ,  ERP_IF_DT   = CASE WHEN ${UPD_ERP_IF_YN} = 'Y' THEN SYSDATE ELSE NULL END
     WHERE  CD_COMPANY  = '1000'
       AND  CD_PARTNER  = ${SCH_ERP_STOR_CD}
       AND  DT_IO       BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
       AND  ERP_IF_YN   = ${SCH_ERP_IF_YN}
]]></query>

<query name='SURV_STOCK_HD_U'><![CDATA[
    UPDATE  SURV_STOCK_HD   SH
       SET  TRANS_YN    = ${UPD_ERP_IF_YN}
         ,  UPD_DT      = SYSDATE
         ,  UPD_USER    = 'JOB'
     WHERE  COMP_CD     = ${SCH_COMP_CD}
       AND  BRAND_CD    = ${SCH_BRAND_CD}
       AND  STOR_CD     = ${SCH_STOR_CD}
       AND  SURV_GRP    = '01'
       AND  SURV_DT     = (
                                SELECT  MAX(SURV_DT)
                                  FROM  SURV_STOCK_HD
                                 WHERE  COMP_CD     = SH.COMP_CD
                                   AND  BRAND_CD    = SH.BRAND_CD
                                   AND  STOR_CD     = SH.STOR_CD
                                   AND  SURV_GRP    = SH.SURV_GRP
                                   AND  SURV_DT     BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                          )
]]></query>

<query name='ERP_SA_FRAN_POSLINK_SALEH_I'><![CDATA[
    INSERT  INTO ERP_SA_FRAN_POSLINK_SALEH
    (
            CD_COMPANY
         ,  CD_PARTNER_ORIGIN
         ,  CD_PARTNER
         ,  DT_SALE
         ,  NO_POS
         ,  SLIP_NO
         ,  SALES_FG
         ,  CANCEL_YN
         ,  FG_SYSTEM
         ,  AM_SALE1
         ,  AM_SALE2
         ,  AM_SALE3
         ,  AM_SALE4
         ,  AM_VAT
         ,  AM_TOT
         ,  NUM_USERDEF1
         ,  NUM_USERDEF2
         ,  NUM_USERDEF3
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  SALES_TIME
         ,  CD_WEEK
         ,  ERP_IF_YN
         ,  ERP_IF_DT
    )
    SELECT  '1000'                              AS CD_COMPANY
         ,  S.ERP_STOR_CD                       AS CD_PARTNER_ORIGIN
         ,  S.ERP_STOR_CD                       AS CD_PARTNER
         ,  SJ.SALE_DT                          AS DT_SALE
         ,  '1'                                 AS NO_POS
         ,  S.ERP_STOR_CD||SJ.SALE_DT||LPAD('1', 20 - LENGTH(S.ERP_STOR_CD||SJ.SALE_DT), '0')   AS SLIP_NO
         ,  '1'                                 AS SALES_FG
         ,  'N'                                 AS CANCEL_YN
         ,  'POS'                               AS FG_SYSTEM
         ,  SUM(SJ.SALE_AMT - SJ.VAT_AMT)       AS AM_SALE1
         ,  SUM(SJ.DC_AMT + SJ.ENR_AMT)         AS AM_SALE2
         ,  SUM(SJ.SALE_AMT - (SJ.DC_AMT + SJ.ENR_AMT))                 AS AM_SALE3
         ,  SUM(SJ.SALE_AMT - (SJ.DC_AMT + SJ.ENR_AMT) - SJ.VAT_AMT)    AS AM_SALE4
         ,  SUM(SJ.VAT_AMT)                     AS AM_VAT
         ,  SUM(SJ.SALE_AMT)                    AS AM_TOT
         ,  SUM(SJ.BILL_CNT)                    AS NUM_USERDEF1
         ,  SUM(SJ.CUST_M_CNT + SJ.CUST_F_CNT)  AS NUM_USERDEF2
         ,  SUM(SJ.SALE_QTY)                    AS NUM_USERDEF3
         ,  'POS'                               AS ID_INSERT
         ,  TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')                            AS DTS_INSERT
         ,  NVL(MAX(SO.SALES_TIME), TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))   AS SALES_TIME
         ,  CASE WHEN TO_CHAR(TO_DATE(SJ.SALE_DT, 'YYYYMMDD'), 'D') = '1' THEN 7
                 ELSE TO_CHAR(TO_DATE(SJ.SALE_DT, 'YYYYMMDD'), 'D') - 1
            END                                 AS CD_WEEK
         ,  'N'                                 AS ERP_IF_YN
         ,  NULL                                AS ERP_IF_DT
      FROM  SALE_JDS    SJ
         ,  STORE       S
         ,  (
                SELECT  COMP_CD
                     ,  YMD             AS SALE_DT
                     ,  BRAND_CD
                     ,  STOR_CD
                     ,  MAX(EVALU_TM)   AS SALES_TIME
                  FROM  STORE_OC
                 WHERE  COMP_CD     = ${SCH_COMP_CD}
                   AND  BRAND_CD    = ${SCH_BRAND_CD}
                   AND  STOR_CD     = ${SCH_STOR_CD}
                   AND  YMD         BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                   AND  JOB_DIV     IN ('200', '201')
                 GROUP  BY COMP_CD, YMD, BRAND_CD, STOR_CD
            )           SO
     WHERE  SJ.COMP_CD  = S.COMP_CD
       AND  SJ.BRAND_CD = S.BRAND_CD
       AND  SJ.STOR_CD  = S.STOR_CD
       AND  SJ.COMP_CD  = SO.COMP_CD(+)
       AND  SJ.SALE_DT  = SO.SALE_DT(+)
       AND  SJ.BRAND_CD = SO.BRAND_CD(+)
       AND  SJ.STOR_CD  = SO.STOR_CD(+)
       AND  SJ.COMP_CD  = ${SCH_COMP_CD}
       AND  SJ.BRAND_CD = ${SCH_BRAND_CD}
       AND  SJ.STOR_CD  = ${SCH_STOR_CD}
       AND  SJ.SALE_DT  BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
       AND  SJ.GIFT_DIV = '0'
     GROUP  BY SJ.COMP_CD, SJ.SALE_DT, S.ERP_STOR_CD
]]></query>

<query name='SA_FRAN_POSLINK_SALEH_I'><![CDATA[
    INSERT  INTO NEOE.SA_FRAN_POSLINK_SALEH
    (
            CD_COMPANY
         ,  CD_PARTNER_ORIGIN
         ,  CD_PARTNER
         ,  DT_SALE
         ,  NO_POS
         ,  SLIP_NO
         ,  SALES_FG
         ,  CANCEL_YN
         ,  FG_SYSTEM
         ,  AM_SALE1
         ,  AM_SALE2
         ,  AM_SALE3
         ,  AM_SALE4
         ,  AM_VAT
         ,  AM_TOT
         ,  NUM_USERDEF1
         ,  NUM_USERDEF2
         ,  NUM_USERDEF3
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  SALES_TIME
         ,  CD_WEEK
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CD_PARTNER_ORIGIN}
         ,  ${CD_PARTNER}
         ,  ${DT_SALE}
         ,  ${NO_POS}
         ,  ${SLIP_NO}
         ,  ${SALES_FG}
         ,  ${CANCEL_YN}
         ,  ${FG_SYSTEM}
         ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${AM_SALE1}, '0') = '' THEN '0' ELSE ISNULL(${AM_SALE1}, '0') END)
         ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${AM_SALE2}, '0') = '' THEN '0' ELSE ISNULL(${AM_SALE2}, '0') END)
         ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${AM_SALE3}, '0') = '' THEN '0' ELSE ISNULL(${AM_SALE3}, '0') END)
         ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${AM_SALE4}, '0') = '' THEN '0' ELSE ISNULL(${AM_SALE4}, '0') END)
         ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${AM_VAT}, '0') = '' THEN '0' ELSE ISNULL(${AM_VAT}, '0') END)
         ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${AM_TOT}, '0') = '' THEN '0' ELSE ISNULL(${AM_TOT}, '0') END)
         ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${NUM_USERDEF1}, '0') = '' THEN '0' ELSE ISNULL(${NUM_USERDEF1}, '0') END)
         ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${NUM_USERDEF2}, '0') = '' THEN '0' ELSE ISNULL(${NUM_USERDEF2}, '0') END)
         ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${NUM_USERDEF3}, '0') = '' THEN '0' ELSE ISNULL(${NUM_USERDEF3}, '0') END)
         ,  ${ID_INSERT}
         ,  ${DTS_INSERT}
         ,  ${SALES_TIME}
         ,  ${CD_WEEK}
    )
]]></query>

<query name='ERP_SA_FRAN_POSLINK_SALEH_C'><![CDATA[
    UPDATE  ERP_SA_FRAN_POSLINK_SALEH
       SET  ERP_IF_YN   = ${UPD_ERP_IF_YN}
         ,  ERP_IF_DT   = CASE WHEN ${UPD_ERP_IF_YN} = 'Y' THEN SYSDATE ELSE NULL END
     WHERE  CD_COMPANY  = '1000'
       AND  CD_PARTNER  = ${SCH_ERP_STOR_CD}
       AND  DT_SALE     BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
       AND  ERP_IF_YN   = ${SCH_ERP_IF_YN}
]]></query>

<query name='SA_FRAN_POSLINK_SALEL_Q'><![CDATA[
    SELECT  MAX(CD_USERDEF2)    AS YN_CONFIRM
      FROM  NEOE.SA_FRAN_POSLINK_SALEL
     WHERE  CD_COMPANY      = '1000'
       AND  CD_PARTNER      = ${SCH_CD_PARTNER}
       AND  DT_SALE         BETWEEN ${SCH_PROC_YM}+'01' AND ${SCH_PROC_YM}+'31'
     GROUP  BY CD_COMPANY, CD_PARTNER
]]></query>

<query name='ERP_SA_FRAN_POSLINK_SALEL_D'><![CDATA[
    DELETE  FROM ERP_SA_FRAN_POSLINK_SALEL
     WHERE  CD_COMPANY      = '1000'
       AND  CD_PARTNER      = ${SCH_CD_PARTNER}
       AND  DT_SALE         BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
]]></query>

<query name='SA_FRAN_POSLINK_SALEL_D'><![CDATA[
    DELETE  FROM NEOE.SA_FRAN_POSLINK_SALEL
     WHERE  CD_COMPANY      = '1000'
       AND  CD_PARTNER      = ${SCH_CD_PARTNER}
       AND  DT_SALE         BETWEEN ${SCH_PROC_YM}+'01' AND ${SCH_PROC_YM}+'31'
]]></query>

<query name='ERP_SA_FRAN_POSLINK_SALEL_U'><![CDATA[
    INSERT  INTO ERP_SA_FRAN_POSLINK_SALEL
    (
            CD_COMPANY
         ,  CD_PARTNER_ORIGIN
         ,  CD_PARTNER
         ,  NO_POS
         ,  DT_SALE
         ,  SLIP_NO
         ,  SLIP_LINE
         ,  NO_CONFIRM
         ,  FG_SYSTEM
         ,  CD_COLUMN
         ,  AM_SALE
         ,  AM_PAYMENT
         ,  AM_DC
         ,  AM_VAT
         ,  DC_RMK
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  SALES_TIME
         ,  ERP_IF_YN
         ,  ERP_IF_DT
    )
    SELECT  CD_COMPANY
         ,  CD_PARTNER_ORIGIN
         ,  CD_PARTNER
         ,  NO_POS
         ,  DT_SALE
         ,  SLIP_NO
         ,  ROW_NUMBER() OVER (PARTITION BY CD_COMPANY, DT_SALE, CD_PARTNER ORDER BY CD_COMPANY, DT_SALE, CD_PARTNER, CD_COLUMN)    AS SLIP_LINE
         ,  NO_CONFIRM
         ,  FG_SYSTEM
         ,  CD_COLUMN
         ,  AM_SALE
         ,  AM_PAYMENT
         ,  AM_DC
         ,  AM_VAT
         ,  DC_RMK
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  SALES_TIME
         ,  ERP_IF_YN
         ,  ERP_IF_DT
      FROM  (    
                -- 102 : 현금매출
                SELECT  '1000'                                              AS CD_COMPANY
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER_ORIGIN
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER
                     ,  '1'                                                 AS NO_POS
                     ,  SJ.SALE_DT                                          AS DT_SALE
                     ,  S.ERP_STOR_CD||SJ.SALE_DT||LPAD('1', 20 - LENGTH(S.ERP_STOR_CD||SJ.SALE_DT), '0')   AS SLIP_NO
                     ,  '1'                                                 AS NO_CONFIRM
                     ,  'POS'                                               AS FG_SYSTEM
                     ,  '102'                                               AS CD_COLUMN
                     ,  0                                                   AS AM_SALE
                     ,  SUM(SJ.PAY_AMT - (SJ.CHANGE_AMT + SJ.REMAIN_AMT))   AS AM_PAYMENT
                     ,  0                                                   AS AM_DC
                     ,  0                                                   AS AM_VAT
                     ,  ''                                                  AS DC_RMK
                     ,  'POS'                                               AS ID_INSERT
                     ,  TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')                AS DTS_INSERT
                     ,  MAX(SO.SALES_TIME)                                  AS SALES_TIME
                     ,  'N'                                                 AS ERP_IF_YN
                     ,  NULL                                                AS ERP_IF_DT
                  FROM  SALE_JDP    SJ
                     ,  STORE       S
                     ,  (
                            SELECT  COMP_CD
                                 ,  YMD             AS SALE_DT
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  MAX(EVALU_TM)   AS SALES_TIME
                              FROM  STORE_OC
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  BRAND_CD    = ${SCH_BRAND_CD}
                               AND  STOR_CD     = ${SCH_STOR_CD}
                               AND  YMD         BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                               AND  JOB_DIV     IN ('200', '201')
                             GROUP  BY COMP_CD, YMD, BRAND_CD, STOR_CD
                        )           SO
                 WHERE  SJ.COMP_CD  = S.COMP_CD
                   AND  SJ.BRAND_CD = S.BRAND_CD
                   AND  SJ.STOR_CD  = S.STOR_CD
                   AND  SJ.COMP_CD  = SO.COMP_CD
                   AND  SJ.SALE_DT  = SO.SALE_DT
                   AND  SJ.BRAND_CD = SO.BRAND_CD
                   AND  SJ.STOR_CD  = SO.STOR_CD
                   AND  SJ.COMP_CD  = ${SCH_COMP_CD}
                   AND  SJ.BRAND_CD = ${SCH_BRAND_CD}
                   AND  SJ.STOR_CD  = ${SCH_STOR_CD}
                   AND  SJ.SALE_DT  BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                   AND  SJ.PAY_DIV  IN ('10', '30')
                   AND  SJ.GIFT_DIV = '0'
                 GROUP  BY SJ.COMP_CD, SJ.SALE_DT, S.ERP_STOR_CD
                UNION ALL
                -- 101 : 신용카드 매출, 103 : 기프티쇼, 104 : 기프티콘, 105 : 아이넘버, 106 : 금액상품권(갤럭시아), 107 : 기프티팝(M12), 108 : 식권, 109 : 멤버십포인트사용, 110 : 충전식상품권(나이스 기프트카드), 111 : 할리스구매쿠폰(할리스콘)
                SELECT  '1000'                                              AS CD_COMPANY
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER_ORIGIN
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER
                     ,  '1'                                                 AS NO_POS
                     ,  SJ.SALE_DT                                          AS DT_SALE
                     ,  S.ERP_STOR_CD||SJ.SALE_DT||LPAD('1', 20 - LENGTH(S.ERP_STOR_CD||SJ.SALE_DT), '0')   AS SLIP_NO
                     ,  '1'                                                 AS NO_CONFIRM
                     ,  'POS'                                               AS FG_SYSTEM
                     ,  CASE WHEN SJ.PAY_DIV = '20' THEN '101'
                             WHEN SJ.PAY_DIV = '72' THEN '103'
                             WHEN SJ.PAY_DIV = '71' THEN '104'
                             WHEN SJ.PAY_DIV = '73' THEN '105'
                             WHEN SJ.PAY_DIV = '77' THEN '106'
                             WHEN SJ.PAY_DIV = '76' THEN '107'
                             WHEN SJ.PAY_DIV = '50' THEN '108'
                             WHEN SJ.PAY_DIV = '68' THEN '109'
                             WHEN SJ.PAY_DIV = '74' THEN '111'
                             ELSE ''
                        END                                                 AS CD_COLUMN
                     ,  0                                                   AS AM_SALE
                     ,  SUM(SJ.PAY_AMT - (SJ.CHANGE_AMT + SJ.REMAIN_AMT))   AS AM_PAYMENT
                     ,  0                                                   AS AM_DC
                     ,  0                                                   AS AM_VAT
                     ,  ''                                                  AS DC_RMK
                     ,  'POS'                                               AS ID_INSERT
                     ,  TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')                AS DTS_INSERT
                     ,  MAX(SO.SALES_TIME)                                  AS SALES_TIME
                     ,  'N'                                                 AS ERP_IF_YN
                     ,  NULL                                                AS ERP_IF_DT
                  FROM  SALE_JDP    SJ
                     ,  STORE       S
                     ,  (
                            SELECT  COMP_CD
                                 ,  YMD             AS SALE_DT
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  MAX(EVALU_TM)   AS SALES_TIME
                              FROM  STORE_OC
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  BRAND_CD    = ${SCH_BRAND_CD}
                               AND  STOR_CD     = ${SCH_STOR_CD}
                               AND  YMD         BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                               AND  JOB_DIV     IN ('200', '201')
                             GROUP  BY COMP_CD, YMD, BRAND_CD, STOR_CD
                        )           SO
                 WHERE  SJ.COMP_CD  = S.COMP_CD
                   AND  SJ.BRAND_CD = S.BRAND_CD
                   AND  SJ.STOR_CD  = S.STOR_CD
                   AND  SJ.COMP_CD  = SO.COMP_CD
                   AND  SJ.SALE_DT  = SO.SALE_DT
                   AND  SJ.BRAND_CD = SO.BRAND_CD
                   AND  SJ.STOR_CD  = SO.STOR_CD
                   AND  SJ.COMP_CD  = ${SCH_COMP_CD}
                   AND  SJ.BRAND_CD = ${SCH_BRAND_CD}
                   AND  SJ.STOR_CD  = ${SCH_STOR_CD}
                   AND  SJ.SALE_DT  BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                   AND  SJ.PAY_DIV  IN ('20', '50', '68', '71', '72', '73', '74', '76', '77')
                   AND  SJ.GIFT_DIV = '0'
                 GROUP  BY SJ.COMP_CD, SJ.SALE_DT, S.ERP_STOR_CD, SJ.PAY_DIV
                UNION ALL
                -- 110 : 충전식상품권
                SELECT  '1000'                                              AS CD_COMPANY
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER_ORIGIN
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER
                     ,  '1'                                                 AS NO_POS
                     ,  SJ.SALE_DT                                          AS DT_SALE
                     ,  S.ERP_STOR_CD||SJ.SALE_DT||LPAD('1', 20 - LENGTH(S.ERP_STOR_CD||SJ.SALE_DT), '0')   AS SLIP_NO
                     ,  '1'                                                 AS NO_CONFIRM
                     ,  'POS'                                               AS FG_SYSTEM
                     ,  '110'                                               AS CD_COLUMN
                     ,  0                                                   AS AM_SALE
                     ,  SUM(SJ.PAY_AMT - (SJ.CHANGE_AMT + SJ.REMAIN_AMT))   AS AM_PAYMENT
                     ,  0                                                   AS AM_DC
                     ,  0                                                   AS AM_VAT
                     ,  ''                                                  AS DC_RMK
                     ,  'POS'                                               AS ID_INSERT
                     ,  TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')                AS DTS_INSERT
                     ,  MAX(SO.SALES_TIME)                                  AS SALES_TIME
                     ,  'N'                                                 AS ERP_IF_YN
                     ,  NULL                                                AS ERP_IF_DT
                  FROM  SALE_JDP    SJ
                     ,  STORE       S
                     ,  (
                            SELECT  COMP_CD
                                 ,  YMD             AS SALE_DT
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  MAX(EVALU_TM)   AS SALES_TIME
                              FROM  STORE_OC
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  BRAND_CD    = ${SCH_BRAND_CD}
                               AND  STOR_CD     = ${SCH_STOR_CD}
                               AND  YMD         BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                               AND  JOB_DIV     IN ('200', '201')
                             GROUP  BY COMP_CD, YMD, BRAND_CD, STOR_CD
                        )           SO
                 WHERE  SJ.COMP_CD  = S.COMP_CD
                   AND  SJ.BRAND_CD = S.BRAND_CD
                   AND  SJ.STOR_CD  = S.STOR_CD
                   AND  SJ.COMP_CD  = SO.COMP_CD
                   AND  SJ.SALE_DT  = SO.SALE_DT
                   AND  SJ.BRAND_CD = SO.BRAND_CD
                   AND  SJ.STOR_CD  = SO.STOR_CD
                   AND  SJ.COMP_CD  = ${SCH_COMP_CD}
                   AND  SJ.BRAND_CD = ${SCH_BRAND_CD}
                   AND  SJ.STOR_CD  = ${SCH_STOR_CD}
                   AND  SJ.SALE_DT  BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                   AND  SJ.PAY_DIV  = '93'
                   AND  SJ.GIFT_DIV = '0'
                 GROUP  BY SJ.COMP_CD, SJ.SALE_DT, S.ERP_STOR_CD
                UNION ALL
                -- 114 : 금액상품권(해피머니)
                SELECT  '1000'                                              AS CD_COMPANY
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER_ORIGIN
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER
                     ,  '1'                                                 AS NO_POS
                     ,  SJ.SALE_DT                                          AS DT_SALE
                     ,  S.ERP_STOR_CD||SJ.SALE_DT||LPAD('1', 20 - LENGTH(S.ERP_STOR_CD||SJ.SALE_DT), '0')   AS SLIP_NO
                     ,  '1'                                                 AS NO_CONFIRM
                     ,  'POS'                                               AS FG_SYSTEM
                     ,  '114'                                               AS CD_COLUMN
                     ,  0                                                   AS AM_SALE
                     ,  SUM(SJ.PAY_AMT - (SJ.CHANGE_AMT + SJ.REMAIN_AMT))   AS AM_PAYMENT
                     ,  0                                                   AS AM_DC
                     ,  0                                                   AS AM_VAT
                     ,  ''                                                  AS DC_RMK
                     ,  'POS'                                               AS ID_INSERT
                     ,  TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')                AS DTS_INSERT
                     ,  MAX(SO.SALES_TIME)                                  AS SALES_TIME
                     ,  'N'                                                 AS ERP_IF_YN
                     ,  NULL                                                AS ERP_IF_DT
                  FROM  SALE_JDP    SJ
                     ,  STORE       S
                     ,  (
                            SELECT  COMP_CD
                                 ,  YMD             AS SALE_DT
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  MAX(EVALU_TM)   AS SALES_TIME
                              FROM  STORE_OC
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  BRAND_CD    = ${SCH_BRAND_CD}
                               AND  STOR_CD     = ${SCH_STOR_CD}
                               AND  YMD         BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                               AND  JOB_DIV     IN ('200', '201')
                             GROUP  BY COMP_CD, YMD, BRAND_CD, STOR_CD
                        )           SO
                 WHERE  SJ.COMP_CD  = S.COMP_CD
                   AND  SJ.BRAND_CD = S.BRAND_CD
                   AND  SJ.STOR_CD  = S.STOR_CD
                   AND  SJ.COMP_CD  = SO.COMP_CD
                   AND  SJ.SALE_DT  = SO.SALE_DT
                   AND  SJ.BRAND_CD = SO.BRAND_CD
                   AND  SJ.STOR_CD  = SO.STOR_CD
                   AND  SJ.COMP_CD  = ${SCH_COMP_CD}
                   AND  SJ.BRAND_CD = ${SCH_BRAND_CD}
                   AND  SJ.STOR_CD  = ${SCH_STOR_CD}
                   AND  SJ.SALE_DT  BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                   AND  SJ.PAY_DIV  = '94'
                   AND  SJ.GIFT_DIV = '0'
                 GROUP  BY SJ.COMP_CD, SJ.SALE_DT, S.ERP_STOR_CD
                UNION ALL
                -- 112 : 본사분담금
                SELECT  '1000'                                              AS CD_COMPANY
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER_ORIGIN
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER
                     ,  '1'                                                 AS NO_POS
                     ,  SS.SALE_DT                                          AS DT_SALE
                     ,  S.ERP_STOR_CD||SS.SALE_DT||LPAD('1', 20 - LENGTH(S.ERP_STOR_CD||SS.SALE_DT), '0')   AS SLIP_NO
                     ,  '1'                                                 AS NO_CONFIRM
                     ,  'POS'                                               AS FG_SYSTEM
                     ,  '112'                                               AS CD_COLUMN
                     ,  0                                                   AS AM_SALE
                     ,  SUM(SS.PAY_AMT - (SS.CHANGE_AMT + SS.REMAIN_AMT))   AS AM_PAYMENT
                     ,  0                                                   AS AM_DC
                     ,  0                                                   AS AM_VAT
                     ,  ''                                                  AS DC_RMK
                     ,  'POS'                                               AS ID_INSERT
                     ,  TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')                AS DTS_INSERT
                     ,  MAX(SO.SALES_TIME)                                  AS SALES_TIME
                     ,  'N'                                                 AS ERP_IF_YN
                     ,  NULL                                                AS ERP_IF_DT
                  FROM  SALE_ST     SS
                     ,  STORE       S
                     ,  (
                            SELECT  COMP_CD
                                 ,  YMD             AS SALE_DT
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  MAX(EVALU_TM)   AS SALES_TIME
                              FROM  STORE_OC
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  BRAND_CD    = ${SCH_BRAND_CD}
                               AND  STOR_CD     = ${SCH_STOR_CD}
                               AND  YMD         BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                               AND  JOB_DIV     IN ('200', '201')
                             GROUP  BY COMP_CD, YMD, BRAND_CD, STOR_CD
                        )           SO
                 WHERE  SS.COMP_CD  = S.COMP_CD
                   AND  SS.BRAND_CD = S.BRAND_CD
                   AND  SS.STOR_CD  = S.STOR_CD
                   AND  SS.COMP_CD  = SO.COMP_CD
                   AND  SS.SALE_DT  = SO.SALE_DT
                   AND  SS.BRAND_CD = SO.BRAND_CD
                   AND  SS.STOR_CD  = SO.STOR_CD
                   AND  SS.COMP_CD  = ${SCH_COMP_CD}
                   AND  SS.BRAND_CD = ${SCH_BRAND_CD}
                   AND  SS.STOR_CD  = ${SCH_STOR_CD}
                   AND  SS.SALE_DT  BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                   AND  SS.PAY_DIV  = 'A2'
                 GROUP  BY SS.COMP_CD, SS.SALE_DT, S.ERP_STOR_CD
                UNION ALL
                -- 113 : T본사분담금
                SELECT  '1000'                                              AS CD_COMPANY
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER_ORIGIN
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER
                     ,  '1'                                                 AS NO_POS
                     ,  SD.SALE_DT                                          AS DT_SALE
                     ,  S.ERP_STOR_CD||SD.SALE_DT||LPAD('1', 20 - LENGTH(S.ERP_STOR_CD||SD.SALE_DT), '0')   AS SLIP_NO
                     ,  '1'                                                 AS NO_CONFIRM
                     ,  'POS'                                               AS FG_SYSTEM
                     ,  '113'                                               AS CD_COLUMN
                     ,  0                                                   AS AM_SALE
                     ,  SUM(SD.DC_AMT_H)                                    AS AM_PAYMENT
                     ,  0                                                   AS AM_DC
                     ,  0                                                   AS AM_VAT
                     ,  ''                                                  AS DC_RMK
                     ,  'POS'                                               AS ID_INSERT
                     ,  TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')                AS DTS_INSERT
                     ,  MAX(SO.SALES_TIME)                                  AS SALES_TIME
                     ,  'N'                                                 AS ERP_IF_YN
                     ,  NULL                                                AS ERP_IF_DT
                  FROM  SALE_DC     SD
                     ,  DC          D
                     ,  STORE       S
                     ,  (
                            SELECT  COMP_CD
                                 ,  YMD             AS SALE_DT
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  MAX(EVALU_TM)   AS SALES_TIME
                              FROM  STORE_OC
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  BRAND_CD    = ${SCH_BRAND_CD}
                               AND  STOR_CD     = ${SCH_STOR_CD}
                               AND  YMD         BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                               AND  JOB_DIV     IN ('200', '201')
                             GROUP  BY COMP_CD, YMD, BRAND_CD, STOR_CD
                        )           SO
                 WHERE  SD.COMP_CD  = D.COMP_CD
                   AND  SD.BRAND_CD = D.BRAND_CD
                   AND  SD.DC_DIV   = D.DC_DIV
                   AND  SD.COMP_CD  = S.COMP_CD
                   AND  SD.BRAND_CD = S.BRAND_CD
                   AND  SD.STOR_CD  = S.STOR_CD
                   AND  SD.COMP_CD  = SO.COMP_CD
                   AND  SD.SALE_DT  = SO.SALE_DT
                   AND  SD.BRAND_CD = SO.BRAND_CD
                   AND  SD.STOR_CD  = SO.STOR_CD
                   AND  SD.COMP_CD  = ${SCH_COMP_CD}
                   AND  SD.BRAND_CD = ${SCH_BRAND_CD}
                   AND  SD.STOR_CD  = ${SCH_STOR_CD}
                   AND  SD.SALE_DT  BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                   AND  D.DC_CLASS  = '5'
                 GROUP  BY SD.COMP_CD, SD.SALE_DT, S.ERP_STOR_CD
                UNION ALL
                -- 115 : 제휴사분담금
                SELECT  '1000'                                              AS CD_COMPANY
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER_ORIGIN
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER
                     ,  '1'                                                 AS NO_POS
                     ,  SS.SALE_DT                                          AS DT_SALE
                     ,  S.ERP_STOR_CD||SS.SALE_DT||LPAD('1', 20 - LENGTH(S.ERP_STOR_CD||SS.SALE_DT), '0')   AS SLIP_NO
                     ,  '1'                                                 AS NO_CONFIRM
                     ,  'POS'                                               AS FG_SYSTEM
                     ,  SS.AFF_BAL_NUM                                      AS CD_COLUMN
                     ,  0                                                   AS AM_SALE
                     ,  SUM(SS.PAY_AMT - (SS.CHANGE_AMT + SS.REMAIN_AMT))   AS AM_PAYMENT
                     ,  0                                                   AS AM_DC
                     ,  0                                                   AS AM_VAT
                     ,  ''                                                  AS DC_RMK
                     ,  'POS'                                               AS ID_INSERT
                     ,  TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')                AS DTS_INSERT
                     ,  MAX(SO.SALES_TIME)                                  AS SALES_TIME
                     ,  'N'                                                 AS ERP_IF_YN
                     ,  NULL                                                AS ERP_IF_DT
                  FROM  SALE_ST     SS
                     ,  STORE       S
                     ,  (
                            SELECT  COMP_CD
                                 ,  YMD             AS SALE_DT
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  MAX(EVALU_TM)   AS SALES_TIME
                              FROM  STORE_OC
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  BRAND_CD    = ${SCH_BRAND_CD}
                               AND  STOR_CD     = ${SCH_STOR_CD}
                               AND  YMD         BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                               AND  JOB_DIV     IN ('200', '201')
                             GROUP  BY COMP_CD, YMD, BRAND_CD, STOR_CD
                        )           SO
                 WHERE  SS.COMP_CD  = S.COMP_CD
                   AND  SS.BRAND_CD = S.BRAND_CD
                   AND  SS.STOR_CD  = S.STOR_CD
                   AND  SS.COMP_CD  = SO.COMP_CD
                   AND  SS.SALE_DT  = SO.SALE_DT
                   AND  SS.BRAND_CD = SO.BRAND_CD
                   AND  SS.STOR_CD  = SO.STOR_CD
                   AND  SS.COMP_CD  = ${SCH_COMP_CD}
                   AND  SS.BRAND_CD = ${SCH_BRAND_CD}
                   AND  SS.STOR_CD  = ${SCH_STOR_CD}
                   AND  SS.SALE_DT  BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                   AND  SS.PAY_DIV  = 'A4'
                 GROUP  BY SS.COMP_CD, SS.SALE_DT, S.ERP_STOR_CD, SS.AFF_BAL_NUM
                UNION ALL
                -- 302 : 상품권충전(현금)
                SELECT  '1000'                                              AS CD_COMPANY
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER_ORIGIN
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER
                     ,  '1'                                                 AS NO_POS
                     ,  SS.SALE_DT                                          AS DT_SALE
                     ,  S.ERP_STOR_CD||SS.SALE_DT||LPAD('1', 20 - LENGTH(S.ERP_STOR_CD||SS.SALE_DT), '0')   AS SLIP_NO
                     ,  '1'                                                 AS NO_CONFIRM
                     ,  'POS'                                               AS FG_SYSTEM
                     ,  '302'                                               AS CD_COLUMN
                     ,  0                                                   AS AM_SALE
                     ,  SUM(SS.PAY_AMT - (SS.CHANGE_AMT + SS.REMAIN_AMT))   AS AM_PAYMENT
                     ,  0                                                   AS AM_DC
                     ,  0                                                   AS AM_VAT
                     ,  ''                                                  AS DC_RMK
                     ,  'POS'                                               AS ID_INSERT
                     ,  TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')                AS DTS_INSERT
                     ,  MAX(SO.SALES_TIME)                                  AS SALES_TIME
                     ,  'N'                                                 AS ERP_IF_YN
                     ,  NULL                                                AS ERP_IF_DT
                  FROM  SALE_ST     SS
                     ,  STORE       S
                     ,  (
                            SELECT  COMP_CD
                                 ,  YMD             AS SALE_DT
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  MAX(EVALU_TM)   AS SALES_TIME
                              FROM  STORE_OC
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  BRAND_CD    = ${SCH_BRAND_CD}
                               AND  STOR_CD     = ${SCH_STOR_CD}
                               AND  YMD         BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                               AND  JOB_DIV     IN ('200', '201')
                             GROUP  BY COMP_CD, YMD, BRAND_CD, STOR_CD
                        )           SO
                 WHERE  SS.COMP_CD  = S.COMP_CD
                   AND  SS.BRAND_CD = S.BRAND_CD
                   AND  SS.STOR_CD  = S.STOR_CD
                   AND  SS.COMP_CD  = SO.COMP_CD
                   AND  SS.SALE_DT  = SO.SALE_DT
                   AND  SS.BRAND_CD = SO.BRAND_CD
                   AND  SS.STOR_CD  = SO.STOR_CD
                   AND  SS.COMP_CD  = ${SCH_COMP_CD}
                   AND  SS.BRAND_CD = ${SCH_BRAND_CD}
                   AND  SS.STOR_CD  = ${SCH_STOR_CD}
                   AND  SS.SALE_DT  BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                   AND  SS.PAY_DIV  IN ('10', '30')
                   AND  SS.GIFT_DIV IN ('1', '2')
                 GROUP  BY SS.COMP_CD, SS.SALE_DT, S.ERP_STOR_CD
                UNION ALL
                -- 303 : 상품권충전(카드)
                SELECT  '1000'                                              AS CD_COMPANY
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER_ORIGIN
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER
                     ,  '1'                                                 AS NO_POS
                     ,  SS.SALE_DT                                          AS DT_SALE
                     ,  S.ERP_STOR_CD||SS.SALE_DT||LPAD('1', 20 - LENGTH(S.ERP_STOR_CD||SS.SALE_DT), '0')   AS SLIP_NO
                     ,  '1'                                                 AS NO_CONFIRM
                     ,  'POS'                                               AS FG_SYSTEM
                     ,  '303'                                               AS CD_COLUMN
                     ,  0                                                   AS AM_SALE
                     ,  SUM(SS.PAY_AMT - (SS.CHANGE_AMT + SS.REMAIN_AMT))   AS AM_PAYMENT
                     ,  0                                                   AS AM_DC
                     ,  0                                                   AS AM_VAT
                     ,  ''                                                  AS DC_RMK
                     ,  'POS'                                               AS ID_INSERT
                     ,  TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')                AS DTS_INSERT
                     ,  MAX(SO.SALES_TIME)                                  AS SALES_TIME
                     ,  'N'                                                 AS ERP_IF_YN
                     ,  NULL                                                AS ERP_IF_DT
                  FROM  SALE_ST     SS
                     ,  STORE       S
                     ,  (
                            SELECT  COMP_CD
                                 ,  YMD             AS SALE_DT
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  MAX(EVALU_TM)   AS SALES_TIME
                              FROM  STORE_OC
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  BRAND_CD    = ${SCH_BRAND_CD}
                               AND  STOR_CD     = ${SCH_STOR_CD}
                               AND  YMD         BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                               AND  JOB_DIV     IN ('200', '201')
                             GROUP  BY COMP_CD, YMD, BRAND_CD, STOR_CD
                        )           SO
                 WHERE  SS.COMP_CD  = S.COMP_CD
                   AND  SS.BRAND_CD = S.BRAND_CD
                   AND  SS.STOR_CD  = S.STOR_CD
                   AND  SS.COMP_CD  = SO.COMP_CD
                   AND  SS.SALE_DT  = SO.SALE_DT
                   AND  SS.BRAND_CD = SO.BRAND_CD
                   AND  SS.STOR_CD  = SO.STOR_CD
                   AND  SS.COMP_CD  = ${SCH_COMP_CD}
                   AND  SS.BRAND_CD = ${SCH_BRAND_CD}
                   AND  SS.STOR_CD  = ${SCH_STOR_CD}
                   AND  SS.SALE_DT  BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                   AND  SS.PAY_DIV  = '20'
                   AND  SS.GIFT_DIV IN ('1', '2')
                 GROUP  BY SS.COMP_CD, SS.SALE_DT, S.ERP_STOR_CD
                UNION ALL
                -- 306 : 상품권회수 수수료
                SELECT  '1000'                                              AS CD_COMPANY
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER_ORIGIN
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER
                     ,  '1'                                                 AS NO_POS
                     ,  SJ.SALE_DT                                          AS DT_SALE
                     ,  S.ERP_STOR_CD||SJ.SALE_DT||LPAD('1', 20 - LENGTH(S.ERP_STOR_CD||SJ.SALE_DT), '0')   AS SLIP_NO
                     ,  '1'                                                 AS NO_CONFIRM
                     ,  'POS'                                               AS FG_SYSTEM
                     ,  '306'                                               AS CD_COLUMN
                     ,  0                                                   AS AM_SALE
                     ,  SUM(ROUND(
                                    CASE WHEN SJ.PAY_DIV = '93' THEN (SJ.PAY_AMT - (SJ.CHANGE_AMT + SJ.REMAIN_AMT)) * (NVL(P.ALLOT_RATE, 5)/100)
                                         WHEN SJ.PAY_DIV = '94' THEN (SJ.PAY_AMT - (SJ.CHANGE_AMT + SJ.REMAIN_AMT)) * (NVL(P.ALLOT_RATE, 7)/100)
                                         ELSE 0
                                    END
                                 )
                           )                                                AS AM_PAYMENT
                     ,  0                                                   AS AM_DC
                     ,  0                                                   AS AM_VAT
                     ,  ''                                                  AS DC_RMK
                     ,  'POS'                                               AS ID_INSERT
                     ,  TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')                AS DTS_INSERT
                     ,  MAX(SO.SALES_TIME)                                  AS SALES_TIME
                     ,  'N'                                                 AS ERP_IF_YN
                     ,  NULL                                                AS ERP_IF_DT
                  FROM  SALE_JDP    SJ
                     ,  STORE       S
                     ,  PAY_MST     P
                     ,  (
                            SELECT  COMP_CD
                                 ,  YMD             AS SALE_DT
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  MAX(EVALU_TM)   AS SALES_TIME
                              FROM  STORE_OC
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  BRAND_CD    = ${SCH_BRAND_CD}
                               AND  STOR_CD     = ${SCH_STOR_CD}
                               AND  YMD         BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                               AND  JOB_DIV     IN ('200', '201')
                             GROUP  BY COMP_CD, YMD, BRAND_CD, STOR_CD
                        )           SO
                 WHERE  SJ.COMP_CD  = S.COMP_CD
                   AND  SJ.BRAND_CD = S.BRAND_CD
                   AND  SJ.STOR_CD  = S.STOR_CD
                   AND  SJ.COMP_CD  = P.COMP_CD
                   AND  SJ.BRAND_CD = P.BRAND_CD
                   AND  SJ.PAY_DIV  = P.PAY_DIV
                   AND  SJ.COMP_CD  = SO.COMP_CD
                   AND  SJ.SALE_DT  = SO.SALE_DT
                   AND  SJ.BRAND_CD = SO.BRAND_CD
                   AND  SJ.STOR_CD  = SO.STOR_CD
                   AND  SJ.COMP_CD  = ${SCH_COMP_CD}
                   AND  SJ.BRAND_CD = ${SCH_BRAND_CD}
                   AND  SJ.STOR_CD  = ${SCH_STOR_CD}
                   AND  SJ.SALE_DT  BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                   AND  SJ.PAY_DIV  IN ('93', '94')
                 GROUP  BY SJ.COMP_CD, SJ.SALE_DT, S.ERP_STOR_CD
                UNION ALL
                -- 307 : 기프티쇼 수수료, 308 : 기프티콘 수수료, 309 : 아이넘버 수수료, 310 : 금액상품권(갤럭시아) 수수료, 311 : M12 수수료
                SELECT  '1000'                                              AS CD_COMPANY
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER_ORIGIN
                     ,  S.ERP_STOR_CD                                       AS CD_PARTNER
                     ,  '1'                                                 AS NO_POS
                     ,  ML.SALE_DT                                          AS DT_SALE
                     ,  S.ERP_STOR_CD||ML.SALE_DT||LPAD('1', 20 - LENGTH(S.ERP_STOR_CD||ML.SALE_DT), '0')   AS SLIP_NO
                     ,  '1'                                                 AS NO_CONFIRM
                     ,  'POS'                                               AS FG_SYSTEM
                     ,  CASE WHEN ML.MOBILE_DIV = '72' THEN '307'
                             WHEN ML.MOBILE_DIV = '71' THEN '308'
                             WHEN ML.MOBILE_DIV = '73' THEN '309'
                             WHEN ML.MOBILE_DIV = '77' THEN '310'
                             WHEN ML.MOBILE_DIV = '76' THEN '311'
                        END                                                 AS CD_COLUMN
                     ,  0                                                   AS AM_SALE
                     ,  SUM(CASE WHEN ML.SALE_DIV = '1' THEN NVL(ML.M_SALE_C, 0) ELSE -1*NVL(ML.M_SALE_C, 0) END)   AS AM_PAYMENT
                     ,  0                                                   AS AM_DC
                     ,  0                                                   AS AM_VAT
                     ,  ''                                                  AS DC_RMK
                     ,  'POS'                                               AS ID_INSERT
                     ,  TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')                AS DTS_INSERT
                     ,  MAX(SO.SALES_TIME)                                  AS SALES_TIME
                     ,  'N'                                                 AS ERP_IF_YN
                     ,  NULL                                                AS ERP_IF_DT
                  FROM  MOBILE_LOG  ML
                     ,  STORE       S
                     ,  (
                            SELECT  COMP_CD
                                 ,  YMD             AS SALE_DT
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  MAX(EVALU_TM)   AS SALES_TIME
                              FROM  STORE_OC
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  BRAND_CD    = ${SCH_BRAND_CD}
                               AND  STOR_CD     = ${SCH_STOR_CD}
                               AND  YMD         BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                               AND  JOB_DIV     IN ('200', '201')
                             GROUP  BY COMP_CD, YMD, BRAND_CD, STOR_CD
                        )           SO
                 WHERE  ML.COMP_CD  = S.COMP_CD
                   AND  ML.BRAND_CD = S.BRAND_CD
                   AND  ML.STOR_CD  = S.STOR_CD
                   AND  ML.COMP_CD  = SO.COMP_CD
                   AND  ML.SALE_DT  = SO.SALE_DT
                   AND  ML.BRAND_CD = SO.BRAND_CD
                   AND  ML.STOR_CD  = SO.STOR_CD
                   AND  ML.COMP_CD  = ${SCH_COMP_CD}
                   AND  ML.BRAND_CD = ${SCH_BRAND_CD}
                   AND  ML.STOR_CD  = ${SCH_STOR_CD}
                   AND  ML.SALE_DT  BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
                   AND  ML.MOBILE_DIV IN ('71', '72', '73', '76', '77')
                   AND  ML.USE_YN   = 'Y'
                   AND  EXISTS      (
                                        SELECT  1
                                          FROM  SALE_ST
                                         WHERE  COMP_CD     = ML.COMP_CD
                                           AND  SALE_DT     = ML.SALE_DT
                                           AND  BRAND_CD    = ML.BRAND_CD
                                           AND  STOR_CD     = ML.STOR_CD
                                           AND  POS_NO      = ML.POS_NO
                                           AND  BILL_NO     = ML.BILL_NO
                                           AND  PAY_DIV     = ML.MOBILE_DIV
                                           AND  APPR_DT     = ML.APPR_DT
                                           AND  APPR_TM     = ML.APPR_TM
                                    )
                 GROUP  BY ML.COMP_CD, ML.SALE_DT, S.ERP_STOR_CD, ML.MOBILE_DIV
            )
]]></query>

<query name='SA_FRAN_POSLINK_SALEL_I'><![CDATA[
    INSERT  INTO NEOE.SA_FRAN_POSLINK_SALEL
    (
            CD_COMPANY
         ,  CD_PARTNER_ORIGIN
         ,  CD_PARTNER
         ,  NO_POS
         ,  DT_SALE
         ,  SLIP_NO
         ,  SLIP_LINE
         ,  NO_CONFIRM
         ,  FG_SYSTEM
         ,  CD_COLUMN
         ,  AM_SALE
         ,  AM_PAYMENT
         ,  AM_DC
         ,  AM_VAT
         ,  DC_RMK
         ,  ID_INSERT
         ,  DTS_INSERT
         ,  SALES_TIME
         ,  CD_USERDEF1
         ,  CD_USERDEF2
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CD_PARTNER_ORIGIN}
         ,  ${CD_PARTNER}
         ,  ${NO_POS}
         ,  ${DT_SALE}
         ,  ${SLIP_NO}
         ,  ${SLIP_LINE}
         ,  ${NO_CONFIRM}
         ,  ${FG_SYSTEM}
         ,  ${CD_COLUMN}
         ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${AM_SALE}, '0') = '' THEN '0' ELSE ISNULL(${AM_SALE}, '0') END)
         ,  ABS(CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${AM_PAYMENT}, '0') = '' THEN '0' ELSE ISNULL(${AM_PAYMENT}, '0') END))
         ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${AM_DC}, '0') = '' THEN '0' ELSE ISNULL(${AM_DC}, '0') END)
         ,  CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${AM_VAT}, '0') = '' THEN '0' ELSE ISNULL(${AM_VAT}, '0') END)
         ,  ${DC_RMK}
         ,  ${ID_INSERT}
         ,  ${DTS_INSERT}
         ,  ${SALES_TIME}
         ,  CASE WHEN CONVERT(NUMERIC(17, 4), CASE WHEN ISNULL(${AM_PAYMENT}, '0') = '' THEN '0' ELSE ISNULL(${AM_PAYMENT}, '0') END) >= 0 THEN 'N' ELSE 'Y' END
         ,  'Y'
    )
]]></query>

<query name='ERP_SA_FRAN_POSLINK_SALEL_C'><![CDATA[
    UPDATE  ERP_SA_FRAN_POSLINK_SALEL
       SET  ERP_IF_YN   = ${UPD_ERP_IF_YN}
         ,  ERP_IF_DT   = CASE WHEN ${UPD_ERP_IF_YN} = 'Y' THEN SYSDATE ELSE NULL END
     WHERE  CD_COMPANY  = '1000'
       AND  CD_PARTNER  = ${SCH_ERP_STOR_CD}
       AND  DT_SALE     BETWEEN ${SCH_PROC_YM}||'01' AND ${SCH_PROC_YM}||'31'
       AND  ERP_IF_YN   = ${SCH_ERP_IF_YN}
]]></query>

<query name='V_HR_Z_HLY_HUANRPT_A_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.V_HR_Z_HLY_HUANRPT_A
     WHERE  CD_COMPANY  = '1000'
       AND  (DTS_INSERT >= ${SCH_LAST_DATE} OR DTS_UPDATE >= ${SCH_LAST_DATE})
]]></query>

<query name='ERP_V_HR_Z_HLY_HUANRPT_A_I'><![CDATA[
    INSERT  INTO ERP_V_HR_Z_HLY_HUANRPT_A
    (
            CD_COMPANY
         ,  CD_BIZAREA
         ,  NO_EMP
         ,  DT_AN
         ,  CD_ANCODE
         ,  BEFAN_CD_BIZAREA
         ,  BEFAN_NM_BIZAREA
         ,  BEFAN_CD_DEPT
         ,  BEFAN_NM_DEPT
         ,  AFTAN_CD_BIZAREA
         ,  AFTAN_NM_BIZAREA
         ,  AFTAN_CD_DEPT
         ,  AFTAN_NM_DEPT
         ,  TP_AN
         ,  CD_INCOM
         ,  DTS_INSERT
         ,  ID_INSERT
         ,  DTS_UPDATE
         ,  ID_UPDATE
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CD_BIZAREA}
         ,  ${NO_EMP}
         ,  ${DT_AN}
         ,  ${CD_ANCODE}
         ,  ${BEFAN_CD_BIZAREA}
         ,  ${BEFAN_NM_BIZAREA}
         ,  ${BEFAN_CD_DEPT}
         ,  ${BEFAN_NM_DEPT}
         ,  ${AFTAN_CD_BIZAREA}
         ,  ${AFTAN_NM_BIZAREA}
         ,  ${AFTAN_CD_DEPT}
         ,  ${AFTAN_NM_DEPT}
         ,  ${TP_AN}
         ,  ${CD_INCOM}
         ,  ${DTS_INSERT}
         ,  ${ID_INSERT}
         ,  ${DTS_UPDATE}
         ,  ${ID_UPDATE}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='DOS_CHECK_STORE_Q'><![CDATA[
    SELECT  CL.COMP_CD
         ,  CL.NOTICE_TP
         ,  CL.CHARGE_YM
         ,  CL.BRAND_CD
         ,  CL.STOR_CD
         ,  CL.CHARGE_SEQ
         ,  CL.NOTICE_DT
         ,  '1000'          AS CD_COMPANY
         ,  S.ERP_STOR_CD   AS CD_PARTNER
      FROM  COC_CHECK_LOG   CL
         ,  STORE           S
     WHERE  CL.COMP_CD      = S.COMP_CD
       AND  CL.BRAND_CD     = S.BRAND_CD
       AND  CL.STOR_CD      = S.STOR_CD
       AND  CL.COMP_CD      = ${SCH_COMP_CD}
       AND  CL.NOTICE_TP    = '2'
       AND  CL.CTRL_YN      = 'Y'
       AND  CL.CHARGE_YM    = (
                                SELECT  MAX(CHARGE_YM)
                                  FROM  COC_CHECK_LOG
                                 WHERE  COMP_CD     = CL.COMP_CD
                                   AND  NOTICE_TP   = CL.NOTICE_TP
                                   AND  BRAND_CD    = CL.BRAND_CD
                                   AND  STOR_CD     = CL.STOR_CD
                              )
       AND  CL.CHARGE_SEQ   = (
                                SELECT  MAX(CHARGE_SEQ)
                                  FROM  COC_CHECK_LOG
                                 WHERE  COMP_CD     = CL.COMP_CD
                                   AND  NOTICE_TP   = CL.NOTICE_TP
                                   AND  CHARGE_YM   = CL.CHARGE_YM
                                   AND  BRAND_CD    = CL.BRAND_CD
                                   AND  STOR_CD     = CL.STOR_CD
                              )
]]></query>

<query name='V_SA_Z_HLY_FRAN_AFTDEPOSIT_S_C'><![CDATA[
    SELECT  YYYYMM          AS CHARGE_YM
         ,  FG_ORDER_CHA    AS CHARGE_SEQ
      FROM  NEOE.V_SA_Z_HLY_FRAN_AFTDEPOSIT_S
     WHERE  CD_COMPANY      = ${SCH_CD_COMPANY}
       AND  CD_PARTNER      = ${SCH_CD_PARTNER}
       AND  YYYYMM          >= ${SCH_CHARGE_YM}
       AND  CONTROL_OT      = 'N'
     GROUP  BY YYYYMM, FG_ORDER_CHA
]]></query>

<query name='COC_CHECK_LOG_U'><![CDATA[
    UPDATE  COC_CHECK_LOG
       SET  CTRL_YN         = 'N'
         ,  DOS_CLOSE_DT    = TO_CHAR(SYSDATE, 'YYYYMMDD')
         ,  UPD_DT          = SYSDATE
     WHERE  COMP_CD         = ${COMP_CD}
       AND  NOTICE_TP       = ${NOTICE_TP}
       AND  CHARGE_YM       = ${CHARGE_YM}
       AND  BRAND_CD        = ${BRAND_CD}
       AND  STOR_CD         = ${STOR_CD}
       AND  CHARGE_SEQ      = ${CHARGE_SEQ}
       AND  NOTICE_DT       = ${NOTICE_DT}
]]></query>

<query name='ATTD_CONFIRM_016_Q'><![CDATA[
    SELECT  C.COMP_CD
         ,  C.ATTD_YM
         ,  C.BRAND_CD
         ,  C.STOR_CD
         ,  C.CONTRACT_DIV
      FROM  ATTD_CONFIRM_016    C
         ,  ATTD_PAY_HOLLYS     P
         ,  STORE               S
         ,  STORE_USER          U
     WHERE  C.COMP_CD   = P.COMP_CD
       AND  C.BRAND_CD  = P.BRAND_CD
       AND  C.STOR_CD   = P.STOR_CD
       AND  C.ATTD_YM   = P.ATTD_YM
       AND  C.COMP_CD   = S.COMP_CD
       AND  C.BRAND_CD  = S.BRAND_CD
       AND  C.STOR_CD   = S.STOR_CD
       AND  P.COMP_CD   = U.COMP_CD
       AND  P.BRAND_CD  = U.BRAND_CD
       AND  P.STOR_CD   = U.STOR_CD
       AND  P.USER_ID   = U.USER_ID
       AND  C.COMP_CD   = ${SCH_COMP_CD}
       AND  C.ATTD_YM   = NVL(${SCH_YYYYMM}, TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYYMM'))
       AND  C.HQ_CONFIRM_YN = 'Y'
       AND  (
                (C.CONTRACT_DIV = '01' AND U.EMP_DIV <> '340')
                OR
                (C.CONTRACT_DIV = '02' AND U.EMP_DIV = '340')
            )
       AND  P.ERP_IF_YN = 'N'
       AND (
            S.STOR_TP   = '10'
            OR 
            EXISTS (
                    SELECT  1
                    FROM    ATTD_ETC_STORE AES
                    WHERE   AES.COMP_CD   = S.COMP_CD
                    AND     AES.BRAND_CD  = S.BRAND_CD
                    AND     AES.STOR_CD   = S.STOR_CD
                    AND     AES.START_YM <= TO_CHAR(SYSDATE, 'YYYYMM')
                    AND     AES.USE_YN    = 'Y'
                   )
           )
     GROUP  BY C.COMP_CD
         ,  C.ATTD_YM
         ,  C.BRAND_CD
         ,  C.STOR_CD
         ,  C.CONTRACT_DIV
]]></query>

<query name='ATTD_PAY_HOLLYS_Q'><![CDATA[
    SELECT  P.*
         ,  '1000'              AS CD_COMPANY
         ,  '1100'              AS CD_BIZAREA
         ,  NULL                AS CD_DEPT
         ,  CASE WHEN U.EMP_DIV <> '340' THEN '001'
                 ELSE '002'
            END                 AS CD_EMP
         ,  ${SCH_CONTRACT_DIV} AS CONTRACT_DIV
      FROM  ATTD_PAY_HOLLYS     P
         ,  STORE_USER          U
     WHERE  P.COMP_CD   = U.COMP_CD
       AND  P.BRAND_CD  = U.BRAND_CD
       AND  P.STOR_CD   = U.STOR_CD
       AND  P.USER_ID   = U.USER_ID
       AND  P.COMP_CD   = ${SCH_COMP_CD}
       AND  P.BRAND_CD  = ${SCH_BRAND_CD}
       AND  P.STOR_CD   = ${SCH_STOR_CD}
       AND  P.ATTD_YM   = ${SCH_ATTD_YM}
       AND  (
                (${SCH_CONTRACT_DIV} = '01' AND U.EMP_DIV <> '340')
                OR
                (${SCH_CONTRACT_DIV} = '02' AND U.EMP_DIV = '340')
            )
]]></query>

<query name='HR_Z_HLY_WTMTOT_I'><![CDATA[
    MERGE   NEOE.HR_WTMTOT    AS E
    USING   (
                SELECT  ${CD_COMPANY}   AS CD_COMPANY
                     ,  ${CD_BIZAREA}   AS CD_BIZAREA
                     ,  ${CD_DEPT}      AS CD_DEPT
                     ,  ${NO_EMP}       AS NO_EMP
                     ,  ${YM}           AS YM
                     ,  ${CD_WCODE}     AS CD_WCODE
                     ,  ${CD_EMP}       AS CD_EMP
                     ,  CONVERT(NUMERIC(6, 0), ${TM_NORMAL})    AS TM_NORMAL
                     ,  CONVERT(NUMERIC(6, 0), ${TM_NIGHT})     AS TM_NIGHT
                     ,  CONVERT(NUMERIC(6, 0), ${TM_ALLNIG})    AS TM_ALLNIG
                     ,  CONVERT(CHAR(8), GETDATE(), 112) + REPLACE(CONVERT(VARCHAR, GETDATE(), 108), ':', '') AS DTS_INSERT
                     ,  ${ID_INSERT}    AS ID_INSERT
            )   P
        ON  E.CD_COMPANY    = P.CD_COMPANY
       AND  E.CD_BIZAREA    = P.CD_BIZAREA
       AND  E.NO_EMP        = P.NO_EMP
       AND  E.YM            = P.YM
       AND  E.CD_WCODE      = P.CD_WCODE
    WHEN MATCHED THEN
        UPDATE
        SET     E.TM_NORMAL   = E.TM_NORMAL + P.TM_NORMAL
             ,  E.TM_NIGHT    = E.TM_NIGHT  + P.TM_NIGHT
             ,  E.TM_ALLNIG   = E.TM_ALLNIG + P.TM_ALLNIG
             ,  E.DTS_UPDATE  = P.DTS_INSERT
             ,  E.ID_UPDATE   = P.ID_INSERT
    WHEN NOT MATCHED THEN
        INSERT
        (
                CD_COMPANY
             ,  CD_BIZAREA
             ,  CD_DEPT
             ,  NO_EMP
             ,  YM
             ,  CD_WCODE
             ,  CD_EMP
             ,  TM_NORMAL
             ,  TM_NIGHT
             ,  TM_ALLNIG
             ,  DTS_INSERT
             ,  ID_INSERT
        ) VALUES (
                P.CD_COMPANY
             ,  P.CD_BIZAREA
             ,  P.CD_DEPT
             ,  P.NO_EMP
             ,  P.YM
             ,  P.CD_WCODE
             ,  P.CD_EMP
             ,  P.TM_NORMAL
             ,  P.TM_NIGHT
             ,  P.TM_ALLNIG
             ,  P.DTS_INSERT
             ,  P.ID_INSERT
        );
]]></query>

<query name='HR_Z_HLY_PFLUCT_I'><![CDATA[
    MERGE   NEOE.HR_PFLUCT    AS E
    USING   (
                SELECT  ${CD_COMPANY}   AS CD_COMPANY
                     ,  ${YM}           AS YM
                     ,  ${NO_SEQ}       AS NO_SEQ
                     ,  ${NO_EMP}       AS NO_EMP
                     ,  ${CD_FLUCT}     AS CD_FLUCT
                     ,  CONVERT(NUMERIC(17, 4), ${AM_FPAY})  AS AM_FPAY
                     ,  CONVERT(CHAR(8), GETDATE(), 112) + REPLACE(CONVERT(VARCHAR, GETDATE(), 108), ':', '')   AS DTS_INSERT
                     ,  ${ID_INSERT}    AS ID_INSERT
            )   P
        ON  E.CD_COMPANY    = P.CD_COMPANY
       AND  E.YM            = P.YM
       AND  E.NO_SEQ        = P.NO_SEQ
       AND  E.NO_EMP        = P.NO_EMP
       AND  E.CD_FLUCT      = P.CD_FLUCT
    WHEN NOT MATCHED THEN
        INSERT
        (
                CD_COMPANY
             ,  YM
             ,  NO_SEQ
             ,  NO_EMP
             ,  CD_FLUCT
             ,  AM_FPAY
             ,  DTS_INSERT
             ,  ID_INSERT
        ) VALUES (
                P.CD_COMPANY
             ,  P.YM
             ,  P.NO_SEQ
             ,  P.NO_EMP
             ,  P.CD_FLUCT
             ,  P.AM_FPAY
             ,  P.DTS_INSERT
             ,  P.ID_INSERT
        );
]]></query>

<query name='ATTD_PAY_HOLLYS_U'><![CDATA[
    UPDATE  ATTD_PAY_HOLLYS
       SET  ERP_IF_YN       = 'Y'
         ,  ERP_IF_DT       = TO_CHAR(SYSDATE, 'YYYYMMDD')
     WHERE  COMP_CD         = ${COMP_CD}
       AND  ATTD_YM         = ${ATTD_YM}
       AND  BRAND_CD        = ${BRAND_CD}
       AND  STOR_CD         = ${STOR_CD}
       AND  USER_ID         = ${USER_ID}
]]></query>

<query name='ATTD_CONFIRM_016_U'><![CDATA[
    UPDATE  ATTD_CONFIRM_016
       SET  ERP_SEND_YN     = 'Y'
     WHERE  COMP_CD         = ${COMP_CD}
       AND  ATTD_YM         = ${ATTD_YM}
       AND  BRAND_CD        = ${BRAND_CD}
       AND  STOR_CD         = ${STOR_CD}
       AND  CONTRACT_DIV    = ${CONTRACT_DIV}
]]></query>

<query name='MAIL_RECEIVE_Q'><![CDATA[
    SELECT  *
      FROM  MAIL_RECIVE
     WHERE  COMP_CD     = ${SCH_COMP_CD}
       AND  USE_YN      = 'Y'
]]></query>

<query name='COC_CHECK_LOG_Q'><![CDATA[
    SELECT  CL.STOR_CD
         ,  S.STOR_NM
         ,  S.SV_USER_ID
         ,  U.USER_NM       AS SV_USER_NM
         ,  TO_CHAR(TO_DATE(CL.NOTICE_DT, 'YYYYMMDD'), 'YYYY-MM-DD')    AS NOTICE_DT
         ,  U.E_MAIL
      FROM  COC_CHECK_LOG   CL
         ,  STORE           S
         ,  HQ_USER         U
     WHERE  CL.COMP_CD      = S.COMP_CD
       AND  CL.BRAND_CD     = S.BRAND_CD
       AND  CL.STOR_CD      = S.STOR_CD
       AND  S.COMP_CD       = U.COMP_CD(+)
       AND  S.SV_USER_ID    = U.USER_ID(+)
       AND  CL.COMP_CD      = ${SCH_COMP_CD}
       AND  CL.NOTICE_TP    = '2'
       AND  CL.CTRL_YN      = ${SCH_CTRL_YN}
       AND  TO_CHAR(CL.UPD_DT, 'YYYYMMDDHH24MISS') >= ${SCH_LAST_DATE}
]]></query>

<query name='ORDER_DELIVERY_WEEK_Q'><![CDATA[
    SELECT  DR.CD_COMPANY
         ,  DR.CD_PARTNER
         ,  DW.WEEK_CD                                  AS CD_WEEK
         ,  CASE WHEN DR.YN_USE = 'Y' THEN DW.DLV_YN
                 ELSE 'N'
            END                                         AS YN_DLV
      FROM  NEOE.V_SA_DELIVERY_ROUTING  DR
      JOIN  (
                SELECT  CD_COMPANY
                     ,  CD_COURSE
                     ,  '1'         AS WEEK_CD
                     ,  SUN         AS DLV_YN           
                  FROM  NEOE.V_SA_Z_FRAN_DELIVERY_MST_WEEK
                 WHERE  CD_COMPANY  = '1000'
                UNION ALL
                SELECT  CD_COMPANY
                     ,  CD_COURSE
                     ,  '2'         AS WEEK_CD
                     ,  MON         AS DLV_YN           
                  FROM  NEOE.V_SA_Z_FRAN_DELIVERY_MST_WEEK
                 WHERE  CD_COMPANY  = '1000'
                UNION ALL
                SELECT  CD_COMPANY
                     ,  CD_COURSE
                     ,  '3'         AS WEEK_CD
                     ,  TUE         AS DLV_YN           
                  FROM  NEOE.V_SA_Z_FRAN_DELIVERY_MST_WEEK
                 WHERE  CD_COMPANY  = '1000'
                UNION ALL
                SELECT  CD_COMPANY
                     ,  CD_COURSE
                     ,  '4'         AS WEEK_CD
                     ,  WED         AS DLV_YN           
                  FROM  NEOE.V_SA_Z_FRAN_DELIVERY_MST_WEEK
                 WHERE  CD_COMPANY  = '1000'
                UNION ALL
                SELECT  CD_COMPANY
                     ,  CD_COURSE
                     ,  '5'         AS WEEK_CD
                     ,  THU         AS DLV_YN           
                  FROM  NEOE.V_SA_Z_FRAN_DELIVERY_MST_WEEK
                 WHERE  CD_COMPANY  = '1000'
                UNION ALL
                SELECT  CD_COMPANY
                     ,  CD_COURSE
                     ,  '6'         AS WEEK_CD
                     ,  FRI         AS DLV_YN           
                  FROM  NEOE.V_SA_Z_FRAN_DELIVERY_MST_WEEK
                 WHERE  CD_COMPANY  = '1000'
                UNION ALL
                SELECT  CD_COMPANY
                     ,  CD_COURSE
                     ,  '7'         AS WEEK_CD
                     ,  SAT         AS DLV_YN           
                  FROM  NEOE.V_SA_Z_FRAN_DELIVERY_MST_WEEK
                 WHERE  CD_COMPANY  = '1000'
            )   DW
        ON  DR.CD_COMPANY   = DW.CD_COMPANY
       AND  DR.CD_COURSE    = DW.CD_COURSE
     WHERE  DR.CD_COMPANY   = ${CD_COMPANY}
       AND  DR.CD_PARTNER   = ${CD_PARTNER}
]]></query>

<query name='ERP_ORDER_DELIVERY_WEEK_I'><![CDATA[
    INSERT  INTO ERP_ORDER_DELIVERY_WEEK
    (
            CD_COMPANY
         ,  CD_PARTNER
         ,  CD_WEEK
         ,  YN_DLV
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CD_PARTNER}
         ,  ${CD_WEEK}
         ,  ${YN_DLV}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='V_SA_Z_FRAN_DELIVERY_MST_WEEK_Q'><![CDATA[
    SELECT  DW.CD_COMPANY
         ,  DR.CD_PARTNER
         ,  DW.CD_COURSE
         ,  DW.NM_COURSE
         ,  DW.MON
         ,  DW.TUE
         ,  DW.WED
         ,  DW.THU
         ,  DW.FRI
         ,  DW.SAT
         ,  DW.SUN
         ,  DR.YN_USE
         ,  DW.DTS_INSERT
         ,  DW.ID_INSERT
         ,  DW.DTS_UPDATE
         ,  DW.ID_UPDATE
      FROM  NEOE.V_SA_Z_FRAN_DELIVERY_MST_WEEK  DW
      JOIN  NEOE.V_SA_DELIVERY_ROUTING          DR
        ON  DW.CD_COMPANY   = DR.CD_COMPANY
       AND  DW.CD_COURSE    = DR.CD_COURSE
     WHERE  DW.CD_COMPANY   = '1000'
]]></query>

<query name='ERP_SA_FRAN_DELIVERY_MST_WEEK_I'><![CDATA[
    INSERT  INTO ERP_SA_FRAN_DELIVERY_MST_WEEK
    (
            CD_COMPANY
         ,  CD_PARTNER
         ,  CD_COURSE
         ,  NM_COURSE
         ,  MON
         ,  TUE
         ,  WED
         ,  THU
         ,  FRI
         ,  SAT
         ,  SUN
         ,  YN_USE
         ,  DTS_INSERT
         ,  ID_INSERT
         ,  DTS_UPDATE
         ,  ID_UPDATE
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${CD_PARTNER}
         ,  ${CD_COURSE}
         ,  ${NM_COURSE}
         ,  ${MON}
         ,  ${TUE}
         ,  ${WED}
         ,  ${THU}
         ,  ${FRI}
         ,  ${SAT}
         ,  ${SUN}
         ,  ${YN_USE}
         ,  ${DTS_INSERT}
         ,  ${ID_INSERT}
         ,  ${DTS_UPDATE}
         ,  ${ID_UPDATE}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='ITEM_STORE_COST_U'><![CDATA[
     MERGE  INTO ITEM_STORE TT
     USING  (
                SELECT  S.COMP_CD
                     ,  S.BRAND_CD
                     ,  S.STOR_CD
                     ,  O.ITEM_CD
                     ,  '01'                            AS PRC_DIV
                     ,  TO_CHAR(SYSDATE-1, 'YYYYMMDD')  AS START_DT
                     ,  '99991231'                      AS CLOSE_DT
                     ,  0                               AS PRICE
                     ,  NULL                            AS VENDOR_CD
                     ,  O.USE_YN                        AS USE_YN
                  FROM  STORE_CMS_IMSI      C
                     ,  STORE               S
                     ,  ITEM_STORE_ORDER    O
                 WHERE  C.COMP_CD       = S.COMP_CD
                   AND  C.BRAND_CD      = S.BRAND_CD
                   AND  C.STOR_CD       = S.STOR_CD
                   AND  S.COMP_CD       = O.COMP_CD
                   AND  S.ERP_ITEM_GRP  = O.ERP_ITEM_GRP
                   AND  C.COMP_CD       = ${COMP_CD}
                   AND  C.USE_YN        = 'Y'
                   AND  S.USE_YN        = 'Y'
                   AND  O.USE_YN        = 'Y'
   
            )   ST
       ON   (
                    TT.COMP_CD      = ST.COMP_CD
               AND  TT.BRAND_CD     = ST.BRAND_CD
               AND  TT.STOR_CD      = ST.STOR_CD
               AND  TT.ITEM_CD      = ST.ITEM_CD
               AND  TT.PRC_DIV      = ST.PRC_DIV
               AND  TT.START_DT     = ST.START_DT
            )
    WHEN MATCHED THEN
        UPDATE
           SET  USE_YN      = ST.USE_YN
             ,  UPD_DT      = SYSDATE
             ,  UPD_USER    = 'ADMIN'
    WHEN NOT MATCHED THEN
        INSERT 
        (   
                COMP_CD
             ,  BRAND_CD
             ,  STOR_CD
             ,  ITEM_CD
             ,  PRC_DIV
             ,  START_DT
             ,  CLOSE_DT
             ,  PRICE
             ,  VENDOR_CD
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER
        ) VALUES (
                ST.COMP_CD
             ,  ST.BRAND_CD
             ,  ST.STOR_CD
             ,  ST.ITEM_CD
             ,  ST.PRC_DIV
             ,  ST.START_DT
             ,  ST.CLOSE_DT
             ,  ST.PRICE
             ,  ST.VENDOR_CD
             ,  ST.USE_YN
             ,  SYSDATE
             ,  'ADMIN'
             ,  SYSDATE
             ,  'ADMIN'
        )
]]></query>

<query name='ORDER_CTRL_DAY_U'><![CDATA[
    MERGE  INTO ORDER_CTRL_DAY  TT
    USING  (
                SELECT  W.COMP_CD
                     ,  C.YMD           AS CTRL_DT
                     ,  W.BRAND_CD
                     ,  W.STOR_CD
                     ,  '0000'          AS START_TM
                     ,  '0001'          AS CLOSE_TM
                     ,  W.USE_YN
                     ,  SYSDATE         AS INST_DT
                     ,  'SYSTEM'        AS INST_USER
                     ,  SYSDATE         AS UPD_DT
                     ,  'SYSTEM'        AS UPD_USER
                  FROM  CALENDAR            C
                     ,  (
                            SELECT  COMP_CD
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  '1'         AS WEEK
                                 ,  DLV_SUN     AS USE_YN
                              FROM  ORDER_CTRL_WEEK
                             WHERE  COMP_CD     = ${COMP_CD}
                            UNION ALL
                            SELECT  COMP_CD
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  '2'         AS WEEK
                                 ,  DLV_MON     AS USE_YN
                              FROM  ORDER_CTRL_WEEK
                             WHERE  COMP_CD     = ${COMP_CD}
                            UNION ALL
                            SELECT  COMP_CD
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  '3'         AS WEEK
                                 ,  DLV_TUE     AS USE_YN
                              FROM  ORDER_CTRL_WEEK
                             WHERE  COMP_CD     = ${COMP_CD}
                            UNION ALL
                            SELECT  COMP_CD
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  '4'         AS WEEK
                                 ,  DLV_WED     AS USE_YN
                              FROM  ORDER_CTRL_WEEK
                             WHERE  COMP_CD     = ${COMP_CD}
                            UNION ALL
                            SELECT  COMP_CD
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  '5'         AS WEEK
                                 ,  DLV_THU     AS USE_YN
                              FROM  ORDER_CTRL_WEEK
                             WHERE  COMP_CD     = ${COMP_CD}
                            UNION ALL
                            SELECT  COMP_CD
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  '6'         AS WEEK
                                 ,  DLV_FRI     AS USE_YN
                              FROM  ORDER_CTRL_WEEK
                             WHERE  COMP_CD     = ${COMP_CD}
                            UNION ALL
                            SELECT  COMP_CD
                                 ,  BRAND_CD
                                 ,  STOR_CD
                                 ,  '7'         AS WEEK
                                 ,  DLV_SAT     AS USE_YN
                              FROM  ORDER_CTRL_WEEK
                             WHERE  COMP_CD     = ${COMP_CD}
                        )   W
                 WHERE  TO_CHAR(TO_DATE(C.YMD, 'YYYYMMDD'), 'D') = W.WEEK
                   AND  C.YMD BETWEEN TO_CHAR(SYSDATE, 'YYYYMMDD') AND TO_CHAR(SYSDATE + 14, 'YYYYMMDD')
            )   ST
        ON  (
                    TT.COMP_CD      = ST.COMP_CD
               AND  TT.CTRL_DT      = ST.CTRL_DT
               AND  TT.BRAND_CD     = ST.BRAND_CD
               AND  TT.STOR_CD      = ST.STOR_CD
            )
    WHEN MATCHED THEN
        UPDATE
           SET  USE_YN      = ST.USE_YN
             ,  UPD_DT      = ST.UPD_DT
             ,  UPD_USER    = ST.UPD_USER
    WHEN NOT MATCHED THEN
        INSERT 
        (   
                COMP_CD
             ,  CTRL_DT
             ,  BRAND_CD
             ,  STOR_CD
             ,  START_TM
             ,  CLOSE_TM
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER
        ) VALUES (
                ST.COMP_CD
             ,  ST.CTRL_DT
             ,  ST.BRAND_CD
             ,  ST.STOR_CD
             ,  ST.START_TM
             ,  ST.CLOSE_TM
             ,  ST.USE_YN
             ,  ST.INST_DT
             ,  ST.INST_USER
             ,  ST.UPD_DT
             ,  ST.UPD_USER
        )
]]></query>

<query name='ITEM_Q'><![CDATA[
    SELECT  ITEM_CD
         ,  NVL(${SCH_YYYYMM}, TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYYMM'))      AS YYYYMM
      FROM  ITEM
     WHERE  COMP_CD     = ${SCH_COMP_CD}
       AND  ORD_SALE_DIV IN ('1', '2')
]]></query>

<query name='UP_Z_HLY_MM_AMINVL_S_Q'><![CDATA[
    EXEC NEOE.UP_Z_HLY_MM_AMINVL_S ${SCH_YYYYMM}, ${SCH_CD_ITEM}
]]></query>

<query name='ERP_Z_HLY_MM_AMINVL_I'><![CDATA[
    INSERT  INTO ERP_Z_HLY_MM_AMINVL
    (
            YM_STANDARD
         ,  CD_ITEM
         ,  NM_ITEM
         ,  UNIT_IM
         ,  UM_INV
         ,  TP_PROC
         ,  NM_PROC
         ,  CLS_ITEM
         ,  CLS_ITEM_NM
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${YM_STANDARD}
         ,  ${CD_ITEM}
         ,  ${NM_ITEM}
         ,  ${UNIT_IM}
         ,  ${UM_INV}
         ,  ${TP_PROC}
         ,  ${NM_PROC}
         ,  ${CLS_ITEM}
         ,  ${CLS_ITEM_NM}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='STORE_AS_U'><![CDATA[
    UPDATE  STORE_AS
       SET  PROC_STAT   = CASE WHEN ${ERP_IF_YN} = 'Y' THEN '3' ELSE '2' END
         ,  ERP_IF_YN   = ${ERP_IF_YN}
         ,  ERP_IF_DT   = CASE WHEN ${ERP_IF_YN} = 'Y' THEN SYSDATE ELSE NULL END
         ,  ERP_AS_NO   = ${ERP_AS_NO} 
     WHERE  COMP_CD     = ${COMP_CD}
       AND  (${AS_DT}    IS NULL OR AS_DT    = ${AS_DT})
       AND  (${BRAND_CD} IS NULL OR BRAND_CD = ${BRAND_CD})
       AND  (${STOR_CD}  IS NULL OR STOR_CD  = ${STOR_CD})
       AND  (${AS_SEQ}   IS NULL OR AS_SEQ   = ${AS_SEQ})
       AND  PROC_STAT   = '2'
       AND  ERP_IF_YN   = ${SRC_ERP_IF_YN}
       AND  USE_YN      = 'Y'
]]></query>

<query name='STORE_AS_Q'><![CDATA[
    SELECT  A.COMP_CD
         ,  '1000'              AS CD_COMPANY
         ,  A.AS_DT
         ,  A.BRAND_CD
         ,  A.STOR_CD
         ,  A.AS_SEQ
         ,  A.STOR_CD           AS CD_FRANCHISE
         ,  S.ERP_STOR_CD       AS CD_PARTNER
         ,  A.REQ_HP            AS NO_TEL
         ,  A.REQ_DIV           AS CD_L
         ,  A.AS_DIV            AS CD_M
         ,  A.EMGC_YN           AS YN_URG
         ,  A.SUBJECT           AS SUBJECT
         ,  CASE WHEN A.REQ_DIV IN ('001', '002', '003') THEN 'Y' ELSE 'N' END  AS YN_EST
         ,  DBMS_LOB.SUBSTR(A.SENTENCE, 1000, 1)    AS DC_RECEIPT
         ,  '001'               AS FG_AS
         ,  TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')    AS DTS_INSERT
         ,  NVL(IU.ERP_USER_ID, 'POS')              AS ID_INSERT  
         ,  'POS'               AS REG_ROUT
      FROM  STORE_AS    A
         ,  STORE       S
         ,  (
                SELECT  COMP_CD
                     ,  USER_ID
                     ,  MAX(ERP_USER_ID)    AS ERP_USER_ID
                  FROM  (  
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  ERP_USER_ID
                              FROM  HQ_USER
                             WHERE  COMP_CD = ${SCH_COMP_CD}
                               AND  USE_YN  = 'Y'
                            UNION ALL
                            SELECT  COMP_CD
                                 ,  USER_ID
                                 ,  ERP_USER_ID
                              FROM  STORE_USER
                             WHERE  COMP_CD     = ${SCH_COMP_CD}
                               AND  USE_YN      = 'Y'
                        )
                 GROUP  BY COMP_CD, USER_ID
            )   IU
     WHERE  A.COMP_CD   = S.COMP_CD
       AND  A.BRAND_CD  = S.BRAND_CD
       AND  A.STOR_CD   = S.STOR_CD
       AND  A.COMP_CD   = IU.COMP_CD(+)
       AND  A.INST_USER = IU.USER_ID(+)
       AND  A.COMP_CD   = ${SCH_COMP_CD}
       AND  (${SCH_AS_DT} IS NULL OR A.AS_DT = ${SCH_AS_DT})
       AND  A.PROC_STAT = '2'
       AND  A.ERP_IF_YN = 'R'
       AND  A.USE_YN    = 'Y'
]]></query>

<query name='NO_AS_Q'><![CDATA[
    SELECT  'PAS' + REPLICATE('0', 11 - LEN(ISNULL(MAX(CONVERT(INT, SUBSTRING(NO_AS, 4, LEN(NO_AS)))), 0) + 1)) + CONVERT(VARCHAR(7), ISNULL(MAX(CONVERT(INT, SUBSTRING(NO_AS, 4, LEN(NO_AS)))), 0) + 1) AS NO_AS
      FROM  NEOE.SA_FRAN_HLY_AS_REQ_MNG
     WHERE  CD_COMPANY   = '1000'
       AND  NO_AS        LIKE 'PAS' + '%'
]]></query>

<query name='SA_FRAN_HLY_AS_REQ_MNG_I'><![CDATA[
    INSERT  INTO NEOE.SA_FRAN_HLY_AS_REQ_MNG
    (
            CD_COMPANY
         ,  NO_AS
         ,  DT_AS
         ,  CD_FRANCHISE
         ,  CD_PARTNER
         ,  NO_TEL
         ,  CD_L
         ,  CD_M
         ,  YN_URG
         ,  YN_EST
         ,  DC_RECEIPT
         ,  FG_AS
         ,  FG_PARTNER
         ,  FG_PAY_S
         ,  YN_CLS_S
         ,  YN_CLS_M
         ,  DTS_INSERT
         ,  ID_INSERT
         ,  REG_ROUT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${NO_AS}
         ,  ${DT_AS}
         ,  ${CD_FRANCHISE}
         ,  ${CD_PARTNER}
         ,  ${NO_TEL}
         ,  ${CD_L}
         ,  ${CD_M}
         ,  ${YN_URG}
         ,  ${YN_EST}
         ,  ${DC_RECEIPT}
         ,  ${FG_AS}
         ,  ''
         ,  ''
         ,  'N'
         ,  'N'
         ,  ${DTS_INSERT}
         ,  ${ID_INSERT}
         ,  ${REG_ROUT}
    )
]]></query>

<query name='SA_FRAN_HLY_AS_Q'><![CDATA[
    SELECT  *
      FROM  NEOE.SA_FRAN_HLY_AS_VIEW
     WHERE  CD_COMPANY  = '1000'
       AND  (DTS_INSERT >= ${SCH_LAST_DATE} OR DTS_UPDATE >= ${SCH_LAST_DATE})
]]></query>

<query name='ERP_SA_FRAN_HLY_AS_I'><![CDATA[
    INSERT  INTO ERP_SA_FRAN_HLY_AS
    (
            CD_COMPANY
         ,  DT_AS
         ,  CD_FRANCHISE
         ,  CD_PARTNER
         ,  NO_AS
         ,  NO_TEL
         ,  CD_L
         ,  CD_M
         ,  YN_URG
         ,  NO_EMP
         ,  NM_PARTNER_AS
         ,  DC_RECEIPT
         ,  DC_RESULT_S
         ,  DC_RESULT_H
         ,  DTS_INSERT
         ,  ID_INSERT
         ,  DTS_UPDATE
         ,  ID_UPDATE
         ,  PROC_YN
         ,  INST_DT
    ) VALUES (
            ${CD_COMPANY}
         ,  ${DT_AS}
         ,  ${CD_FRANCHISE}
         ,  ${CD_PARTNER}
         ,  ${NO_AS}
         ,  ${NO_TEL}
         ,  ${CD_L}
         ,  ${CD_M}
         ,  ${YN_URG}
         ,  ${NO_EMP}
         ,  ${NM_PARTNER_AS}
         ,  ${DC_RECEIPT}
         ,  ${DC_RESULT_S}
         ,  ${DC_RESULT_H}
         ,  ${DTS_INSERT}
         ,  ${ID_INSERT}
         ,  ${DTS_UPDATE}
         ,  ${ID_UPDATE}
         ,  'N'
         ,  SYSDATE
    )
]]></query>

<query name='STORE_AS_CLOSE_Q'><![CDATA[
    SELECT  A.COMP_CD
         ,  A.AS_DT
         ,  A.BRAND_CD
         ,  A.STOR_CD
         ,  A.AS_SEQ
         ,  A.ERP_AS_NO     AS NO_AS
         ,  A.CLOSE_DT      AS DT_CLS
         ,  S.ERP_STOR_CD   AS CD_PARTNER
      FROM  STORE_AS    A
         ,  STORE       S
     WHERE  A.COMP_CD   = S.COMP_CD
       AND  A.BRAND_CD  = S.BRAND_CD
       AND  A.STOR_CD   = S.STOR_CD
       AND  A.COMP_CD   = ${SCH_COMP_CD}
       AND  A.PROC_STAT = '5'
       AND  A.CMP_IF_YN = 'N'
]]></query>

<query name='SA_FRAN_HLY_AS_REQ_MNG_U'><![CDATA[
    UPDATE  NEOE.SA_FRAN_HLY_AS_REQ_MNG
       SET  DT_CLS      = ${DT_CLS}
     WHERE  CD_COMPANY  = '1000'
       AND  DT_AS       = ${DT_AS}
       AND  CD_PARTNER  = ${CD_PARTNER}
       AND  NO_AS       = ${NO_AS}
]]></query>

<query name='STORE_AS_CLOSE_U'><![CDATA[
    UPDATE  STORE_AS
       SET  CMP_IF_YN   = ${CMP_IF_YN}
         ,  CMP_IF_DT   = CASE WHEN ${CMP_IF_YN} = 'Y' THEN SYSDATE ELSE NULL END
     WHERE  COMP_CD     = ${COMP_CD}
       AND  AS_DT       = ${AS_DT}
       AND  BRAND_CD    = ${BRAND_CD}
       AND  STOR_CD     = ${STOR_CD}
       AND  AS_SEQ      = ${AS_SEQ}
]]></query>

<query name='PAST_ORDER_STORE_Q'><![CDATA[
    SELECT  S.ERP_STOR_CD       AS CD_PARTNER
         ,  MIN(O.DLV_DT)       AS DT_DUEDATE_FR
         ,  MAX(O.DLV_DT)       AS DT_DUEDATE_TO
      FROM  CALENDAR        C
         ,  ORDER_DTV       O
         ,  STORE           S
     WHERE  C.YMD       = O.DLV_DT
       AND  O.COMP_CD   = S.COMP_CD
       AND  O.BRAND_CD  = S.BRAND_CD
       AND  O.STOR_CD   = S.STOR_CD
       AND  C.YMD       = ${SCH_YMD}
       AND  (${SCH_STOR_CD} IS NULL OR O.STOR_CD = ${SCH_STOR_CD})
       AND  O.COMP_CD   = ${SCH_COMP_CD}
       AND  C.CALENDAR_WEEK_NUM >= 9
     GROUP  BY S.ERP_STOR_CD
     ORDER  BY S.ERP_STOR_CD
]]></query>

<query name='PAST_SA_FRAN_POS_Q'><![CDATA[
    EXEC NEOE.UP_Z_HLY_SA_FRAN_POS_S_JINADD ${SCH_CD_PARTNER}, ${SCH_DT_DUEDATE_FR}, ${SCH_DT_DUEDATE_TO}
]]></query>

</SQLResource>