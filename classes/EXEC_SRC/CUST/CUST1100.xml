<?xml version='1.0' encoding='utf-8'?>
<SQLResource version='1'>

<query name='MAIN_Q'><![CDATA[
    SELECT 
            CASE 
               WHEN '@SCH_DATE_GUBUN@' = 'W' THEN    '('||TO_CHAR(TO_DATE( replace(MAX(STD_FR_YMD),'-','') )-1,'WW')||FC_GET_WORDPACK(${SCH_COMP_CD}, ${SCH_LANGUAGE_TP}, 'WEEK_SEQ')||') '||SUBSTR(MAX(STD_FR_YMD),0,4)||'-'||SUBSTR(MAX(STD_FR_YMD),5,2)||'-'||SUBSTR(MAX(STD_FR_YMD),7,2)||'~'||SUBSTR(MAX(STD_TO_YMD),0,4)||'-'||SUBSTR(MAX(STD_TO_YMD),5,2)||'-'||SUBSTR(MAX(STD_TO_YMD),7,2)
               WHEN '@SCH_DATE_GUBUN@' = 'M' THEN   SUBSTR(STD_DT, 0,4) ||FC_GET_WORDPACK(${SCH_COMP_CD}, ${SCH_LANGUAGE_TP}, 'YEAR')||' '||SUBSTR(STD_DT, 5,2)||FC_GET_WORDPACK(${SCH_COMP_CD}, ${SCH_LANGUAGE_TP}, 'MONTH') 
               WHEN '@SCH_DATE_GUBUN@' = 'Q' THEN   SUBSTR(STD_DT, 0,4) ||FC_GET_WORDPACK(${SCH_COMP_CD}, ${SCH_LANGUAGE_TP}, 'YEAR')||' '||SUBSTR(STD_DT, 6,1)||FC_GET_WORDPACK(${SCH_COMP_CD}, ${SCH_LANGUAGE_TP}, 'YEAR_Q')
               WHEN '@SCH_DATE_GUBUN@' = 'H' THEN   SUBSTR(STD_DT, 0,4) ||FC_GET_WORDPACK(${SCH_COMP_CD}, ${SCH_LANGUAGE_TP}, 'YEAR')||' '||DECODE(SUBSTR(STD_DT, 6,1),'1',FC_GET_WORDPACK(${SCH_COMP_CD}, ${SCH_LANGUAGE_TP}, 'YEAR_H1'),FC_GET_WORDPACK(${SCH_COMP_CD}, ${SCH_LANGUAGE_TP}, 'YEAR_H2'))
               WHEN '@SCH_DATE_GUBUN@' = 'Y' THEN   SUBSTR(STD_DT, 0,4) ||FC_GET_WORDPACK(${SCH_COMP_CD}, ${SCH_LANGUAGE_TP}, 'YEAR')
               ELSE 'N/A'
           END                   AS STD_YMD 
		 , SUM( MEMB_P_USE_TOTL_CNT ) + SUM( MEMB_C_USE_TOTL_CNT )  AS  MEMB_ALL_USE_TOTL_CNT
		 , SUM( MEMB_P_USE_STOR_CNT ) + SUM( MEMB_C_USE_STOR_CNT )  AS  MEMB_ALL_USE_STOR_CNT
		 , ROUND(( SUM( MEMB_P_USE_STOR_CNT ) + SUM( MEMB_C_USE_STOR_CNT ) ) / NULLIF( ( SUM( MEMB_P_USE_TOTL_CNT ) + SUM( MEMB_C_USE_TOTL_CNT ) ),0), 3) AS MEMB_ALL_USE_STOR_AVG 
		 , SUM( CUST_P_USE_TOTL_CNT ) + SUM( CUST_C_USE_TOTL_CNT )  AS  CUST_ALL_USE_TOTL_CNT
		 , SUM( CUST_P_USE_STOR_CNT ) + SUM( CUST_C_USE_STOR_CNT )  AS  CUST_ALL_USE_STOR_CNT
		 , ROUND(( SUM( CUST_P_USE_STOR_CNT ) + SUM( CUST_C_USE_STOR_CNT ) ) / NULLIF(( SUM( CUST_P_USE_TOTL_CNT ) + SUM( CUST_C_USE_TOTL_CNT ) ),0), 3) AS CUST_ALL_USE_STOR_AVG
		 , SUM( MEMB_P_USE_TOTL_CNT ) AS MEMB_P_USE_TOTL_CNT
		 , SUM( MEMB_P_USE_STOR_CNT ) AS MEMB_P_USE_STOR_CNT
		 , ROUND(SUM( MEMB_P_USE_TOTL_CNT ) / NULLIF(SUM( MEMB_P_USE_STOR_CNT ), 0) , 3) AS  MEMB_P_USE_STOR_AVG
		 , SUM( CUST_P_USE_TOTL_CNT ) AS CUST_P_USE_TOTL_CNT
		 , SUM( CUST_P_USE_STOR_CNT ) AS CUST_P_USE_STOR_CNT
		 , ROUND(SUM( CUST_P_USE_TOTL_CNT ) / NULLIF(SUM( CUST_P_USE_STOR_CNT ), 0) , 3) AS  CUST_P_USE_STOR_AVG
		 , SUM( MEMB_C_USE_TOTL_CNT ) AS MEMB_C_USE_TOTL_CNT
		 , SUM( MEMB_C_USE_STOR_CNT ) AS MEMB_C_USE_STOR_CNT
		 , ROUND(SUM( MEMB_C_USE_TOTL_CNT ) / NULLIF(SUM( MEMB_C_USE_STOR_CNT ), 0) , 3) AS  MEMB_C_USE_STOR_AVG
		 , SUM( CUST_C_USE_TOTL_CNT ) AS CUST_C_USE_TOTL_CNT
		 , SUM( CUST_C_USE_STOR_CNT ) AS CUST_C_USE_STOR_CNT
		 , ROUND(SUM( CUST_C_USE_TOTL_CNT ) / NULLIF(SUM( CUST_C_USE_STOR_CNT ), 0) , 3) AS  CUST_C_USE_STOR_AVG
    FROM   STAT_VISIT_@SCH_DATE_GUBUN@ A
    WHERE  STD_DT BETWEEN ${SCH_GFR_DATE} AND ${SCH_GTO_DATE}
    GROUP BY COMP_CD , STD_DT
]]></query>
</SQLResource>