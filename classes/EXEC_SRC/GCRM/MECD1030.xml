<?xml version='1.0' encoding='utf-8'?>
<SQLResource version='1'>
<query name='C_CARD_TYPE_Q'><![CDATA[ 
    SELECT  C.CATEGORY_DIV
         ,  C.CATEGORY_CD
         ,  C.COMP_CD
         ,  C.CARD_TYPE
         ,  C.CARD_TYPE_NM
         ,  L.LANG_NM
         ,  C.CARD_DIV
         ,  C.LC_FILE_NM
         ,  C.SV_FILE_NM
         ,  C.SV_FILE_PATH
         ,  C.TSMS_BRAND_CD
         ,  C.USE_YN
      FROM  C_CARD_TYPE     C
         ,  (
                SELECT  PK_COL
                     ,  LANG_NM
                  FROM  LANG_TABLE
                 WHERE  TABLE_NM    = 'C_CARD_TYPE'
                   AND  COL_NM      = 'CARD_TYPE_NM'
                   AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                   AND  USE_YN      = 'Y'
            )               L
     WHERE  LPAD(C.CARD_TYPE, 3, ' ')   = L.PK_COL(+)
       AND  C.COMP_CD                   = ${SCH_COMP_CD}
       AND (${SCH_BRAND_CD}      IS NULL OR C.TSMS_BRAND_CD = ${SCH_BRAND_CD})
       AND (${SCH_CARD_TYPE_TXT} IS NULL OR (C.CARD_TYPE_NM LIKE '%'||${SCH_CARD_TYPE_TXT}||'%' OR L.LANG_NM LIKE '%'||${SCH_CARD_TYPE_TXT}||'%'))
       AND (${SCH_USE_YN}        IS NULL OR C.USE_YN        = ${SCH_USE_YN})
     ORDER  BY C.CARD_TYPE
]]></query>

<query name='C_CARD_TYPE_U'><![CDATA[ 
    MERGE INTO C_CARD_TYPE
    USING DUAL
       ON (
                COMP_CD         = ${COMP_CD}
            AND CARD_TYPE       = ${CARD_TYPE}
          )
    WHEN MATCHED  THEN
        UPDATE
           SET  CATEGORY_DIV    = ${CATEGORY_DIV}
             ,  CATEGORY_CD     = ${CATEGORY_CD}
             ,  CARD_TYPE_NM    = ${CARD_TYPE_NM}
             ,  CARD_DIV        = ${CARD_DIV}
             ,  LC_FILE_NM      = NVL(${LC_FILE_NM}, LC_FILE_NM)
             ,  SV_FILE_NM      = NVL(${SV_FILE_NM}, SV_FILE_NM)
             ,  SV_FILE_PATH    = NVL(${SV_FILE_PATH}, SV_FILE_PATH)
             ,  TSMS_BRAND_CD   = ${TSMS_BRAND_CD}
             ,  USE_YN          = DECODE(${USE_YN}, 'Y', 'Y', '1', 'Y', 'N')
             ,  UPD_DT          = SYSDATE
             ,  UPD_USER        = ${USER_ID}
    WHEN NOT MATCHED THEN
        INSERT 
        (
                COMP_CD
             ,  CATEGORY_DIV
             ,  CATEGORY_CD
             ,  CARD_TYPE
             ,  CARD_TYPE_NM
             ,  CARD_DIV
             ,  LC_FILE_NM
             ,  SV_FILE_NM
             ,  SV_FILE_PATH
             ,  TSMS_BRAND_CD
             ,  USE_YN
             ,  INST_DT 
             ,  INST_USER 
             ,  UPD_DT 
             ,  UPD_USER
        ) VALUES (
                ${COMP_CD}
             ,  ${CATEGORY_DIV}
             ,  ${CATEGORY_CD}
             ,  ${CARD_TYPE}
             ,  ${CARD_TYPE_NM}
             ,  ${CARD_DIV}
             ,  NVL(${LC_FILE_NM}, ' ')
             ,  NVL(${SV_FILE_NM}, ' ')
             ,  NVL(${SV_FILE_PATH}, ' ')
             ,  ${TSMS_BRAND_CD}
             ,  DECODE(${USE_YN}, 'Y', 'Y', '1', 'Y', 'N')
             ,  SYSDATE
             ,  ${USER_ID}
             ,  SYSDATE
             ,  ${USER_ID}
        ) 
]]></query>

<query name='LANG_TABLE_U'><![CDATA[
    MERGE INTO LANG_TABLE
    USING DUAL
    ON (
                TABLE_NM    = ${TABLE_NM}
           AND  COL_NM      = ${COL_NM}
           AND  LANGUAGE_TP = ${LANGUAGE_TP}
           AND  PK_COL      = ${PK_COL}
       )
    WHEN MATCHED  THEN
        UPDATE      
           SET  LANG_NM     = ${LANG_NM}
             ,  USE_YN      = DECODE(${USE_YN}, 'Y', 'Y', '1', 'Y', 'N')
             ,  UPD_DT      = SYSDATE
             ,  UPD_USER    = ${USER_ID}
    WHEN NOT MATCHED THEN
        INSERT 
        (
                TABLE_NM
             ,  COL_NM
             ,  LANGUAGE_TP
             ,  PK_COL
             ,  LANG_NM
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER    
        ) VALUES (
                ${TABLE_NM}
             ,  ${COL_NM}
             ,  ${LANGUAGE_TP}
             ,  ${PK_COL}
             ,  ${LANG_NM}
             ,  DECODE(${USE_YN}, 'Y', 'Y', '1', 'Y', 'N')
             ,  SYSDATE
             ,  ${USER_ID}
             ,  SYSDATE
             ,  ${USER_ID} 
        )
]]></query>

<query name='C_CARD_TYPE_REP_Q'><![CDATA[ 
    SELECT  *
      FROM  (
                SELECT  COMP_CD
                     ,  CARD_TYPE
                     ,  DECRYPT(START_CARD_CD)  AS START_CARD_CD
                     ,  DECRYPT(CLOSE_CARD_CD)  AS CLOSE_CARD_CD
                     ,  ISSUE_DT
                     ,  USE_YN
                  FROM  C_CARD_TYPE_REP
                 WHERE  COMP_CD     = ${SCH_COMP_CD}
                   AND  CARD_TYPE   = ${SCH_CARD_TYPE}
                   AND  (${SCH_USE_YN} IS NULL OR USE_YN = ${SCH_USE_YN})
            )
     ORDER  BY ISSUE_DT DESC, START_CARD_CD
]]></query>

<query name='CARD_TYPE_DUP_Q'><![CDATA[ 
    SELECT  *
      FROM  (
                SELECT  R.COMP_CD
                     ,  T.BRAND_CD
                     ,  T.BRAND_NM
                     ,  R.CARD_TYPE
                     ,  T.CARD_TYPE_NM
                     ,  DECRYPT(R.START_CARD_CD)    AS START_CARD_CD
                     ,  DECRYPT(R.CLOSE_CARD_CD)    AS CLOSE_CARD_CD
                  FROM  C_CARD_TYPE_REP     R
                     ,  (
                            SELECT  C.COMP_CD
                                 ,  C.CARD_TYPE
                                 ,  NVL(L.LANG_NM, C.CARD_TYPE_NM)  AS CARD_TYPE_NM
                                 ,  C.TSMS_BRAND_CD                 AS BRAND_CD
                                 ,  B.BRAND_NM
                              FROM  C_CARD_TYPE     C
                                 ,  (
                                        SELECT  B.COMP_CD
                                             ,  B.BRAND_CD
                                             ,  NVL(L.LANG_NM, B.BRAND_NM)  AS BRAND_NM
                                          FROM  BRAND   B
                                             ,  (
                                                    SELECT  PK_COL
                                                         ,  LANG_NM
                                                      FROM  LANG_TABLE
                                                     WHERE  TABLE_NM    = 'BRAND'
                                                       AND  COL_NM      = 'BRAND_NM'
                                                       AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                                                       AND  USE_YN      = 'Y'
                                                )       L
                                         WHERE  B.BRAND_CD  = L.PK_COL(+)
                                           AND  B.COMP_CD   = ${SCH_COMP_CD}
                                           AND  B.USE_YN    = 'Y'
                                    )                   B
                                 ,  (
                                        SELECT  PK_COL
                                             ,  LANG_NM
                                          FROM  LANG_TABLE
                                         WHERE  TABLE_NM    = 'C_CARD_TYPE'
                                           AND  COL_NM      = 'CARD_TYPE_NM'
                                           AND  LANGUAGE_TP = ${SCH_LANGUAGE_TP}
                                           AND  USE_YN      = 'Y'
                                    )               L
                             WHERE  C.COMP_CD           = B.COMP_CD
                               AND  C.TSMS_BRAND_CD     = B.BRAND_CD
                               AND  LPAD(C.CARD_TYPE, 3, ' ') = L.PK_COL(+)
                               AND  C.COMP_CD   = ${SCH_COMP_CD}
                               AND  C.USE_YN    = 'Y'
                        )                       T
                 WHERE  R.COMP_CD   = T.COMP_CD
                   AND  R.CARD_TYPE = T.CARD_TYPE
                   AND  R.COMP_CD   = ${SCH_COMP_CD}
                   AND  R.USE_YN    = 'Y'
            )
     WHERE  ${SCH_START_CARD_CD} BETWEEN START_CARD_CD AND CLOSE_CARD_CD
        OR  ${SCH_CLOSE_CARD_CD} BETWEEN START_CARD_CD AND CLOSE_CARD_CD
]]></query>

<query name='C_CARD_TYPE_REP_U'><![CDATA[ 
    MERGE INTO C_CARD_TYPE_REP
    USING DUAL
       ON (
                COMP_CD         = ${COMP_CD}
            AND CARD_TYPE       = ${CARD_TYPE}
            AND START_CARD_CD   = ENCRYPT(${START_CARD_CD})
            AND CLOSE_CARD_CD   = ENCRYPT(${CLOSE_CARD_CD})
          )
    WHEN MATCHED  THEN
        UPDATE
           SET  ISSUE_DT        = ${ISSUE_DT}
             ,  USE_YN          = DECODE(${USE_YN}, 'Y', 'Y', '1', 'Y', 'N')
             ,  UPD_DT          = SYSDATE
             ,  UPD_USER        = ${USER_ID}
    WHEN NOT MATCHED THEN
        INSERT 
        (
                COMP_CD
             ,  CARD_TYPE
             ,  START_CARD_CD
             ,  CLOSE_CARD_CD
             ,  ISSUE_DT
             ,  USE_YN
             ,  INST_DT 
             ,  INST_USER 
             ,  UPD_DT 
             ,  UPD_USER
        ) VALUES (
                ${COMP_CD}
             ,  ${CARD_TYPE}
             ,  ENCRYPT(${START_CARD_CD})
             ,  ENCRYPT(${CLOSE_CARD_CD})
             ,  ${ISSUE_DT}
             ,  DECODE(${USE_YN}, 'Y', 'Y', '1', 'Y', 'N')
             ,  SYSDATE
             ,  ${USER_ID}
             ,  SYSDATE
             ,  ${USER_ID}
        ) 
]]></query>

<query name='C_CARD_TYPE_REP_D'><![CDATA[ 
    UPDATE  C_CARD_TYPE_REP
       SET  USE_YN          = 'N'
         ,  UPD_DT          = SYSDATE
         ,  UPD_USER        = ${USER_ID}
     WHERE  COMP_CD         = ${COMP_CD}
       AND  CARD_TYPE       = ${CARD_TYPE}
       AND  START_CARD_CD   = ${START_CARD_CD}
       AND  CLOSE_CARD_CD   = ${CLOSE_CARD_CD}
]]></query>

</SQLResource>

