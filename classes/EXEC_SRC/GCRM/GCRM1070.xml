<?xml version='1.0' encoding='utf-8'?>
<SQLResource version='1'>
<query name='CS_MEMBER_UPLOAD_Q'><![CDATA[
    SELECT  MU.PROC_DT
         ,  MU.SEQ
         ,  MU.INST_YN
         ,  MU.ERR_MSG
         ,  DECRYPT(MU.CUST_NM)     AS CUST_NM
         ,  MU.SEX_DIV
         ,  MU.AGES
         ,  FN_GET_FORMAT_HP_NO(DECRYPT(MU.MOBILE)) AS MOBILE
         ,  DECRYPT(MU.P_CUST_NM)   AS P_CUST_NM
         ,  MU.CERT_FDT
         ,  MU.CERT_MONTHS
         ,  MU.CERT_TDT
         ,  MU.PROGRAM_NM
         ,  MU.PROGRAM_ID
         ,  MU.REMAIN_TCNT
         ,  MU.REMAIN_NCNT
         ,  MU.BRAND_CD
         ,  MU.STOR_CD
         ,  S.STOR_NM
         ,  TO_CHAR(MU.INST_DT, 'YYYY-MM-DD HH24:MI:SS')    AS INST_DT
         ,  HU.USER_NM              AS INST_USER
      FROM  CS_MEMBER_UPLOAD    MU
         ,  STORE               S
         ,  HQ_USER             HU
     WHERE  MU.BRAND_CD     = S.BRAND_CD(+)
       AND  MU.STOR_CD      = S.STOR_CD(+)
       AND  MU.INST_USER    = HU.USER_ID(+)
       AND  MU.PROC_DT      = ${SCH_PROC_DT}
       AND  (${SCH_BRAND_CD} IS NULL OR MU.BRAND_CD = ${SCH_BRAND_CD})
       AND  (${SCH_STOR_CD}  IS NULL OR MU.STOR_CD  = ${SCH_STOR_CD})
       AND  (${SCH_INST_YN}  IS NULL OR MU.INST_YN  = ${SCH_INST_YN})
       AND  S.COMP_CD(+)    = ${SCH_COMP_CD}
       AND  HU.COMP_CD(+)   = ${SCH_COMP_CD}
     ORDER  BY TO_NUMBER(MU.SEQ)
]]></query>

<query name='MOBILE_CHK_Q'><![CDATA[
    SELECT  MEMBER_NO
      FROM  CS_MEMBER
     WHERE  COMP_CD     = ${SCH_COMP_CD}
       AND  MOBILE      = ENCRYPT(${SCH_MOBILE})
]]></query>

<query name='STORE_CHK_Q'><![CDATA[
    SELECT  STOR_NM
      FROM  STORE
     WHERE  COMP_CD     = ${SCH_COMP_CD}
       AND  BRAND_CD    = ${SCH_BRAND_CD}
       AND  STOR_CD     = ${SCH_STOR_CD}
]]></query>

<query name='MEMBERSHIP_CHK_Q'><![CDATA[
    SELECT  M.PROGRAM_ID
         ,  M.MBS_NO
         ,  M.MBS_NM
         ,  M.MBS_DIV
         ,  M.CHARGE_YN
         ,  M.BASE_OFFER_TM
         ,  M.BASE_OFFER_CNT
         ,  M.BASE_OFFER_MCNT
         ,  P.BASE_USE_TM
      FROM  CS_MEMBERSHIP           M
         ,  CS_MEMBERSHIP_STORE     MS
         ,  CS_PROGRAM              P
         ,  CS_PROGRAM_STORE        PS
     WHERE  M.COMP_CD   = MS.COMP_CD
       AND  M.PROGRAM_ID= MS.PROGRAM_ID
       AND  M.MBS_NO    = MS.MBS_NO
       AND  M.COMP_CD   = P.COMP_CD
       AND  M.PROGRAM_ID= P.PROGRAM_ID
       AND  P.COMP_CD   = PS.COMP_CD
       AND  P.PROGRAM_ID= PS.PROGRAM_ID
       AND  M.COMP_CD   = ${SCH_COMP_CD}
       AND  MS.USE_BRAND_CD = ${SCH_BRAND_CD}
       AND  MS.USE_STOR_CD  = ${SCH_STOR_CD}
       AND  M.MBS_NO    = ${SCH_MBS_NO}
       AND  M.USE_YN    = 'Y'
       AND  MS.USE_YN   = 'Y'
       AND  P.USE_YN    = 'Y'
       AND  PS.BRAND_CD = ${SCH_BRAND_CD}
       AND  PS.STOR_CD  = ${SCH_STOR_CD}
       AND  PS.USE_YN   = 'Y'
]]></query>

<query name='ENTR_PRC_Q'><![CDATA[
    SELECT  NVL(NVL(SI.SALE_PRC, PI.SALE_PRC), 0)   AS ENTR_PRC
      FROM  (
                SELECT  P.COMP_CD
                     ,  P.BRAND_CD
                     ,  P.PROGRAM_ID
                     ,  I.SALE_PRC
                  FROM  CS_PROGRAM      P
                     ,  ITEM_CHAIN      I
                 WHERE  P.COMP_CD       = I.COMP_CD
                   AND  P.BRAND_CD      = I.BRAND_CD
                   AND  P.PGM_ITEM_CD   = I.ITEM_CD
                   AND  P.COMP_CD       = ${SCH_COMP_CD}
                   AND  P.PROGRAM_ID    = ${SCH_PROGRAM_ID}
                   AND  P.BRAND_CD      = ${SCH_BRAND_CD}
                   AND  P.USE_YN        = 'Y'
                   AND  I.STOR_TP       = '10'
                   AND  I.USE_YN        = 'Y'
            )   PI
         ,  (
                SELECT  P.COMP_CD
                     ,  P.BRAND_CD
                     ,  I.STOR_CD
                     ,  P.PROGRAM_ID
                     ,  I.PRICE         AS SALE_PRC
                  FROM  CS_PROGRAM      P
                     ,  ITEM_STORE      I
                 WHERE  P.COMP_CD       = I.COMP_CD(+)
                   AND  P.BRAND_CD      = I.BRAND_CD(+)
                   AND  P.PGM_ITEM_CD   = I.ITEM_CD(+)
                   AND  P.COMP_CD       = ${SCH_COMP_CD}
                   AND  P.PROGRAM_ID    = ${SCH_PROGRAM_ID}
                   AND  P.BRAND_CD      = ${SCH_BRAND_CD}
                   AND  I.STOR_CD(+)    = ${SCH_STOR_CD}
                   AND  I.PRC_DIV(+)    = '02'
                   AND  P.USE_YN        = 'Y'
                   AND  TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN I.START_DT AND NVL(I.CLOSE_DT, '99991231')
                   AND  I.USE_YN(+)     = 'Y'
            )   SI
     WHERE  PI.COMP_CD      = SI.COMP_CD(+)
       AND  PI.BRAND_CD     = SI.BRAND_CD(+)
       AND  PI.PROGRAM_ID   = SI.PROGRAM_ID(+)
]]></query>

<query name='SALE_AMT_Q'><![CDATA[
    SELECT  NVL(NVL(SI.SALE_PRC, MI.SALE_PRC), 0)   AS SALE_AMT
      FROM  (
                SELECT  M.COMP_CD
                     ,  M.BRAND_CD
                     ,  M.PROGRAM_ID
                     ,  M.MBS_NO
                     ,  I.SALE_PRC
                  FROM  CS_MEMBERSHIP   M
                     ,  ITEM_CHAIN      I
                 WHERE  M.COMP_CD       = I.COMP_CD
                   AND  M.BRAND_CD      = I.BRAND_CD
                   AND  M.MBS_ITEM_CD   = I.ITEM_CD
                   AND  M.COMP_CD       = ${SCH_COMP_CD}
                   AND  M.PROGRAM_ID    = ${SCH_PROGRAM_ID}
                   AND  M.MBS_NO        = ${SCH_MBS_NO}
                   AND  M.BRAND_CD      = ${SCH_BRAND_CD}
                   AND  M.USE_YN        = 'Y'
                   AND  I.STOR_TP       = '10'
                   AND  I.USE_YN        = 'Y'
            )   MI
         ,  (
                SELECT  M.COMP_CD
                     ,  M.BRAND_CD
                     ,  I.STOR_CD
                     ,  M.PROGRAM_ID
                     ,  M.MBS_NO
                     ,  I.PRICE         AS SALE_PRC
                  FROM  CS_MEMBERSHIP   M
                     ,  ITEM_STORE      I
                 WHERE  M.COMP_CD       = I.COMP_CD(+)
                   AND  M.BRAND_CD      = I.BRAND_CD(+)
                   AND  M.MBS_ITEM_CD   = I.ITEM_CD(+)
                   AND  M.COMP_CD       = ${SCH_COMP_CD}
                   AND  M.PROGRAM_ID    = ${SCH_PROGRAM_ID}
                   AND  M.MBS_NO        = ${SCH_MBS_NO}
                   AND  M.BRAND_CD      = ${SCH_BRAND_CD}
                   AND  I.STOR_CD(+)    = ${SCH_STOR_CD}
                   AND  I.PRC_DIV(+)    = '02'
                   AND  M.USE_YN        = 'Y'
                   AND  TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN I.START_DT AND NVL(I.CLOSE_DT, '99991231')
                   AND  I.USE_YN(+)     = 'Y'
            )   SI
     WHERE  MI.COMP_CD      = SI.COMP_CD(+)
       AND  MI.BRAND_CD     = SI.BRAND_CD(+)
       AND  MI.PROGRAM_ID   = SI.PROGRAM_ID(+)
       AND  MI.MBS_NO       = SI.MBS_NO(+)
]]></query>

<query name='MEMBER_NO_Q'><![CDATA[
    SELECT  TO_CHAR(SYSDATE, 'YY')  || 
            LPAD(SQ_CS_MEMBER.NEXTVAL, 8, '0')  AS MEMBER_NO
      FROM  DUAL
]]></query>

<query name='CS_MEMBER_I'><![CDATA[
    MERGE   INTO CS_MEMBER
    USING   DUAL
       ON   (
                    COMP_CD     = ${COMP_CD}
                AND MEMBER_NO   = ${MEMBER_NO}
            )
    WHEN NOT MATCHED THEN
        INSERT 
        (
                COMP_CD
             ,  MEMBER_NO
             ,  MEMBER_NM
             ,  MEMBER_DIV
             ,  ORG_NM
             ,  MOBILE
             ,  MOBILE_N3
             ,  ADDR1
             ,  ADDR2
             ,  REMARKS
             ,  JOIN_DT
             ,  BRAND_CD
             ,  STOR_CD
             ,  AGREE_DT
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER  
        ) VALUES (
                ${COMP_CD}
             ,  ${MEMBER_NO}
             ,  ENCRYPT(TRIM(${MEMBER_NM}))
             ,  '1'
             ,  NULL
             ,  ENCRYPT(REPLACE(${MOBILE}, '-', ''))
             ,  SUBSTR(REPLACE(${MOBILE}, '-', ''), LENGTH(REPLACE(${MOBILE}, '-', '')) - 3, LENGTH(REPLACE(${MOBILE}, '-', '')))
             ,  NULL
             ,  NULL
             ,  'NJ 이관 회원 [ ' || TO_CHAR(SYSDATE, 'YYYY-MM-DD') || ' ]'
             ,  ${JOIN_DT}
             ,  ${BRAND_CD}
             ,  ${STOR_CD}
             ,  ${JOIN_DT}
             ,  'Y'
             ,  SYSDATE
             ,  'SYSTEM'
             ,  SYSDATE
             ,  'SYSTEM'
    )
]]></query>

<query name='CS_MEMBER_EXT_I'><![CDATA[
    MERGE   INTO CS_MEMBER_EXT
    USING   DUAL
       ON   (
                    COMP_CD     = ${COMP_CD}
                AND MEMBER_NO   = ${MEMBER_NO}
            )
    WHEN NOT MATCHED THEN
        INSERT 
        (
                COMP_CD
             ,  MEMBER_NO
             ,  SEX_DIV
             ,  SMS_RCV_YN
        ) VALUES (
                ${COMP_CD}
             ,  ${MEMBER_NO}
             ,  'F'
             ,  'Y'
    )
]]></query>

<query name='CS_MEMBER_STORE_I'><![CDATA[
    MERGE   INTO CS_MEMBER_STORE
    USING   DUAL
       ON   (
                    COMP_CD     = ${COMP_CD}
                AND MEMBER_NO   = ${MEMBER_NO}
                AND BRAND_CD    = ${BRAND_CD}
                AND STOR_CD     = ${STOR_CD}
            )
    WHEN MATCHED  THEN
        UPDATE      
           SET  USE_YN          = 'Y'
             ,  UPD_DT          = SYSDATE
             ,  UPD_USER        = ${UPD_USER}
    WHEN NOT MATCHED THEN
        INSERT 
        (
                COMP_CD
             ,  MEMBER_NO
             ,  BRAND_CD
             ,  STOR_CD
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER  
        ) VALUES (
                ${COMP_CD}
             ,  ${MEMBER_NO}
             ,  ${BRAND_CD}
             ,  ${STOR_CD}
             ,  'Y'
             ,  SYSDATE
             ,  ${UPD_USER}
             ,  SYSDATE
             ,  ${UPD_USER}
    )
]]></query>

<query name='CS_MEMBER_CHILD_I'><![CDATA[
    MERGE   INTO CS_MEMBER_CHILD
    USING   DUAL
       ON   (
                    COMP_CD     = ${COMP_CD}
                AND MEMBER_NO   = ${MEMBER_NO}
                AND CHILD_NO    = ${CHILD_NO}
            )
    WHEN NOT MATCHED THEN
        INSERT 
        (
                COMP_CD
             ,  MEMBER_NO
             ,  CHILD_NO
             ,  CHILD_NM
             ,  SEX_DIV
             ,  BIRTH_DT
             ,  AGES
             ,  ANVS_DT
             ,  REMARKS
             ,  JOIN_DT
             ,  BRAND_CD
             ,  STOR_CD
             ,  USE_YN
             ,  INST_DT
             ,  INST_USER
             ,  UPD_DT
             ,  UPD_USER
        ) VALUES (
                ${COMP_CD}
             ,  ${MEMBER_NO}
             ,  (
                    SELECT  NVL(MAX(TO_NUMBER(CHILD_NO)), 0) + 1
                      FROM  CS_MEMBER_CHILD
                     WHERE  COMP_CD     = ${COMP_CD}
                       AND  MEMBER_NO   = ${MEMBER_NO}
                )
             ,  ENCRYPT(TRIM(${CHILD_NM}))
             ,  CASE WHEN ${SEX_DIV} = '남자' THEN 'M' WHEN ${SEX_DIV} = '여자' THEN 'F' ELSE 'M' END
             ,  NULL
             ,  NVL(${AGES}, '0')
             ,  NULL
             ,  NULL
             ,  ${JOIN_DT}
             ,  ${BRAND_CD}
             ,  ${STOR_CD}
             ,  'Y'
             ,  SYSDATE
             ,  ${UPD_USER}
             ,  SYSDATE
             ,  ${UPD_USER}
        )
]]></query>

<query name='CERT_NO_Q'><![CDATA[
    WITH CERT AS
    (
        SELECT  TO_CHAR(SYSDATE, 'YYMM')    ||
                ${SCH_BRAND_CD}             ||
                ${SCH_CHARGE_YN}            ||
                LPAD(NVL(MAX(TO_NUMBER(SUBSTR(CERT_NO, LENGTH(${SCH_BRAND_CD}) + 6, 6))), 0) + 1, 6, '0')  AS CERT_NO
          FROM  CS_MEMBERSHIP_SALE
         WHERE  COMP_CD     = ${SCH_COMP_CD}
           AND  SUBSTR(CERT_NO, 1, LENGTH(${SCH_BRAND_CD}) + 5) = TO_CHAR(SYSDATE, 'YYMM')||${SCH_BRAND_CD}||${SCH_CHARGE_YN}
    )
    SELECT  CERT_NO ||
            MOD(
                TO_NUMBER(SUBSTR(CERT_NO, 1 , 1)) * 3 + TO_NUMBER(SUBSTR(CERT_NO, 2 , 1)) * 2 +  
                TO_NUMBER(SUBSTR(CERT_NO, 3 , 1)) * 3 + TO_NUMBER(SUBSTR(CERT_NO, 4 , 1)) * 2 +  
                TO_NUMBER(SUBSTR(CERT_NO, 5 , 1)) * 3 + TO_NUMBER(SUBSTR(CERT_NO, 6 , 1)) * 2 + 
                TO_NUMBER(SUBSTR(CERT_NO, 7 , 1)) * 3 + TO_NUMBER(SUBSTR(CERT_NO, 8 , 1)) * 2 +  
                TO_NUMBER(SUBSTR(CERT_NO, 9 , 1)) * 3 + TO_NUMBER(SUBSTR(CERT_NO, 10, 1)) * 2 +  
                TO_NUMBER(SUBSTR(CERT_NO, 11, 1)) * 3 + TO_NUMBER(SUBSTR(CERT_NO, 12, 1)) * 2 + 
                TO_NUMBER(SUBSTR(CERT_NO, 13, 1)) * 3 + TO_NUMBER(SUBSTR(CERT_NO, 14, 1)) * 2
                , 10)       AS CERT_NO
      FROM  CERT
]]></query>

<query name='CS_MEMBERSHIP_SALE_I'><![CDATA[
    INSERT  INTO CS_MEMBERSHIP_SALE
    (
            COMP_CD
         ,  PROGRAM_ID
         ,  MBS_NO
         ,  CERT_NO
         ,  MEMBER_NO
         ,  MOBILE
         ,  MBS_DIV
         ,  MBS_STAT
         ,  CHARGE_YN
         ,  CERT_FDT
         ,  CERT_TDT
         ,  SALE_DIV
         ,  ENTR_PRC
         ,  SALE_AMT
         ,  DC_AMT
         ,  GRD_AMT
         ,  SALE_BRAND_CD
         ,  SALE_STOR_CD
         ,  USE_DIV
         ,  OFFER_TM
         ,  USE_TM
         ,  OFFER_CNT
         ,  USE_CNT
         ,  OFFER_AMT
         ,  USE_AMT
         ,  OFFER_MCNT
         ,  USE_MCNT
         ,  USE_YN
         ,  INST_DT
         ,  INST_USER
         ,  UPD_DT
         ,  UPD_USER

    ) VALUES (
            ${COMP_CD}
         ,  ${PROGRAM_ID}
         ,  ${MBS_NO}
         ,  ${CERT_NO}
         ,  ${MEMBER_NO}
         ,  (
                SELECT  MOBILE
                  FROM  CS_MEMBER
                 WHERE  COMP_CD     = ${COMP_CD}
                   AND  MEMBER_NO   = ${MEMBER_NO}
            )
         ,  ${MBS_DIV}
         ,  '10'
         ,  ${CHARGE_YN}
         ,  ${CERT_FDT}
         ,  ${CERT_TDT}
         ,  '1'
         ,  NVL(${ENTR_PRC}, 0)
         ,  NVL(${SALE_AMT}, 0)
         ,  0
         ,  NVL(${SALE_AMT}, 0)
         ,  ${BRAND_CD}
         ,  ${STOR_CD}
         ,  '00'
         ,  (
                CASE WHEN ${MBS_DIV} = '1' THEN TO_NUMBER(NVL(${OFFER_CNT}, '0'))
                     WHEN ${MBS_DIV} = '2' THEN TO_NUMBER(NVL(${OFFER_CNT}, '0')) * TO_NUMBER(NVL(${BASE_USE_TM}, '0'))
                     ELSE 0
                END
            )
         ,  (
                CASE WHEN ${MBS_DIV} = '1' THEN TO_NUMBER(NVL(${OFFER_CNT}, '0')) - TO_NUMBER(NVL(${REMAIN_CNT}, '0'))
                     WHEN ${MBS_DIV} = '2' THEN (TO_NUMBER(NVL(${OFFER_CNT}, '0')) - TO_NUMBER(NVL(${REMAIN_CNT}, '0'))) * TO_NUMBER(NVL(${BASE_USE_TM}, '0'))
                     ELSE 0
                END
            )
         ,  (
                CASE WHEN ${MBS_DIV} = '2' THEN TO_NUMBER(NVL(${OFFER_CNT}, '0'))
                     ELSE 0
                END
            )
         ,  (
                CASE WHEN ${MBS_DIV} = '2' THEN TO_NUMBER(NVL(${OFFER_CNT}, '0')) - TO_NUMBER(NVL(${REMAIN_CNT}, '0'))
                     ELSE 0
                END
            )
         ,  (
                CASE WHEN ${MBS_DIV} = '1' THEN TO_NUMBER(NVL(${SALE_AMT}, '0'))
                     WHEN ${MBS_DIV} = '2' THEN TO_NUMBER(NVL(${SALE_AMT}, '0'))
                     ELSE 0
                END
            )
         ,  (
                CASE WHEN ${MBS_DIV} = '1' THEN ROUND(TO_NUMBER(NVL(${SALE_AMT}, '0')) / TO_NUMBER(NVL(${OFFER_CNT}, 0)) * (TO_NUMBER(NVL(${OFFER_CNT}, 0) - TO_NUMBER(NVL(${REMAIN_CNT}, 0)))))
                     WHEN ${MBS_DIV} = '2' THEN ROUND(TO_NUMBER(NVL(${SALE_AMT}, '0')) / TO_NUMBER(NVL(${OFFER_CNT}, 0)) * (TO_NUMBER(NVL(${OFFER_CNT}, 0) - TO_NUMBER(NVL(${REMAIN_CNT}, 0)))))
                     ELSE 0
                END
            )
         ,  CASE WHEN TO_NUMBER(NVL(${OFFER_MCNT}, 0)) > 0 THEN TO_NUMBER(NVL(${OFFER_MCNT}, 0)) ELSE 0 END
         ,  CASE WHEN TO_NUMBER(NVL(${OFFER_MCNT}, 0)) > 0 THEN
                                                                (
                                                                    CASE WHEN ${MBS_DIV} = '1' THEN TO_NUMBER(NVL(${OFFER_MCNT}, '0')) - TRUNC(TO_NUMBER(NVL(${OFFER_MCNT}, '0')) / (TO_NUMBER(NVL(${OFFER_CNT}, '0')) / TO_NUMBER(NVL(${REMAIN_CNT}, '0'))))
                                                                         WHEN ${MBS_DIV} = '2' THEN TO_NUMBER(NVL(${OFFER_CNT}, '0'))  - TO_NUMBER(NVL(${REMAIN_CNT}, '0'))
                                                                         ELSE 0
                                                                    END
                                                                )
                 ELSE 0 
            END
         ,  'Y'
         ,  SYSDATE
         ,  ${UPD_USER}
         ,  SYSDATE
         ,  ${UPD_USER}
    )
]]></query>

<query name='APPR_SEQ_Q'><![CDATA[
    SELECT  NVL(MAX(TO_NUMBER(APPR_SEQ)), 0) + 1  AS APPR_SEQ 
      FROM  CS_MEMBERSHIP_SALE_HIS
     WHERE  COMP_CD     = ${SCH_COMP_CD}
       AND  PROGRAM_ID  = ${SCH_PROGRAM_ID}
       AND  MBS_NO      = ${SCH_MBS_NO}
       AND  CERT_NO     = ${SCH_CERT_NO}
]]></query>

<query name='CS_MEMBERSHIP_SALE_HIS_I'><![CDATA[
    INSERT  INTO CS_MEMBERSHIP_SALE_HIS
    (
            COMP_CD
         ,  PROGRAM_ID
         ,  MBS_NO
         ,  CERT_NO
         ,  APPR_SEQ
         ,  APPR_DT
         ,  APPR_TM
         ,  MBS_DIV
         ,  SALE_USE_DIV
         ,  SALE_DIV
         ,  USE_STAT
         ,  MEMBER_NO
         ,  USE_TM
         ,  USE_CNT
         ,  USE_AMT
         ,  USE_MCNT
         ,  SALE_BRAND_CD
         ,  SALE_STOR_CD
         ,  SALE_AMT
         ,  DC_AMT
         ,  GRD_AMT
         ,  INST_DT
         ,  INST_USER
         ,  UPD_DT
         ,  UPD_USER
    ) VALUES (
            ${COMP_CD}
         ,  ${PROGRAM_ID}
         ,  ${MBS_NO}
         ,  ${CERT_NO}
         ,  ${APPR_SEQ}
         ,  ${CERT_FDT}
         ,  TO_CHAR(SYSDATE, 'HH24MISS')
         ,  ${MBS_DIV}
         ,  '2'
         ,  '3'
         ,  '10'
         ,  ${MEMBER_NO}
         ,  (
                CASE WHEN ${MBS_DIV} = '1' THEN TO_NUMBER(NVL(${OFFER_CNT}, '0')) - TO_NUMBER(NVL(${REMAIN_CNT}, '0'))
                     WHEN ${MBS_DIV} = '2' THEN (TO_NUMBER(NVL(${OFFER_CNT}, '0')) - TO_NUMBER(NVL(${REMAIN_CNT}, '0'))) * TO_NUMBER(NVL(${BASE_USE_TM}, '0'))
                     ELSE 0
                END
            )
         ,  (
                CASE WHEN ${MBS_DIV} = '2' THEN TO_NUMBER(NVL(${OFFER_CNT}, '0')) - TO_NUMBER(NVL(${REMAIN_CNT}, '0'))
                     ELSE 0
                END
            )
         ,  (
                CASE WHEN ${MBS_DIV} = '1' THEN ROUND(TO_NUMBER(NVL(${SALE_AMT}, '0')) / TO_NUMBER(NVL(${OFFER_CNT}, 0)) * (TO_NUMBER(NVL(${OFFER_CNT}, 0) - TO_NUMBER(NVL(${REMAIN_CNT}, 0)))))
                     WHEN ${MBS_DIV} = '2' THEN ROUND(TO_NUMBER(NVL(${SALE_AMT}, '0')) / TO_NUMBER(NVL(${OFFER_CNT}, 0)) * (TO_NUMBER(NVL(${OFFER_CNT}, 0) - TO_NUMBER(NVL(${REMAIN_CNT}, 0)))))
                     ELSE 0
                END
            )
         ,  CASE WHEN TO_NUMBER(NVL(${OFFER_MCNT}, 0)) > 0 THEN
                                                                (
                                                                    CASE WHEN ${MBS_DIV} = '1' THEN TO_NUMBER(NVL(${OFFER_MCNT}, '0')) - TRUNC(TO_NUMBER(NVL(${OFFER_MCNT}, '0')) / (TO_NUMBER(NVL(${OFFER_CNT}, '0')) / TO_NUMBER(NVL(${REMAIN_CNT}, '0'))))
                                                                         WHEN ${MBS_DIV} = '2' THEN TO_NUMBER(NVL(${OFFER_CNT}, '0'))  - TO_NUMBER(NVL(${REMAIN_CNT}, '0'))
                                                                         ELSE 0
                                                                    END
                                                                )
                 ELSE 0 
            END
         ,  ${BRAND_CD}
         ,  ${STOR_CD}
         ,  NVL(${SALE_AMT}, 0)
         ,  0
         ,  NVL(${SALE_AMT}, 0)
         ,  SYSDATE
         ,  ${UPD_USER}
         ,  SYSDATE
         ,  ${UPD_USER}
    )
]]></query>

<query name='CS_MEMBER_UPLOAD_I'><![CDATA[
    INSERT  INTO CS_MEMBER_UPLOAD
    (
            PROC_DT
         ,  SEQ
         ,  CUST_NM
         ,  SEX_DIV
         ,  AGES
         ,  MOBILE
         ,  P_CUST_NM
         ,  CERT_FDT
         ,  CERT_MONTHS
         ,  CERT_TDT
         ,  PROGRAM_NM
         ,  PROGRAM_ID
         ,  REMAIN_TCNT
         ,  REMAIN_NCNT
         ,  BRAND_CD
         ,  STOR_CD
         ,  INST_YN
         ,  ERR_MSG
         ,  INST_DT
         ,  INST_USER
    ) VALUES (
            TO_CHAR(SYSDATE, 'YYYYMMDD')
         ,  (
                SELECT  NVL(MAX(TO_NUMBER(SEQ)), 0) + 1
                  FROM  CS_MEMBER_UPLOAD
                 WHERE  PROC_DT = TO_CHAR(SYSDATE, 'YYYYMMDD')
            )
         ,  ENCRYPT(${CUST_NM})
         ,  ${SEX_DIV}
         ,  ${AGES}
         ,  ENCRYPT(REPLACE(${MOBILE}, '-', ''))
         ,  ENCRYPT(${P_CUST_NM})
         ,  ${CERT_FDT}
         ,  ${CERT_MONTHS}
         ,  ${CERT_TDT}
         ,  ${PROGRAM_NM}
         ,  ${PROGRAM_ID}
         ,  ${REMAIN_TCNT}
         ,  ${REMAIN_NCNT}
         ,  ${BRAND_CD}
         ,  ${STOR_CD}
         ,  ${INST_YN}
         ,  ${ERR_MSG}
         ,  SYSDATE
         ,  ${INST_USER}
    )
]]></query>

</SQLResource>

